{
	"id": "333c0a5ff2002abc195cc2eda91bb123",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Midas_V1.2/interfaces/IMidasPair721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IMidasFactory721} from \"./IMidasFactory721.sol\";\nimport {IMidasFlashLoanCallback} from \"./IMidasFlashLoanCallback.sol\";\nimport {LPToken} from \"../LPToken.sol\";\n\n/// @title Midas Pair Interface\n/// @author midaswap\n/// @notice Required interface of Midas Pair contract\n\ninterface IMidasPair721 {\n\n    event SellNFT(uint256 nftTokenId, address from, uint24 tradeBin, uint128 lpTokenID);\n\n    event BuyNFT(uint256 nftTokenId, address from, uint24 tradeBin, uint128 lpTokenID);\n\n    event ERC721PositionMinted(uint128 lpTokenId, uint24 binLower, uint24 binStep, uint256[] _NFTIDs);\n\n    event ERC20PositionMinted(uint128 lpTokenId, uint24 binLower, uint24 binStep, uint256 binAmount);\n    \n    event PositionBurned(uint128 lpTokenId, address owner, uint128 feeCollected);\n\n    event ClaimFee(uint128 lpTokenId , address owner , uint256 feeCollected);\n\n    event FlashLoan(address caller, IMidasFlashLoanCallback receiver, uint256[] NFTIDs);\n\n    function initialize() external;\n    \n    function getTokenX() external view returns (IERC721);\n\n    function getTokenY() external view returns (IERC20);\n\n    function getLPToken() external view returns (LPToken) ;\n\n    function factory() external view returns (IMidasFactory721);\n\n    function getReserves()\n        external\n        view\n        returns (\n            uint128 reserveX,\n            uint128 reserveY\n        );\n    function getIDs()\n        external\n        view\n        returns (\n            uint24 floorPriceID,\n            uint24 bestOfferID,\n            uint128 currentPositionID\n        );\n\n    function getGlobalFees()\n        external\n        view\n        returns (\n            uint128 feesYTotal,\n            uint128 feesYProtocol\n        );\n\n\n    function feeParameters() external view returns (uint128 , uint128 , uint128);\n\n    function getBin(uint24 id) external view returns (uint128 reserveX, uint128 reserveY);\n\n    function getLpInfos(uint128 _LPtokenID)  \n        external \n        view \n        returns(uint24 originBin , uint24 binStep , uint128 _fee);\n\n    function getPriceFromBin(uint24 _id)\n        external \n        pure \n        returns(uint128 _Price);\n\n    function getLPFromNFT(uint256 _NFTID)\n        external \n        view \n        returns(uint128 _LPtoken );\n\n    function getBinParamFromLP(uint128 _lpTokenID , uint256 _amount)\n        external \n        view\n        returns(uint128 _totalPrice);\n\n    function getLpReserve(uint128 _lpTokenID) external view returns (uint128 amountX, uint128 amountY);\n\n    function sellNFT(uint256 NFTID,  address _to) external returns (uint128 _amountOut);\n    \n    function buyNFT(uint256 NFTID, address _to) external;\n\n    function mintNFT(\n        uint24[] calldata ids,\n        uint256[] calldata NFTIDs,\n        address to,\n        bool isLimited\n    )\n        external\n        returns (\n            uint256 number, \n            uint128 LPtokenID\n        );\n    \n    function mintFT(\n        uint24[] calldata ids,\n        address to\n    )\n        external\n        returns (\n            uint128 amountIn,\n            uint128 LPtokenID\n        );\n\n    function burn(\n        uint128 LPtokenID,\n        address _nftReceiver,\n        address to\n    ) external returns (uint128 amountY);\n\n    function collectProtocolFees() external returns (uint128 amountY);\n\n    function collectLPFees(uint128 LPtokenID , address _to) external returns (uint128 amountFee);\n\n    function collectRoyaltyFees() external returns (uint128 amountY);\n    \n    function updateRoyalty(uint128 _newRate , address payable[] calldata newrecipients, uint256[] calldata newshares) external;\n\n    function flashLoan(IMidasFlashLoanCallback receiver, uint256[] calldata NFTlist, bytes calldata data) external;\n}\n"
			},
			"Midas_V1.2/LPToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport {ERC721} from \"./libraries/ERC721.sol\";\nimport {Strings} from \"./libraries/Strings.sol\";\nimport {IMidasPair721} from \"./interfaces/IMidasPair721.sol\";\n\n/// @title Midas LP Token\n/// @author midaswap\n/// @notice Non-fungible token which wraps the positions of LPs\n\ncontract LPToken is ERC721 {\n\n    string public name;\n    string public symbol;\n\n    using Strings for uint256;\n    using Strings for address;\n\n    // Factory address\n    address public immutable factory;\n    // Pair address\n    address public pair;\n    // Token X address\n    address public tokenX;\n    // Token Y address\n    address public tokenY;\n    // Maintain State of LPT contract\n    bool public initialized;\n\n    constructor(address _factory) {\n        factory = _factory;\n        initialized = false;\n    }\n\n\n    function initialize(\n        address _pair,\n        address _tokenX,\n        address _tokenY,\n        string calldata _name,\n        string calldata _symbol\n    ) external virtual {\n        require(msg.sender == factory);\n        require(initialized == false);\n        pair = _pair;\n        tokenX = _tokenX;\n        tokenY = _tokenY;\n        name = _name;\n        symbol = _symbol;\n        initialized = true;\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(_ownerOf[tokenId] != address(0));\n        string memory baseURI = _baseURI();\n        return\n            bytes(baseURI).length > 0\n                ? string(\n                    abi.encodePacked(\n                        baseURI,\n                        tokenX.toHexString(),\n                        \"/\",\n                        tokenY.toHexString(),\n                        \"/\",\n                        tokenId.toString()\n                    )\n                )\n                : \"\";\n    }\n\n    function mint(address to, uint256 tokenId) external virtual {\n        require(msg.sender == pair);\n        _mint(to, tokenId);\n    }\n\n    function burn(uint256 tokenId) external virtual {\n        require(msg.sender == pair);\n        _burn(tokenId);\n    }\n\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"www.midaswap.org/\";\n    }\n\n    function getReserves(uint128 tokenId) external view virtual returns (uint128 xReserves, uint128 yReserves) {\n        (xReserves, yReserves) = IMidasPair721(pair).getLpReserve(tokenId);\n    }\n}"
			},
			"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n/// @title Midas Flashloan Callback Interface\n/// @author Midas\n/// @notice Required interface to interact with Midas flash loans\ninterface IMidasFlashLoanCallback {\n    function MidasFlashLoanCallback(\n        address sender,\n        IERC721 tokenX,\n        uint256[] calldata NFTlist,\n        bytes calldata data\n    ) external returns (bytes32);\n}"
			},
			"Midas_V1.2/interfaces/IMidasFactory721.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.10;\n\ninterface IMidasFactory721 {\n\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    event FeeRateChanged(uint128 indexed oldFee, uint128 indexed newFee);\n\n    event PairImplementationSet(address indexed oldPair, address indexed newPair);\n\n    event LptImplementationSet(address indexed oldLPT, address indexed newLPT);\n\n    event PairCreated(\n        address indexed tokenX,\n        address indexed tokenY,\n        uint256 indexed feeRate,\n        address pair,\n        address lpToken\n    );\n\n    function createERC721Pair(\n        address _token0,\n        address _token1\n    ) external returns (address lpToken, address pair);\n\n    function feeRecipient() external view returns (address _feeRecipient);\n\n    function getPairERC721(\n        address tokenA,\n        address tokenB\n    ) external view returns (address pair);\n\n    function getLPTokenERC721(\n        address tokenA,\n        address tokenB\n    ) external view returns (address lpToken);\n \n    function setRoyaltyInfo(\n        address _nftAddress,\n        address _pair\n    ) external;\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"Midas_V1.2/libraries/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.10;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length;\n            length = log10(value) + 1;\n            string memory buffer;\n            buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory) {\n        bytes memory buffer;\n        buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n}\n"
			},
			"Midas_V1.2/libraries/ERC721.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)\nabstract contract ERC721 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed id\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 indexed id\n    );\n\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /*//////////////////////////////////////////////////////////////\n                         METADATA STORAGE/LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function tokenURI(uint256 id) public view virtual returns (string memory);\n\n    /*//////////////////////////////////////////////////////////////\n                      ERC721 BALANCE/OWNER STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(uint256 => address) internal _ownerOf;\n\n    mapping(address => uint256) internal _balanceOf;\n\n    function ownerOf(uint256 id) public view virtual returns (address owner) {\n        require((owner = _ownerOf[id]) != address(0), \"NOT_MINTED\");\n    }\n\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        require(owner != address(0), \"ZERO_ADDRESS\");\n\n        return _balanceOf[owner];\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                         ERC721 APPROVAL STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(uint256 => address) public getApproved;\n\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC721 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 id) public virtual {\n        address owner = _ownerOf[id];\n\n        require(\n            msg.sender == owner || isApprovedForAll[owner][msg.sender],\n            \"NOT_AUTHORIZED\"\n        );\n\n        getApproved[id] = spender;\n\n        emit Approval(owner, spender, id);\n    }\n\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        isApprovedForAll[msg.sender][operator] = approved;\n\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    function transferFrom(address from, address to, uint256 id) public virtual {\n        require(from == _ownerOf[id], \"WRONG_FROM\");\n\n        require(to != address(0), \"INVALID_RECIPIENT\");\n\n        require(\n            msg.sender == from ||\n                isApprovedForAll[from][msg.sender] ||\n                msg.sender == getApproved[id],\n            \"NOT_AUTHORIZED\"\n        );\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        unchecked {\n            _balanceOf[from]--;\n\n            _balanceOf[to]++;\n        }\n\n        _ownerOf[id] = to;\n\n        delete getApproved[id];\n\n        emit Transfer(from, to, id);\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id\n    ) public virtual {\n        transferFrom(from, to, id);\n\n        require(\n            to.code.length == 0 ||\n                ERC721TokenReceiver(to).onERC721Received(\n                    msg.sender,\n                    from,\n                    id,\n                    \"\"\n                ) ==\n                ERC721TokenReceiver.onERC721Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        bytes calldata data\n    ) public virtual {\n        transferFrom(from, to, id);\n\n        require(\n            to.code.length == 0 ||\n                ERC721TokenReceiver(to).onERC721Received(\n                    msg.sender,\n                    from,\n                    id,\n                    data\n                ) ==\n                ERC721TokenReceiver.onERC721Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC165 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual returns (bool) {\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 id) internal virtual {\n        require(to != address(0), \"INVALID_RECIPIENT\");\n\n        require(_ownerOf[id] == address(0), \"ALREADY_MINTED\");\n\n        // Counter overflow is incredibly unrealistic.\n        unchecked {\n            _balanceOf[to]++;\n        }\n\n        _ownerOf[id] = to;\n\n        emit Transfer(address(0), to, id);\n    }\n\n    function _burn(uint256 id) internal virtual {\n        address owner = _ownerOf[id];\n\n        require(owner != address(0), \"NOT_MINTED\");\n\n        // Ownership check above ensures no underflow.\n        unchecked {\n            _balanceOf[owner]--;\n        }\n\n        delete _ownerOf[id];\n\n        delete getApproved[id];\n\n        emit Transfer(owner, address(0), id);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL SAFE MINT LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _safeMint(address to, uint256 id) internal virtual {\n        _mint(to, id);\n\n        require(\n            to.code.length == 0 ||\n                ERC721TokenReceiver(to).onERC721Received(\n                    msg.sender,\n                    address(0),\n                    id,\n                    \"\"\n                ) ==\n                ERC721TokenReceiver.onERC721Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function _safeMint(\n        address to,\n        uint256 id,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, id);\n\n        require(\n            to.code.length == 0 ||\n                ERC721TokenReceiver(to).onERC721Received(\n                    msg.sender,\n                    address(0),\n                    id,\n                    data\n                ) ==\n                ERC721TokenReceiver.onERC721Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n}\n\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)\nabstract contract ERC721TokenReceiver {\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external virtual returns (bytes4) {\n        return ERC721TokenReceiver.onERC721Received.selector;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Midas_V1.2/LPToken.sol": {
				"LPToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "tokenId",
									"type": "uint128"
								}
							],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "xReserves",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "yReserves",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenX",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenY",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenX",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "midaswap",
						"kind": "dev",
						"methods": {},
						"title": "Midas LP Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas_V1.2/LPToken.sol\":328:2484  contract LPToken is ERC721 {... */\n  mstore(0x40, 0xa0)\n    /* \"Midas_V1.2/LPToken.sol\":750:844  constructor(address _factory) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Midas_V1.2/LPToken.sol\":790:808  factory = _factory */\n  and\n  0x80\n  mstore\n    /* \"Midas_V1.2/LPToken.sol\":818:829  initialized */\n  0x08\n    /* \"Midas_V1.2/LPToken.sol\":818:837  initialized = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"Midas_V1.2/LPToken.sol\":328:2484  contract LPToken is ERC721 {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"Midas_V1.2/LPToken.sol\":328:2484  contract LPToken is ERC721 {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1cca6d2cec39a0e1e2f69c2ebe2dc3f8c1e03db413c5d1c3e31cdca41ddbc4f2\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Midas_V1.2/LPToken.sol\":328:2484  contract LPToken is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa8aa1b31\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa8aa1b31\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb7d19fc4\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x83b43589\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9abe9dfb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x16dc165b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x16dc165b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4869:5218  function supportsInterface(... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4869:5218  function supportsInterface(... */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas_V1.2/LPToken.sol\":362:380  string public name */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1882:1928  mapping(uint256 => address) public getApproved */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1592:1624   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1574:1625   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1562:1564   */\n      0x20\n        /* \"#utility.yul\":1547:1565   */\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1882:1928  mapping(uint256 => address) public getApproved */\n      tag_32\n        /* \"#utility.yul\":1428:1631   */\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2376:2692  function approve(address spender, uint256 id) public virtual {... */\n    tag_6:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Midas_V1.2/LPToken.sol\":720:743  bool public initialized */\n    tag_7:\n      sload(0x08)\n      tag_28\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"Midas_V1.2/LPToken.sol\":605:626  address public tokenX */\n    tag_8:\n      sload(0x07)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2907:3650  function transferFrom(address from, address to, uint256 id) public virtual {... */\n    tag_9:\n      tag_44\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":1917:2049  function mint(address to, uint256 tokenId) external virtual {... */\n    tag_10:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3656:4150  function safeTransferFrom(... */\n    tag_11:\n      tag_44\n      tag_62\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":2055:2171  function burn(uint256 tokenId) external virtual {... */\n    tag_12:\n      tag_44\n      tag_65\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1365:1514  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n    tag_13:\n      tag_38\n      tag_68\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1520:1688  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n        /* \"#utility.yul\":2743:2768   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2731:2733   */\n      0x20\n        /* \"#utility.yul\":2716:2734   */\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1520:1688  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      tag_32\n        /* \"#utility.yul\":2597:2774   */\n      jump\n        /* \"Midas_V1.2/LPToken.sol\":851:1267  function initialize(... */\n    tag_15:\n      tag_44\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":386:406  string public symbol */\n    tag_16:\n      tag_34\n      tag_82\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":2292:2482  function getReserves(uint128 tokenId) external view virtual returns (uint128 xReserves, uint128 yReserves) {... */\n    tag_17:\n      tag_84\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      0x40\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":4700:4715   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":4682:4716   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4752:4767   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4747:4749   */\n      0x20\n        /* \"#utility.yul\":4732:4750   */\n      dup4\n      add\n        /* \"#utility.yul\":4725:4768   */\n      mstore\n        /* \"#utility.yul\":4617:4635   */\n      add\n        /* \"Midas_V1.2/LPToken.sol\":2292:2482  function getReserves(uint128 tokenId) external view virtual returns (uint128 xReserves, uint128 yReserves) {... */\n      tag_32\n        /* \"#utility.yul\":4470:4774   */\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2698:2901  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_44\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":557:576  address public pair */\n    tag_19:\n      sload(0x06)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Midas_V1.2/LPToken.sol\":655:676  address public tokenY */\n    tag_20:\n      sload(0x08)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4156:4681  function safeTransferFrom(... */\n    tag_21:\n      tag_44\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":499:531  address public immutable factory */\n    tag_22:\n      tag_38\n      immutable(\"0x1cca6d2cec39a0e1e2f69c2ebe2dc3f8c1e03db413c5d1c3e31cdca41ddbc4f2\")\n      dup2\n      jump\n        /* \"Midas_V1.2/LPToken.sol\":1273:1911  function tokenURI(uint256 tokenId)... */\n    tag_23:\n      tag_34\n      tag_108\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1935:2003  mapping(address => mapping(address => bool)) public isApprovedForAll */\n    tag_24:\n      tag_28\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      0x03\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4869:5218  function supportsInterface(... */\n    tag_31:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4959:4963  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4994:5019  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4994:5094  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n      tag_117\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5069:5094  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4994:5094  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n    tag_117:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4994:5169  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n      dup1\n      tag_118\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5144:5169  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4994:5169  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n    tag_118:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4975:5169  return... */\n      swap3\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4869:5218  function supportsInterface(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/LPToken.sol\":362:380  string public name */\n    tag_35:\n      0x04\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2376:2692  function approve(address spender, uint256 id) public virtual {... */\n    tag_47:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2447:2460  address owner */\n      0x00\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2463:2475  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2507:2517  msg.sender */\n      caller\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2507:2526  msg.sender == owner */\n      dup2\n      eq\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2507:2565  msg.sender == owner || isApprovedForAll[owner][msg.sender] */\n      tag_126\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2530:2553  isApprovedForAll[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2530:2546  isApprovedForAll */\n      0x03\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2530:2553  isApprovedForAll[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2554:2564  msg.sender */\n      caller\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2530:2565  isApprovedForAll[owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2507:2565  msg.sender == owner || isApprovedForAll[owner][msg.sender] */\n    tag_126:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2486:2605  require(... */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2616:2631  getApproved[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2616:2627  getApproved */\n      0x02\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2616:2631  getApproved[id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2616:2641  getApproved[id] = spender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2657:2685  Approval(owner, spender, id) */\n      swap2\n      mload\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2616:2631  getApproved[id] */\n      dup6\n      swap4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2657:2685  Approval(owner, spender, id) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2437:2692  {... */\n      pop\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2376:2692  function approve(address spender, uint256 id) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2907:3650  function transferFrom(address from, address to, uint256 id) public virtual {... */\n    tag_57:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3008:3016  _ownerOf */\n      0x00\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3008:3020  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3000:3020  from == _ownerOf[id] */\n      dup5\n      dup2\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3008:3020  _ownerOf[id] */\n      swap2\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3000:3020  from == _ownerOf[id] */\n      eq\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2992:3035  require(from == _ownerOf[id], \"WRONG_FROM\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6958:6960   */\n      0x20\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2992:3035  require(from == _ownerOf[id], \"WRONG_FROM\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6940:6961   */\n      mstore\n        /* \"#utility.yul\":6997:6999   */\n      0x0a\n        /* \"#utility.yul\":6977:6995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6970:7000   */\n      mstore\n      shl(0xb0, 0x57524f4e475f46524f4d)\n        /* \"#utility.yul\":7016:7034   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7009:7049   */\n      mstore\n        /* \"#utility.yul\":7066:7084   */\n      0x64\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2992:3035  require(from == _ownerOf[id], \"WRONG_FROM\") */\n      tag_128\n        /* \"#utility.yul\":6756:7090   */\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2992:3035  require(from == _ownerOf[id], \"WRONG_FROM\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3054:3070  to != address(0) */\n      dup3\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3046:3092  require(to != address(0), \"INVALID_RECIPIENT\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_136\n      jump\t// in\n    tag_134:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3124:3134  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3124:3142  msg.sender == from */\n      dup5\n      and\n      eq\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3124:3196  msg.sender == from ||... */\n      tag_137\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3162:3184  isApprovedForAll[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3162:3178  isApprovedForAll */\n      0x03\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3162:3184  isApprovedForAll[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3185:3195  msg.sender */\n      caller\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3162:3196  isApprovedForAll[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3124:3196  msg.sender == from ||... */\n    tag_137:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3124:3245  msg.sender == from ||... */\n      dup1\n      tag_138\n      jumpi\n      pop\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3230:3245  getApproved[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3230:3241  getApproved */\n      0x02\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3230:3245  getApproved[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3216:3226  msg.sender */\n      caller\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3216:3245  msg.sender == getApproved[id] */\n      eq\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3124:3245  msg.sender == from ||... */\n    tag_138:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3103:3285  require(... */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3485:3501  _balanceOf[from] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3485:3495  _balanceOf */\n      0x01\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3485:3501  _balanceOf[from] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3485:3503  _balanceOf[from]-- */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3518:3532  _balanceOf[to] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      dup6\n      dup5\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3518:3534  _balanceOf[to]++ */\n      dup1\n      sload\n      swap1\n      swap4\n      add\n      swap1\n      swap3\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3555:3567  _ownerOf[id] */\n      dup6\n      dup4\n      mstore\n      dup3\n      dup2\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3555:3572  _ownerOf[id] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3590:3601  getApproved */\n      0x02\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3590:3605  getApproved[id] */\n      swap1\n      swap2\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3583:3605  delete getApproved[id] */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3621:3643  Transfer(from, to, id) */\n      swap3\n      mload\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3564:3566  id */\n      dup5\n      swap4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3518:3532  _balanceOf[to] */\n      swap3\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3485:3501  _balanceOf[from] */\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3621:3643  Transfer(from, to, id) */\n      swap2\n      log4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2907:3650  function transferFrom(address from, address to, uint256 id) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/LPToken.sol\":1917:2049  function mint(address to, uint256 tokenId) external virtual {... */\n    tag_60:\n        /* \"Midas_V1.2/LPToken.sol\":2009:2013  pair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"Midas_V1.2/LPToken.sol\":1995:2005  msg.sender */\n      caller\n        /* \"Midas_V1.2/LPToken.sol\":1995:2013  msg.sender == pair */\n      eq\n        /* \"Midas_V1.2/LPToken.sol\":1987:2014  require(msg.sender == pair) */\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n        /* \"Midas_V1.2/LPToken.sol\":2024:2042  _mint(to, tokenId) */\n      tag_143\n        /* \"Midas_V1.2/LPToken.sol\":2030:2032  to */\n      dup3\n        /* \"Midas_V1.2/LPToken.sol\":2034:2041  tokenId */\n      dup3\n        /* \"Midas_V1.2/LPToken.sol\":2024:2029  _mint */\n      tag_144\n        /* \"Midas_V1.2/LPToken.sol\":2024:2042  _mint(to, tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"Midas_V1.2/LPToken.sol\":1917:2049  function mint(address to, uint256 tokenId) external virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3656:4150  function safeTransferFrom(... */\n    tag_63:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3775:3801  transferFrom(from, to, id) */\n      tag_146\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3788:3792  from */\n      dup4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3794:3796  to */\n      dup4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3798:3800  id */\n      dup4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3775:3787  transferFrom */\n      tag_57\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3775:3801  transferFrom(from, to, id) */\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3833:3847  to.code.length */\n      dup3\n      and\n      extcodesize\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3833:3852  to.code.length == 0 */\n      iszero\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3833:4101  to.code.length == 0 ||... */\n      tag_147\n      jumpi\n      pop\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3872:4036  ERC721TokenReceiver(to).onERC721Received(... */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup1\n      dup3\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3934:3944  msg.sender */\n      caller\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3872:4036  ERC721TokenReceiver(to).onERC721Received(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7746:7780   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7816:7831   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":7796:7814   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":7789:7832   */\n      mstore\n        /* \"#utility.yul\":7848:7866   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":7841:7875   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7911:7914   */\n      0x80\n        /* \"#utility.yul\":7891:7909   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":7884:7915   */\n      mstore\n      0x00\n        /* \"#utility.yul\":7931:7950   */\n      0x84\n      dup5\n      add\n        /* \"#utility.yul\":7924:7954   */\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4056:4101  ERC721TokenReceiver.onERC721Received.selector */\n      swap1\n      swap2\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3872:3912  ERC721TokenReceiver(to).onERC721Received */\n      swap1\n      dup5\n      and\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4056:4101  ERC721TokenReceiver.onERC721Received.selector */\n      0x150b7a02\n      swap1\n        /* \"#utility.yul\":7971:7990   */\n      0xa4\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3872:4036  ERC721TokenReceiver(to).onERC721Received(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3872:4101  ERC721TokenReceiver(to).onERC721Received(... */\n      and\n      eq\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3833:4101  to.code.length == 0 ||... */\n    tag_147:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3812:4143  require(... */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_156\n      jump\t// in\n    tag_154:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":3656:4150  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/LPToken.sol\":2055:2171  function burn(uint256 tokenId) external virtual {... */\n    tag_66:\n        /* \"Midas_V1.2/LPToken.sol\":2135:2139  pair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"Midas_V1.2/LPToken.sol\":2121:2131  msg.sender */\n      caller\n        /* \"Midas_V1.2/LPToken.sol\":2121:2139  msg.sender == pair */\n      eq\n        /* \"Midas_V1.2/LPToken.sol\":2113:2140  require(msg.sender == pair) */\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n        /* \"Midas_V1.2/LPToken.sol\":2150:2164  _burn(tokenId) */\n      tag_159\n        /* \"Midas_V1.2/LPToken.sol\":2156:2163  tokenId */\n      dup2\n        /* \"Midas_V1.2/LPToken.sol\":2150:2155  _burn */\n      tag_160\n        /* \"Midas_V1.2/LPToken.sol\":2150:2164  _burn(tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"Midas_V1.2/LPToken.sol\":2055:2171  function burn(uint256 tokenId) external virtual {... */\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1365:1514  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n    tag_69:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1423:1436  address owner */\n      0x00\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1465:1477  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1456:1492  (owner = _ownerOf[id]) != address(0) */\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1448:1507  require((owner = _ownerOf[id]) != address(0), \"NOT_MINTED\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_164\n      jump\t// in\n    tag_162:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1365:1514  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1520:1688  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1583:1590  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1610:1629  owner != address(0) */\n      dup3\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1602:1646  require(owner != address(0), \"ZERO_ADDRESS\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1602:1646  require(owner != address(0), \"ZERO_ADDRESS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9123:9144   */\n      mstore\n        /* \"#utility.yul\":9180:9182   */\n      0x0c\n        /* \"#utility.yul\":9160:9178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9153:9183   */\n      mstore\n      shl(0xa0, 0x5a45524f5f41444452455353)\n        /* \"#utility.yul\":9199:9217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9192:9234   */\n      mstore\n        /* \"#utility.yul\":9251:9269   */\n      0x64\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1602:1646  require(owner != address(0), \"ZERO_ADDRESS\") */\n      tag_128\n        /* \"#utility.yul\":8939:9275   */\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1602:1646  require(owner != address(0), \"ZERO_ADDRESS\") */\n    tag_166:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1664:1681  _balanceOf[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1664:1674  _balanceOf */\n      0x01\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1664:1681  _balanceOf[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":1520:1688  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"Midas_V1.2/LPToken.sol\":851:1267  function initialize(... */\n    tag_80:\n        /* \"Midas_V1.2/LPToken.sol\":1049:1059  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/LPToken.sol\":1063:1070  factory */\n      immutable(\"0x1cca6d2cec39a0e1e2f69c2ebe2dc3f8c1e03db413c5d1c3e31cdca41ddbc4f2\")\n        /* \"Midas_V1.2/LPToken.sol\":1049:1070  msg.sender == factory */\n      and\n      eq\n        /* \"Midas_V1.2/LPToken.sol\":1041:1071  require(msg.sender == factory) */\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n        /* \"Midas_V1.2/LPToken.sol\":1089:1100  initialized */\n      sload(0x08)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Midas_V1.2/LPToken.sol\":1089:1109  initialized == false */\n      iszero\n        /* \"Midas_V1.2/LPToken.sol\":1081:1110  require(initialized == false) */\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n        /* \"Midas_V1.2/LPToken.sol\":1120:1124  pair */\n      0x06\n        /* \"Midas_V1.2/LPToken.sol\":1120:1132  pair = _pair */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Midas_V1.2/LPToken.sol\":1142:1148  tokenX */\n      0x07\n        /* \"Midas_V1.2/LPToken.sol\":1142:1158  tokenX = _tokenX */\n      dup1\n      sload\n      dup10\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"Midas_V1.2/LPToken.sol\":1168:1174  tokenY */\n      0x08\n        /* \"Midas_V1.2/LPToken.sol\":1168:1184  tokenY = _tokenY */\n      dup1\n      sload\n      swap3\n      dup9\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Midas_V1.2/LPToken.sol\":1194:1206  name = _name */\n      tag_172\n        /* \"Midas_V1.2/LPToken.sol\":1194:1198  name */\n      0x04\n        /* \"Midas_V1.2/LPToken.sol\":1201:1206  _name */\n      dup6\n      dup6\n        /* \"Midas_V1.2/LPToken.sol\":1194:1206  name = _name */\n      tag_173\n      jump\t// in\n    tag_172:\n      pop\n        /* \"Midas_V1.2/LPToken.sol\":1216:1232  symbol = _symbol */\n      tag_174\n        /* \"Midas_V1.2/LPToken.sol\":1216:1222  symbol */\n      0x05\n        /* \"Midas_V1.2/LPToken.sol\":1225:1232  _symbol */\n      dup4\n      dup4\n        /* \"Midas_V1.2/LPToken.sol\":1216:1232  symbol = _symbol */\n      tag_173\n      jump\t// in\n    tag_174:\n      pop\n      pop\n        /* \"Midas_V1.2/LPToken.sol\":1242:1253  initialized */\n      0x08\n        /* \"Midas_V1.2/LPToken.sol\":1242:1260  initialized = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Midas_V1.2/LPToken.sol\":851:1267  function initialize(... */\n      jump\t// out\n        /* \"Midas_V1.2/LPToken.sol\":386:406  string public symbol */\n    tag_82:\n      0x05\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n        /* \"Midas_V1.2/LPToken.sol\":2292:2482  function getReserves(uint128 tokenId) external view virtual returns (uint128 xReserves, uint128 yReserves) {... */\n    tag_87:\n        /* \"Midas_V1.2/LPToken.sol\":2448:2452  pair */\n      sload(0x06)\n        /* \"Midas_V1.2/LPToken.sol\":2434:2475  IMidasPair721(pair).getLpReserve(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0xeef1c5f5)\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":9444:9476   */\n      dup4\n      and\n        /* \"Midas_V1.2/LPToken.sol\":2434:2475  IMidasPair721(pair).getLpReserve(tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9426:9477   */\n      mstore\n        /* \"Midas_V1.2/LPToken.sol\":2361:2378  uint128 xReserves */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/LPToken.sol\":2448:2452  pair */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Midas_V1.2/LPToken.sol\":2434:2466  IMidasPair721(pair).getLpReserve */\n      0xeef1c5f5\n      swap1\n        /* \"#utility.yul\":9399:9417   */\n      0x24\n      add\n        /* \"Midas_V1.2/LPToken.sol\":2434:2475  IMidasPair721(pair).getLpReserve(tokenId) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"Midas_V1.2/LPToken.sol\":2409:2475  (xReserves, yReserves) = IMidasPair721(pair).getLpReserve(tokenId) */\n      swap1\n      swap5\n      swap1\n      swap4\n      pop\n        /* \"Midas_V1.2/LPToken.sol\":2292:2482  function getReserves(uint128 tokenId) external view virtual returns (uint128 xReserves, uint128 yReserves) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2698:2901  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_93:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2800:2810  msg.sender */\n      caller\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2783:2811  isApprovedForAll[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2783:2799  isApprovedForAll */\n      0x03\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2783:2811  isApprovedForAll[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2783:2821  isApprovedForAll[msg.sender][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2783:2832  isApprovedForAll[msg.sender][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2848:2894  ApprovalForAll(msg.sender, operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2783:2821  isApprovedForAll[msg.sender][operator] */\n      swap2\n      swap3\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2800:2810  msg.sender */\n      swap2\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2848:2894  ApprovalForAll(msg.sender, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2848:2894  ApprovalForAll(msg.sender, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Midas_V1.2/libraries/ERC721.sol\":2698:2901  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4156:4681  function safeTransferFrom(... */\n    tag_103:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4304:4330  transferFrom(from, to, id) */\n      tag_190\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4317:4321  from */\n      dup6\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4323:4325  to */\n      dup6\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4327:4329  id */\n      dup6\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4304:4316  transferFrom */\n      tag_57\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4304:4330  transferFrom(from, to, id) */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4362:4376  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4362:4381  to.code.length == 0 */\n      iszero\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4362:4632  to.code.length == 0 ||... */\n      tag_191\n      jumpi\n      pop\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4401:4567  ERC721TokenReceiver(to).onERC721Received(... */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup1\n      dup3\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4587:4632  ERC721TokenReceiver.onERC721Received.selector */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4401:4441  ERC721TokenReceiver(to).onERC721Received */\n      dup7\n      and\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4587:4632  ERC721TokenReceiver.onERC721Received.selector */\n      0x150b7a02\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4401:4567  ERC721TokenReceiver(to).onERC721Received(... */\n      tag_192\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4463:4473  msg.sender */\n      caller\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4495:4499  from */\n      dup11\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4521:4523  id */\n      dup10\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4545:4549  data */\n      dup10\n      swap1\n      dup10\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4401:4567  ERC721TokenReceiver(to).onERC721Received(... */\n      0x04\n      add\n      tag_193\n      jump\t// in\n    tag_192:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_196:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4401:4632  ERC721TokenReceiver(to).onERC721Received(... */\n      and\n      eq\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4362:4632  to.code.length == 0 ||... */\n    tag_191:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4341:4674  require(... */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_156\n      jump\t// in\n    tag_197:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":4156:4681  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/LPToken.sol\":1273:1911  function tokenURI(uint256 tokenId)... */\n    tag_109:\n        /* \"Midas_V1.2/LPToken.sol\":1452:1453  0 */\n      0x00\n        /* \"Midas_V1.2/LPToken.sol\":1423:1440  _ownerOf[tokenId] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Midas_V1.2/LPToken.sol\":1386:1399  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/LPToken.sol\":1423:1440  _ownerOf[tokenId] */\n      and\n        /* \"Midas_V1.2/LPToken.sol\":1415:1455  require(_ownerOf[tokenId] != address(0)) */\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n        /* \"Midas_V1.2/LPToken.sol\":1465:1486  string memory baseURI */\n      0x00\n        /* \"Midas_V1.2/LPToken.sol\":1489:1499  _baseURI() */\n      tag_201\n        /* \"Midas_V1.2/LPToken.sol\":2253:2279  return \"www.midaswap.org/\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x11\n      dup2\n      mstore\n      shl(0x78, 0x7777772e6d696461737761702e6f72672f)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"Midas_V1.2/LPToken.sol\":2177:2286  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"Midas_V1.2/LPToken.sol\":1489:1499  _baseURI() */\n    tag_201:\n        /* \"Midas_V1.2/LPToken.sol\":1465:1499  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"Midas_V1.2/LPToken.sol\":1552:1553  0 */\n      0x00\n        /* \"Midas_V1.2/LPToken.sol\":1534:1541  baseURI */\n      dup2\n        /* \"Midas_V1.2/LPToken.sol\":1528:1549  bytes(baseURI).length */\n      mload\n        /* \"Midas_V1.2/LPToken.sol\":1528:1553  bytes(baseURI).length > 0 */\n      gt\n        /* \"Midas_V1.2/LPToken.sol\":1528:1904  bytes(baseURI).length > 0... */\n      tag_203\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_204)\n    tag_203:\n        /* \"Midas_V1.2/LPToken.sol\":1675:1681  tokenX */\n      sload(0x07)\n        /* \"Midas_V1.2/LPToken.sol\":1642:1649  baseURI */\n      dup2\n      swap1\n        /* \"Midas_V1.2/LPToken.sol\":1675:1695  tokenX.toHexString() */\n      tag_205\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/LPToken.sol\":1675:1681  tokenX */\n      and\n        /* \"Midas_V1.2/LPToken.sol\":1675:1693  tokenX.toHexString */\n      tag_206\n        /* \"Midas_V1.2/LPToken.sol\":1675:1695  tokenX.toHexString() */\n      jump\t// in\n    tag_205:\n        /* \"Midas_V1.2/LPToken.sol\":1750:1756  tokenY */\n      sload(0x08)\n        /* \"Midas_V1.2/LPToken.sol\":1750:1770  tokenY.toHexString() */\n      tag_207\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/LPToken.sol\":1750:1756  tokenY */\n      and\n        /* \"Midas_V1.2/LPToken.sol\":1750:1768  tokenY.toHexString */\n      tag_206\n        /* \"Midas_V1.2/LPToken.sol\":1750:1770  tokenY.toHexString() */\n      jump\t// in\n    tag_207:\n        /* \"Midas_V1.2/LPToken.sol\":1825:1843  tokenId.toString() */\n      tag_208\n        /* \"Midas_V1.2/LPToken.sol\":1825:1832  tokenId */\n      dup7\n        /* \"Midas_V1.2/LPToken.sol\":1825:1841  tokenId.toString */\n      tag_209\n        /* \"Midas_V1.2/LPToken.sol\":1825:1843  tokenId.toString() */\n      jump\t// in\n    tag_208:\n        /* \"Midas_V1.2/LPToken.sol\":1600:1865  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_210\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Midas_V1.2/LPToken.sol\":1528:1904  bytes(baseURI).length > 0... */\n    tag_204:\n        /* \"Midas_V1.2/LPToken.sol\":1509:1904  return... */\n      swap4\n        /* \"Midas_V1.2/LPToken.sol\":1273:1911  function tokenURI(uint256 tokenId)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5412:5783  function _mint(address to, uint256 id) internal virtual {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5486:5502  to != address(0) */\n      dup3\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5478:5524  require(to != address(0), \"INVALID_RECIPIENT\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_136\n      jump\t// in\n    tag_213:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5567:5568  0 */\n      0x00\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5543:5555  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5543:5569  _ownerOf[id] == address(0) */\n      iszero\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5535:5588  require(_ownerOf[id] == address(0), \"ALREADY_MINTED\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11906:11908   */\n      0x20\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5535:5588  require(_ownerOf[id] == address(0), \"ALREADY_MINTED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11888:11909   */\n      mstore\n        /* \"#utility.yul\":11945:11947   */\n      0x0e\n        /* \"#utility.yul\":11925:11943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11918:11948   */\n      mstore\n      shl(0x92, 0x1053149150511657d35253951151)\n        /* \"#utility.yul\":11964:11982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11957:12001   */\n      mstore\n        /* \"#utility.yul\":12018:12036   */\n      0x64\n      add\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5535:5588  require(_ownerOf[id] == address(0), \"ALREADY_MINTED\") */\n      tag_128\n        /* \"#utility.yul\":11704:12042   */\n      jump\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5535:5588  require(_ownerOf[id] == address(0), \"ALREADY_MINTED\") */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5678:5692  _balanceOf[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5678:5688  _balanceOf */\n      0x01\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5678:5692  _balanceOf[to] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5678:5694  _balanceOf[to]++ */\n      dup1\n      sload\n      swap1\n      swap4\n      add\n      swap1\n      swap3\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5715:5727  _ownerOf[id] */\n      dup5\n      dup4\n      mstore\n      dup3\n      swap1\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5715:5732  _ownerOf[id] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5748:5776  Transfer(address(0), to, id) */\n      mload\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5724:5726  id */\n      dup4\n      swap3\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5678:5692  _balanceOf[to] */\n      swap2\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5748:5776  Transfer(address(0), to, id) */\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5678:5692  _balanceOf[to] */\n      dup3\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5748:5776  Transfer(address(0), to, id) */\n      log4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5412:5783  function _mint(address to, uint256 id) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5789:6160  function _burn(uint256 id) internal virtual {... */\n    tag_160:\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5843:5856  address owner */\n      0x00\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5859:5871  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5890:5909  owner != address(0) */\n      dup1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5882:5924  require(owner != address(0), \"NOT_MINTED\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_164\n      jump\t// in\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6014:6031  _balanceOf[owner] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6014:6024  _balanceOf */\n      0x01\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6014:6031  _balanceOf[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6014:6033  _balanceOf[owner]-- */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6061:6073  _ownerOf[id] */\n      dup6\n      dup4\n      mstore\n      dup3\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6054:6073  delete _ownerOf[id] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6091:6102  getApproved */\n      0x02\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6091:6106  getApproved[id] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6084:6106  delete getApproved[id] */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap1\n      swap2\n      sstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6122:6153  Transfer(owner, address(0), id) */\n      mload\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6070:6072  id */\n      dup5\n      swap3\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6014:6031  _balanceOf[owner] */\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6122:6153  Transfer(owner, address(0), id) */\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6014:6031  _balanceOf[owner] */\n      dup4\n      swap1\n        /* \"Midas_V1.2/libraries/ERC721.sol\":6122:6153  Transfer(owner, address(0), id) */\n      log4\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5833:6160  {... */\n      pop\n        /* \"Midas_V1.2/libraries/ERC721.sol\":5789:6160  function _burn(uint256 id) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/Strings.sol\":2144:2293  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_206:\n        /* \"Midas_V1.2/libraries/Strings.sol\":2202:2215  string memory */\n      0x60\n        /* \"Midas_V1.2/libraries/Strings.sol\":2234:2286  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_118\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Midas_V1.2/libraries/Strings.sol\":2246:2268  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"Midas_V1.2/libraries/Strings.sol\":285:287  20 */\n      0x14\n        /* \"Midas_V1.2/libraries/Strings.sol\":2234:2245  toHexString */\n      tag_224\n        /* \"Midas_V1.2/libraries/Strings.sol\":2234:2286  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n        /* \"Midas_V1.2/libraries/Strings.sol\":389:1120  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_209:\n        /* \"Midas_V1.2/libraries/Strings.sol\":445:458  string memory */\n      0x60\n        /* \"Midas_V1.2/libraries/Strings.sol\":494:508  uint256 length */\n      0x00\n        /* \"Midas_V1.2/libraries/Strings.sol\":531:543  log10(value) */\n      tag_226\n        /* \"Midas_V1.2/libraries/Strings.sol\":537:542  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":531:536  log10 */\n      tag_227\n        /* \"Midas_V1.2/libraries/Strings.sol\":531:543  log10(value) */\n      jump\t// in\n    tag_226:\n        /* \"Midas_V1.2/libraries/Strings.sol\":546:547  1 */\n      0x01\n        /* \"Midas_V1.2/libraries/Strings.sol\":531:547  log10(value) + 1 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":522:547  length = log10(value) + 1 */\n      swap1\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":561:581  string memory buffer */\n      0x60\n        /* \"Midas_V1.2/libraries/Strings.sol\":615:621  length */\n      dup2\n        /* \"Midas_V1.2/libraries/Strings.sol\":604:622  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      tag_229\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_231:\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":595:622  buffer = new string(length) */\n      swap1\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":742:770  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":758:760  32 */\n      0x20\n        /* \"Midas_V1.2/libraries/Strings.sol\":742:770  add(buffer, add(32, length)) */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":797:1077  while (true) {... */\n    tag_232:\n      not(0x00)\n        /* \"Midas_V1.2/libraries/Strings.sol\":828:833  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"Midas_V1.2/libraries/Strings.sol\":962:964  10 */\n      0x0a\n        /* \"Midas_V1.2/libraries/Strings.sol\":951:965  mod(value, 10) */\n      dup7\n      mod\n        /* \"Midas_V1.2/libraries/Strings.sol\":946:976  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"Midas_V1.2/libraries/Strings.sol\":828:833  ptr-- */\n      dup2\n        /* \"Midas_V1.2/libraries/Strings.sol\":933:977  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"Midas_V1.2/libraries/Strings.sol\":1021:1023  10 */\n      0x0a\n        /* \"Midas_V1.2/libraries/Strings.sol\":1012:1023  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1045:1055  value == 0 */\n      dup5\n        /* \"Midas_V1.2/libraries/Strings.sol\":1041:1062  if (value == 0) break */\n      tag_237\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":1057:1062  break */\n      jump(tag_233)\n        /* \"Midas_V1.2/libraries/Strings.sol\":1041:1062  if (value == 0) break */\n    tag_237:\n        /* \"Midas_V1.2/libraries/Strings.sol\":797:1077  while (true) {... */\n      jump(tag_232)\n    tag_233:\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1097:1103  buffer */\n      swap4\n        /* \"Midas_V1.2/libraries/Strings.sol\":389:1120  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Midas_V1.2/libraries/Strings.sol\":1517:1992  function toHexString(... */\n    tag_224:\n        /* \"Midas_V1.2/libraries/Strings.sol\":1614:1627  string memory */\n      0x60\n      dup1\n        /* \"Midas_V1.2/libraries/Strings.sol\":1687:1697  2 * length */\n      tag_239\n        /* \"Midas_V1.2/libraries/Strings.sol\":1691:1697  length */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":1687:1688  2 */\n      0x02\n        /* \"Midas_V1.2/libraries/Strings.sol\":1687:1697  2 * length */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"Midas_V1.2/libraries/Strings.sol\":1687:1701  2 * length + 2 */\n      tag_241\n      swap1\n        /* \"Midas_V1.2/libraries/Strings.sol\":1700:1701  2 */\n      0x02\n        /* \"Midas_V1.2/libraries/Strings.sol\":1687:1701  2 * length + 2 */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"Midas_V1.2/libraries/Strings.sol\":1677:1702  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_244\n      jumpi\n      tag_244\n      tag_230\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_245\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_245:\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1668:1702  buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"Midas_V1.2/libraries/Strings.sol\":1712:1718  buffer */\n      dup2\n        /* \"Midas_V1.2/libraries/Strings.sol\":1719:1720  0 */\n      0x00\n        /* \"Midas_V1.2/libraries/Strings.sol\":1712:1721  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_248\n      jump\t// in\n    tag_247:\n      0x20\n      add\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":1712:1727  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"Midas_V1.2/libraries/Strings.sol\":1737:1743  buffer */\n      dup2\n        /* \"Midas_V1.2/libraries/Strings.sol\":1744:1745  1 */\n      0x01\n        /* \"Midas_V1.2/libraries/Strings.sol\":1737:1746  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_250\n      tag_248\n      jump\t// in\n    tag_250:\n      0x20\n      add\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":1737:1752  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1767:1776  uint256 i */\n      0x00\n        /* \"Midas_V1.2/libraries/Strings.sol\":1779:1789  2 * length */\n      tag_254\n        /* \"Midas_V1.2/libraries/Strings.sol\":1783:1789  length */\n      dup5\n        /* \"Midas_V1.2/libraries/Strings.sol\":1779:1780  2 */\n      0x02\n        /* \"Midas_V1.2/libraries/Strings.sol\":1779:1789  2 * length */\n      tag_240\n      jump\t// in\n    tag_254:\n        /* \"Midas_V1.2/libraries/Strings.sol\":1779:1793  2 * length + 1 */\n      tag_255\n      swap1\n        /* \"Midas_V1.2/libraries/Strings.sol\":1792:1793  1 */\n      0x01\n        /* \"Midas_V1.2/libraries/Strings.sol\":1779:1793  2 * length + 1 */\n      tag_242\n      jump\t// in\n    tag_255:\n        /* \"Midas_V1.2/libraries/Strings.sol\":1767:1793  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1762:1890  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_251:\n        /* \"Midas_V1.2/libraries/Strings.sol\":1799:1800  1 */\n      0x01\n        /* \"Midas_V1.2/libraries/Strings.sol\":1795:1796  i */\n      dup2\n        /* \"Midas_V1.2/libraries/Strings.sol\":1795:1800  i > 1 */\n      gt\n        /* \"Midas_V1.2/libraries/Strings.sol\":1762:1890  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_252\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"Midas_V1.2/libraries/Strings.sol\":1842:1847  value */\n      dup6\n        /* \"Midas_V1.2/libraries/Strings.sol\":1850:1853  0xf */\n      0x0f\n        /* \"Midas_V1.2/libraries/Strings.sol\":1842:1853  value & 0xf */\n      and\n        /* \"Midas_V1.2/libraries/Strings.sol\":1833:1854  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_257\n      jumpi\n      tag_257\n      tag_248\n      jump\t// in\n    tag_257:\n      byte\n      0xf8\n      shl\n        /* \"Midas_V1.2/libraries/Strings.sol\":1821:1827  buffer */\n      dup3\n        /* \"Midas_V1.2/libraries/Strings.sol\":1828:1829  i */\n      dup3\n        /* \"Midas_V1.2/libraries/Strings.sol\":1821:1830  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_248\n      jump\t// in\n    tag_259:\n      0x20\n      add\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":1821:1854  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1878:1879  4 */\n      0x04\n        /* \"Midas_V1.2/libraries/Strings.sol\":1868:1879  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"Midas_V1.2/libraries/Strings.sol\":1802:1805  --i */\n      tag_260\n      dup2\n      tag_261\n      jump\t// in\n    tag_260:\n      swap1\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1762:1890  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_251)\n    tag_252:\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":1907:1917  value == 0 */\n      dup4\n      iszero\n        /* \"Midas_V1.2/libraries/Strings.sol\":1899:1954  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13224:13226   */\n      0x20\n        /* \"Midas_V1.2/libraries/Strings.sol\":1899:1954  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13206:13227   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13243:13261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13236:13266   */\n      mstore\n        /* \"#utility.yul\":13302:13336   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":13282:13300   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13275:13337   */\n      mstore\n        /* \"#utility.yul\":13354:13372   */\n      0x64\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":1899:1954  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_128\n        /* \"#utility.yul\":13022:13378   */\n      jump\n        /* \"Midas_V1.2/libraries/Strings.sol\":2418:3330  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"Midas_V1.2/libraries/Strings.sol\":2471:2478  uint256 */\n      0x00\n        /* \"Midas_V1.2/libraries/Strings.sol\":2490:2504  uint256 result */\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"Midas_V1.2/libraries/Strings.sol\":2542:2547  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":2542:2559  value >= 10 ** 64 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":2538:2641  if (value >= 10 ** 64) {... */\n      tag_266\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"Midas_V1.2/libraries/Strings.sol\":2579:2596  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":2624:2626  64 */\n      0x40\n        /* \"Midas_V1.2/libraries/Strings.sol\":2614:2626  result += 64 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":2538:2641  if (value >= 10 ** 64) {... */\n    tag_266:\n        /* \"Midas_V1.2/libraries/Strings.sol\":2667:2675  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"Midas_V1.2/libraries/Strings.sol\":2658:2663  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":2658:2675  value >= 10 ** 32 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":2654:2757  if (value >= 10 ** 32) {... */\n      tag_269\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":2704:2712  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"Midas_V1.2/libraries/Strings.sol\":2695:2712  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":2740:2742  32 */\n      0x20\n        /* \"Midas_V1.2/libraries/Strings.sol\":2730:2742  result += 32 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":2654:2757  if (value >= 10 ** 32) {... */\n    tag_269:\n        /* \"Midas_V1.2/libraries/Strings.sol\":2783:2791  10 ** 16 */\n      0x2386f26fc10000\n        /* \"Midas_V1.2/libraries/Strings.sol\":2774:2779  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":2774:2791  value >= 10 ** 16 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":2770:2873  if (value >= 10 ** 16) {... */\n      tag_272\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":2820:2828  10 ** 16 */\n      0x2386f26fc10000\n        /* \"Midas_V1.2/libraries/Strings.sol\":2811:2828  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":2856:2858  16 */\n      0x10\n        /* \"Midas_V1.2/libraries/Strings.sol\":2846:2858  result += 16 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":2770:2873  if (value >= 10 ** 16) {... */\n    tag_272:\n        /* \"Midas_V1.2/libraries/Strings.sol\":2899:2906  10 ** 8 */\n      0x05f5e100\n        /* \"Midas_V1.2/libraries/Strings.sol\":2890:2895  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":2890:2906  value >= 10 ** 8 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":2886:2986  if (value >= 10 ** 8) {... */\n      tag_275\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":2935:2942  10 ** 8 */\n      0x05f5e100\n        /* \"Midas_V1.2/libraries/Strings.sol\":2926:2942  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":2970:2971  8 */\n      0x08\n        /* \"Midas_V1.2/libraries/Strings.sol\":2960:2971  result += 8 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":2886:2986  if (value >= 10 ** 8) {... */\n    tag_275:\n        /* \"Midas_V1.2/libraries/Strings.sol\":3012:3019  10 ** 4 */\n      0x2710\n        /* \"Midas_V1.2/libraries/Strings.sol\":3003:3008  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":3003:3019  value >= 10 ** 4 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":2999:3099  if (value >= 10 ** 4) {... */\n      tag_278\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":3048:3055  10 ** 4 */\n      0x2710\n        /* \"Midas_V1.2/libraries/Strings.sol\":3039:3055  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":3083:3084  4 */\n      0x04\n        /* \"Midas_V1.2/libraries/Strings.sol\":3073:3084  result += 4 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":2999:3099  if (value >= 10 ** 4) {... */\n    tag_278:\n        /* \"Midas_V1.2/libraries/Strings.sol\":3125:3132  10 ** 2 */\n      0x64\n        /* \"Midas_V1.2/libraries/Strings.sol\":3116:3121  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":3116:3132  value >= 10 ** 2 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":3112:3212  if (value >= 10 ** 2) {... */\n      tag_281\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":3161:3168  10 ** 2 */\n      0x64\n        /* \"Midas_V1.2/libraries/Strings.sol\":3152:3168  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"Midas_V1.2/libraries/Strings.sol\":3196:3197  2 */\n      0x02\n        /* \"Midas_V1.2/libraries/Strings.sol\":3186:3197  result += 2 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":3112:3212  if (value >= 10 ** 2) {... */\n    tag_281:\n        /* \"Midas_V1.2/libraries/Strings.sol\":3238:3245  10 ** 1 */\n      0x0a\n        /* \"Midas_V1.2/libraries/Strings.sol\":3229:3234  value */\n      dup4\n        /* \"Midas_V1.2/libraries/Strings.sol\":3229:3245  value >= 10 ** 1 */\n      lt\n        /* \"Midas_V1.2/libraries/Strings.sol\":3225:3291  if (value >= 10 ** 1) {... */\n      tag_118\n      jumpi\n        /* \"Midas_V1.2/libraries/Strings.sol\":3275:3276  1 */\n      0x01\n        /* \"Midas_V1.2/libraries/Strings.sol\":3265:3276  result += 1 */\n      add\n        /* \"Midas_V1.2/libraries/Strings.sol\":3317:3323  result */\n      swap3\n        /* \"Midas_V1.2/libraries/Strings.sol\":2418:3330  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_173:\n      dup3\n      dup1\n      sload\n      tag_285\n      swap1\n      tag_120\n      jump\t// in\n    tag_285:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_287\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_290)\n    tag_287:\n      dup3\n      0x1f\n      lt\n      tag_288\n      jumpi\n      dup3\n      dup1\n      add\n      not(0xff)\n      dup3\n      calldataload\n      and\n      or\n      dup6\n      sstore\n      jump(tag_290)\n    tag_288:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_290\n      jumpi\n      swap2\n      dup3\n      add\n    tag_289:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_290\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_289)\n    tag_290:\n      pop\n      tag_291\n      swap3\n      swap2\n      pop\n      tag_292\n      jump\t// in\n    tag_291:\n      pop\n      swap1\n      jump\t// out\n    tag_292:\n    tag_293:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_291\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_293)\n        /* \"#utility.yul\":14:145   */\n    tag_295:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_30:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_305:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_204\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_296:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_309:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_309)\n    tag_311:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":831:837   */\n      dup5\n        /* \"#utility.yul\":826:829   */\n      dup5\n        /* \"#utility.yul\":822:838   */\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":796:844   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":592:850   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":855:1238   */\n    tag_37:\n        /* \"#utility.yul\":1004:1006   */\n      0x20\n        /* \"#utility.yul\":993:1002   */\n      dup2\n        /* \"#utility.yul\":986:1007   */\n      mstore\n        /* \"#utility.yul\":967:971   */\n      0x00\n        /* \"#utility.yul\":1036:1042   */\n      dup3\n        /* \"#utility.yul\":1030:1043   */\n      mload\n        /* \"#utility.yul\":1079:1085   */\n      dup1\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup5\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1052:1086   */\n      mstore\n        /* \"#utility.yul\":1095:1161   */\n      tag_314\n        /* \"#utility.yul\":1154:1160   */\n      dup2\n        /* \"#utility.yul\":1149:1151   */\n      0x40\n        /* \"#utility.yul\":1138:1147   */\n      dup6\n        /* \"#utility.yul\":1134:1152   */\n      add\n        /* \"#utility.yul\":1129:1131   */\n      0x20\n        /* \"#utility.yul\":1121:1127   */\n      dup8\n        /* \"#utility.yul\":1117:1132   */\n      add\n        /* \"#utility.yul\":1095:1161   */\n      tag_296\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1222:1224   */\n      0x1f\n        /* \"#utility.yul\":1201:1216   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1197:1226   */\n      and\n        /* \"#utility.yul\":1182:1227   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1229:1231   */\n      0x40\n        /* \"#utility.yul\":1178:1232   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1238   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1243:1423   */\n    tag_40:\n        /* \"#utility.yul\":1302:1308   */\n      0x00\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1343:1352   */\n      dup3\n        /* \"#utility.yul\":1334:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1353   */\n      sub\n        /* \"#utility.yul\":1326:1358   */\n      slt\n        /* \"#utility.yul\":1323:1375   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1323:1375   */\n    tag_316:\n      pop\n        /* \"#utility.yul\":1394:1417   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1243:1423   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1636:1809   */\n    tag_297:\n        /* \"#utility.yul\":1704:1724   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1753:1784   */\n      dup2\n      and\n        /* \"#utility.yul\":1743:1785   */\n      dup2\n      eq\n        /* \"#utility.yul\":1733:1803   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1799:1800   */\n      0x00\n        /* \"#utility.yul\":1796:1797   */\n      dup1\n        /* \"#utility.yul\":1789:1801   */\n      revert\n        /* \"#utility.yul\":1814:2068   */\n    tag_46:\n        /* \"#utility.yul\":1882:1888   */\n      0x00\n        /* \"#utility.yul\":1890:1896   */\n      dup1\n        /* \"#utility.yul\":1943:1945   */\n      0x40\n        /* \"#utility.yul\":1931:1940   */\n      dup4\n        /* \"#utility.yul\":1922:1929   */\n      dup6\n        /* \"#utility.yul\":1918:1941   */\n      sub\n        /* \"#utility.yul\":1914:1946   */\n      slt\n        /* \"#utility.yul\":1911:1963   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1959:1960   */\n      0x00\n        /* \"#utility.yul\":1956:1957   */\n      dup1\n        /* \"#utility.yul\":1949:1961   */\n      revert\n        /* \"#utility.yul\":1911:1963   */\n    tag_321:\n        /* \"#utility.yul\":1982:2011   */\n      tag_322\n        /* \"#utility.yul\":2001:2010   */\n      dup4\n        /* \"#utility.yul\":1982:2011   */\n      tag_297\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1972:2011   */\n      swap5\n        /* \"#utility.yul\":2058:2060   */\n      0x20\n        /* \"#utility.yul\":2043:2061   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2030:2062   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1814:2068   */\n      jump\t// out\n        /* \"#utility.yul\":2073:2401   */\n    tag_56:\n        /* \"#utility.yul\":2150:2156   */\n      0x00\n        /* \"#utility.yul\":2158:2164   */\n      dup1\n        /* \"#utility.yul\":2166:2172   */\n      0x00\n        /* \"#utility.yul\":2219:2221   */\n      0x60\n        /* \"#utility.yul\":2207:2216   */\n      dup5\n        /* \"#utility.yul\":2198:2205   */\n      dup7\n        /* \"#utility.yul\":2194:2217   */\n      sub\n        /* \"#utility.yul\":2190:2222   */\n      slt\n        /* \"#utility.yul\":2187:2239   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2235:2236   */\n      0x00\n        /* \"#utility.yul\":2232:2233   */\n      dup1\n        /* \"#utility.yul\":2225:2237   */\n      revert\n        /* \"#utility.yul\":2187:2239   */\n    tag_324:\n        /* \"#utility.yul\":2258:2287   */\n      tag_325\n        /* \"#utility.yul\":2277:2286   */\n      dup5\n        /* \"#utility.yul\":2258:2287   */\n      tag_297\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2248:2287   */\n      swap3\n      pop\n        /* \"#utility.yul\":2306:2344   */\n      tag_326\n        /* \"#utility.yul\":2340:2342   */\n      0x20\n        /* \"#utility.yul\":2329:2338   */\n      dup6\n        /* \"#utility.yul\":2325:2343   */\n      add\n        /* \"#utility.yul\":2306:2344   */\n      tag_297\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2296:2344   */\n      swap2\n      pop\n        /* \"#utility.yul\":2391:2393   */\n      0x40\n        /* \"#utility.yul\":2380:2389   */\n      dup5\n        /* \"#utility.yul\":2376:2394   */\n      add\n        /* \"#utility.yul\":2363:2395   */\n      calldataload\n        /* \"#utility.yul\":2353:2395   */\n      swap1\n      pop\n        /* \"#utility.yul\":2073:2401   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2406:2592   */\n    tag_73:\n        /* \"#utility.yul\":2465:2471   */\n      0x00\n        /* \"#utility.yul\":2518:2520   */\n      0x20\n        /* \"#utility.yul\":2506:2515   */\n      dup3\n        /* \"#utility.yul\":2497:2504   */\n      dup5\n        /* \"#utility.yul\":2493:2516   */\n      sub\n        /* \"#utility.yul\":2489:2521   */\n      slt\n        /* \"#utility.yul\":2486:2538   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2534:2535   */\n      0x00\n        /* \"#utility.yul\":2531:2532   */\n      dup1\n        /* \"#utility.yul\":2524:2536   */\n      revert\n        /* \"#utility.yul\":2486:2538   */\n    tag_328:\n        /* \"#utility.yul\":2557:2586   */\n      tag_204\n        /* \"#utility.yul\":2576:2585   */\n      dup3\n        /* \"#utility.yul\":2557:2586   */\n      tag_297\n      jump\t// in\n        /* \"#utility.yul\":2779:3127   */\n    tag_298:\n        /* \"#utility.yul\":2831:2839   */\n      0x00\n        /* \"#utility.yul\":2841:2847   */\n      dup1\n        /* \"#utility.yul\":2895:2898   */\n      dup4\n        /* \"#utility.yul\":2888:2892   */\n      0x1f\n        /* \"#utility.yul\":2880:2886   */\n      dup5\n        /* \"#utility.yul\":2876:2893   */\n      add\n        /* \"#utility.yul\":2872:2899   */\n      slt\n        /* \"#utility.yul\":2862:2917   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2913:2914   */\n      0x00\n        /* \"#utility.yul\":2910:2911   */\n      dup1\n        /* \"#utility.yul\":2903:2915   */\n      revert\n        /* \"#utility.yul\":2862:2917   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":2936:2956   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2979:2997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2968:2998   */\n      dup2\n      gt\n        /* \"#utility.yul\":2965:3015   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":3011:3012   */\n      0x00\n        /* \"#utility.yul\":3008:3009   */\n      dup1\n        /* \"#utility.yul\":3001:3013   */\n      revert\n        /* \"#utility.yul\":2965:3015   */\n    tag_333:\n        /* \"#utility.yul\":3048:3052   */\n      0x20\n        /* \"#utility.yul\":3040:3046   */\n      dup4\n        /* \"#utility.yul\":3036:3053   */\n      add\n        /* \"#utility.yul\":3024:3053   */\n      swap2\n      pop\n        /* \"#utility.yul\":3100:3103   */\n      dup4\n        /* \"#utility.yul\":3093:3097   */\n      0x20\n        /* \"#utility.yul\":3084:3090   */\n      dup3\n        /* \"#utility.yul\":3076:3082   */\n      dup6\n        /* \"#utility.yul\":3072:3091   */\n      add\n        /* \"#utility.yul\":3068:3098   */\n      add\n        /* \"#utility.yul\":3065:3104   */\n      gt\n        /* \"#utility.yul\":3062:3121   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3117:3118   */\n      0x00\n        /* \"#utility.yul\":3114:3115   */\n      dup1\n        /* \"#utility.yul\":3107:3119   */\n      revert\n        /* \"#utility.yul\":3062:3121   */\n    tag_334:\n        /* \"#utility.yul\":2779:3127   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:4077   */\n    tag_79:\n        /* \"#utility.yul\":3251:3257   */\n      0x00\n        /* \"#utility.yul\":3259:3265   */\n      dup1\n        /* \"#utility.yul\":3267:3273   */\n      0x00\n        /* \"#utility.yul\":3275:3281   */\n      dup1\n        /* \"#utility.yul\":3283:3289   */\n      0x00\n        /* \"#utility.yul\":3291:3297   */\n      dup1\n        /* \"#utility.yul\":3299:3305   */\n      0x00\n        /* \"#utility.yul\":3352:3355   */\n      0xa0\n        /* \"#utility.yul\":3340:3349   */\n      dup9\n        /* \"#utility.yul\":3331:3338   */\n      dup11\n        /* \"#utility.yul\":3327:3350   */\n      sub\n        /* \"#utility.yul\":3323:3356   */\n      slt\n        /* \"#utility.yul\":3320:3373   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3369:3370   */\n      0x00\n        /* \"#utility.yul\":3366:3367   */\n      dup1\n        /* \"#utility.yul\":3359:3371   */\n      revert\n        /* \"#utility.yul\":3320:3373   */\n    tag_336:\n        /* \"#utility.yul\":3392:3421   */\n      tag_337\n        /* \"#utility.yul\":3411:3420   */\n      dup9\n        /* \"#utility.yul\":3392:3421   */\n      tag_297\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3382:3421   */\n      swap7\n      pop\n        /* \"#utility.yul\":3440:3478   */\n      tag_338\n        /* \"#utility.yul\":3474:3476   */\n      0x20\n        /* \"#utility.yul\":3463:3472   */\n      dup10\n        /* \"#utility.yul\":3459:3477   */\n      add\n        /* \"#utility.yul\":3440:3478   */\n      tag_297\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3430:3478   */\n      swap6\n      pop\n        /* \"#utility.yul\":3497:3535   */\n      tag_339\n        /* \"#utility.yul\":3531:3533   */\n      0x40\n        /* \"#utility.yul\":3520:3529   */\n      dup10\n        /* \"#utility.yul\":3516:3534   */\n      add\n        /* \"#utility.yul\":3497:3535   */\n      tag_297\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3487:3535   */\n      swap5\n      pop\n        /* \"#utility.yul\":3586:3588   */\n      0x60\n        /* \"#utility.yul\":3575:3584   */\n      dup9\n        /* \"#utility.yul\":3571:3589   */\n      add\n        /* \"#utility.yul\":3558:3590   */\n      calldataload\n        /* \"#utility.yul\":3609:3627   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3650:3652   */\n      dup1\n        /* \"#utility.yul\":3642:3648   */\n      dup3\n        /* \"#utility.yul\":3639:3653   */\n      gt\n        /* \"#utility.yul\":3636:3670   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3666:3667   */\n      0x00\n        /* \"#utility.yul\":3663:3664   */\n      dup1\n        /* \"#utility.yul\":3656:3668   */\n      revert\n        /* \"#utility.yul\":3636:3670   */\n    tag_340:\n        /* \"#utility.yul\":3705:3764   */\n      tag_341\n        /* \"#utility.yul\":3756:3763   */\n      dup12\n        /* \"#utility.yul\":3747:3753   */\n      dup4\n        /* \"#utility.yul\":3736:3745   */\n      dup13\n        /* \"#utility.yul\":3732:3754   */\n      add\n        /* \"#utility.yul\":3705:3764   */\n      tag_298\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3783:3791   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":3679:3764   */\n      swap5\n      pop\n        /* \"#utility.yul\":3871:3874   */\n      0x80\n        /* \"#utility.yul\":3856:3875   */\n      dup11\n      add\n        /* \"#utility.yul\":3843:3876   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3888:3904   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3885:3921   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3917:3918   */\n      0x00\n        /* \"#utility.yul\":3914:3915   */\n      dup1\n        /* \"#utility.yul\":3907:3919   */\n      revert\n        /* \"#utility.yul\":3885:3921   */\n    tag_342:\n      pop\n        /* \"#utility.yul\":3956:4017   */\n      tag_343\n        /* \"#utility.yul\":4009:4016   */\n      dup11\n        /* \"#utility.yul\":3998:4006   */\n      dup3\n        /* \"#utility.yul\":3987:3996   */\n      dup12\n        /* \"#utility.yul\":3983:4007   */\n      add\n        /* \"#utility.yul\":3956:4017   */\n      tag_298\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3132:4077   */\n      swap9\n      swap12\n      swap8\n      swap11\n      pop\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":3930:4017   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3132:4077   */\n      jump\t// out\n        /* \"#utility.yul\":4082:4213   */\n    tag_299:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":4157:4188   */\n      dup2\n      and\n        /* \"#utility.yul\":4147:4189   */\n      dup2\n      eq\n        /* \"#utility.yul\":4137:4207   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":4203:4204   */\n      0x00\n        /* \"#utility.yul\":4200:4201   */\n      dup1\n        /* \"#utility.yul\":4193:4205   */\n      revert\n        /* \"#utility.yul\":4218:4465   */\n    tag_86:\n        /* \"#utility.yul\":4277:4283   */\n      0x00\n        /* \"#utility.yul\":4330:4332   */\n      0x20\n        /* \"#utility.yul\":4318:4327   */\n      dup3\n        /* \"#utility.yul\":4309:4316   */\n      dup5\n        /* \"#utility.yul\":4305:4328   */\n      sub\n        /* \"#utility.yul\":4301:4333   */\n      slt\n        /* \"#utility.yul\":4298:4350   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4343:4344   */\n      dup1\n        /* \"#utility.yul\":4336:4348   */\n      revert\n        /* \"#utility.yul\":4298:4350   */\n    tag_347:\n        /* \"#utility.yul\":4385:4394   */\n      dup2\n        /* \"#utility.yul\":4372:4395   */\n      calldataload\n        /* \"#utility.yul\":4404:4435   */\n      tag_204\n        /* \"#utility.yul\":4429:4434   */\n      dup2\n        /* \"#utility.yul\":4404:4435   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":4779:5126   */\n    tag_92:\n        /* \"#utility.yul\":4844:4850   */\n      0x00\n        /* \"#utility.yul\":4852:4858   */\n      dup1\n        /* \"#utility.yul\":4905:4907   */\n      0x40\n        /* \"#utility.yul\":4893:4902   */\n      dup4\n        /* \"#utility.yul\":4884:4891   */\n      dup6\n        /* \"#utility.yul\":4880:4903   */\n      sub\n        /* \"#utility.yul\":4876:4908   */\n      slt\n        /* \"#utility.yul\":4873:4925   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":4921:4922   */\n      0x00\n        /* \"#utility.yul\":4918:4919   */\n      dup1\n        /* \"#utility.yul\":4911:4923   */\n      revert\n        /* \"#utility.yul\":4873:4925   */\n    tag_351:\n        /* \"#utility.yul\":4944:4973   */\n      tag_352\n        /* \"#utility.yul\":4963:4972   */\n      dup4\n        /* \"#utility.yul\":4944:4973   */\n      tag_297\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4934:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":5023:5025   */\n      0x20\n        /* \"#utility.yul\":5012:5021   */\n      dup4\n        /* \"#utility.yul\":5008:5026   */\n      add\n        /* \"#utility.yul\":4995:5027   */\n      calldataload\n        /* \"#utility.yul\":5070:5075   */\n      dup1\n        /* \"#utility.yul\":5063:5076   */\n      iszero\n        /* \"#utility.yul\":5056:5077   */\n      iszero\n        /* \"#utility.yul\":5049:5054   */\n      dup2\n        /* \"#utility.yul\":5046:5078   */\n      eq\n        /* \"#utility.yul\":5036:5096   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":5092:5093   */\n      0x00\n        /* \"#utility.yul\":5089:5090   */\n      dup1\n        /* \"#utility.yul\":5082:5094   */\n      revert\n        /* \"#utility.yul\":5036:5096   */\n    tag_353:\n        /* \"#utility.yul\":5115:5120   */\n      dup1\n        /* \"#utility.yul\":5105:5120   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4779:5126   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5131:5758   */\n    tag_102:\n        /* \"#utility.yul\":5228:5234   */\n      0x00\n        /* \"#utility.yul\":5236:5242   */\n      dup1\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5252:5258   */\n      dup1\n        /* \"#utility.yul\":5260:5266   */\n      0x00\n        /* \"#utility.yul\":5313:5316   */\n      0x80\n        /* \"#utility.yul\":5301:5310   */\n      dup7\n        /* \"#utility.yul\":5292:5299   */\n      dup9\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5317   */\n      slt\n        /* \"#utility.yul\":5281:5334   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5330:5331   */\n      0x00\n        /* \"#utility.yul\":5327:5328   */\n      dup1\n        /* \"#utility.yul\":5320:5332   */\n      revert\n        /* \"#utility.yul\":5281:5334   */\n    tag_355:\n        /* \"#utility.yul\":5353:5382   */\n      tag_356\n        /* \"#utility.yul\":5372:5381   */\n      dup7\n        /* \"#utility.yul\":5353:5382   */\n      tag_297\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5343:5382   */\n      swap5\n      pop\n        /* \"#utility.yul\":5401:5439   */\n      tag_357\n        /* \"#utility.yul\":5435:5437   */\n      0x20\n        /* \"#utility.yul\":5424:5433   */\n      dup8\n        /* \"#utility.yul\":5420:5438   */\n      add\n        /* \"#utility.yul\":5401:5439   */\n      tag_297\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5391:5439   */\n      swap4\n      pop\n        /* \"#utility.yul\":5486:5488   */\n      0x40\n        /* \"#utility.yul\":5475:5484   */\n      dup7\n        /* \"#utility.yul\":5471:5489   */\n      add\n        /* \"#utility.yul\":5458:5490   */\n      calldataload\n        /* \"#utility.yul\":5448:5490   */\n      swap3\n      pop\n        /* \"#utility.yul\":5541:5543   */\n      0x60\n        /* \"#utility.yul\":5530:5539   */\n      dup7\n        /* \"#utility.yul\":5526:5544   */\n      add\n        /* \"#utility.yul\":5513:5545   */\n      calldataload\n        /* \"#utility.yul\":5568:5586   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5560:5566   */\n      dup2\n        /* \"#utility.yul\":5557:5587   */\n      gt\n        /* \"#utility.yul\":5554:5604   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5600:5601   */\n      0x00\n        /* \"#utility.yul\":5597:5598   */\n      dup1\n        /* \"#utility.yul\":5590:5602   */\n      revert\n        /* \"#utility.yul\":5554:5604   */\n    tag_358:\n        /* \"#utility.yul\":5639:5698   */\n      tag_359\n        /* \"#utility.yul\":5690:5697   */\n      dup9\n        /* \"#utility.yul\":5681:5687   */\n      dup3\n        /* \"#utility.yul\":5670:5679   */\n      dup10\n        /* \"#utility.yul\":5666:5688   */\n      add\n        /* \"#utility.yul\":5639:5698   */\n      tag_298\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5131:5758   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":5717:5725   */\n      swap3\n      swap5\n        /* \"#utility.yul\":5613:5698   */\n      swap4\n        /* \"#utility.yul\":5131:5758   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5763:6023   */\n    tag_113:\n        /* \"#utility.yul\":5831:5837   */\n      0x00\n        /* \"#utility.yul\":5839:5845   */\n      dup1\n        /* \"#utility.yul\":5892:5894   */\n      0x40\n        /* \"#utility.yul\":5880:5889   */\n      dup4\n        /* \"#utility.yul\":5871:5878   */\n      dup6\n        /* \"#utility.yul\":5867:5890   */\n      sub\n        /* \"#utility.yul\":5863:5895   */\n      slt\n        /* \"#utility.yul\":5860:5912   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5908:5909   */\n      0x00\n        /* \"#utility.yul\":5905:5906   */\n      dup1\n        /* \"#utility.yul\":5898:5910   */\n      revert\n        /* \"#utility.yul\":5860:5912   */\n    tag_361:\n        /* \"#utility.yul\":5931:5960   */\n      tag_362\n        /* \"#utility.yul\":5950:5959   */\n      dup4\n        /* \"#utility.yul\":5931:5960   */\n      tag_297\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5921:5960   */\n      swap2\n      pop\n        /* \"#utility.yul\":5979:6017   */\n      tag_363\n        /* \"#utility.yul\":6013:6015   */\n      0x20\n        /* \"#utility.yul\":6002:6011   */\n      dup5\n        /* \"#utility.yul\":5998:6016   */\n      add\n        /* \"#utility.yul\":5979:6017   */\n      tag_297\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5969:6017   */\n      swap1\n      pop\n        /* \"#utility.yul\":5763:6023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6028:6408   */\n    tag_120:\n        /* \"#utility.yul\":6107:6108   */\n      0x01\n        /* \"#utility.yul\":6103:6115   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6150:6162   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6171:6232   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":6225:6229   */\n      0x7f\n        /* \"#utility.yul\":6217:6223   */\n      dup3\n        /* \"#utility.yul\":6213:6230   */\n      and\n        /* \"#utility.yul\":6203:6230   */\n      swap2\n      pop\n        /* \"#utility.yul\":6171:6232   */\n    tag_365:\n        /* \"#utility.yul\":6278:6280   */\n      0x20\n        /* \"#utility.yul\":6270:6276   */\n      dup3\n        /* \"#utility.yul\":6267:6281   */\n      lt\n        /* \"#utility.yul\":6247:6265   */\n      dup2\n        /* \"#utility.yul\":6244:6282   */\n      eq\n        /* \"#utility.yul\":6241:6402   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":6324:6334   */\n      0x4e487b71\n        /* \"#utility.yul\":6319:6322   */\n      0xe0\n        /* \"#utility.yul\":6315:6335   */\n      shl\n        /* \"#utility.yul\":6312:6313   */\n      0x00\n        /* \"#utility.yul\":6305:6336   */\n      mstore\n        /* \"#utility.yul\":6359:6363   */\n      0x22\n        /* \"#utility.yul\":6356:6357   */\n      0x04\n        /* \"#utility.yul\":6349:6364   */\n      mstore\n        /* \"#utility.yul\":6387:6391   */\n      0x24\n        /* \"#utility.yul\":6384:6385   */\n      0x00\n        /* \"#utility.yul\":6377:6392   */\n      revert\n        /* \"#utility.yul\":6241:6402   */\n    tag_366:\n      pop\n        /* \"#utility.yul\":6028:6408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6413:6751   */\n    tag_129:\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"#utility.yul\":6597:6618   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6654:6656   */\n      0x0e\n        /* \"#utility.yul\":6634:6652   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6627:6657   */\n      mstore\n      shl(0x92, 0x1393d517d055551213d492569151)\n        /* \"#utility.yul\":6688:6690   */\n      0x40\n        /* \"#utility.yul\":6673:6691   */\n      dup3\n      add\n        /* \"#utility.yul\":6666:6710   */\n      mstore\n        /* \"#utility.yul\":6742:6744   */\n      0x60\n        /* \"#utility.yul\":6727:6745   */\n      add\n      swap1\n        /* \"#utility.yul\":6413:6751   */\n      jump\t// out\n        /* \"#utility.yul\":7095:7436   */\n    tag_136:\n        /* \"#utility.yul\":7297:7299   */\n      0x20\n        /* \"#utility.yul\":7279:7300   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7336:7338   */\n      0x11\n        /* \"#utility.yul\":7316:7334   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7309:7339   */\n      mstore\n      shl(0x7a, 0x1253959053125117d49150d25412515395)\n        /* \"#utility.yul\":7370:7372   */\n      0x40\n        /* \"#utility.yul\":7355:7373   */\n      dup3\n      add\n        /* \"#utility.yul\":7348:7395   */\n      mstore\n        /* \"#utility.yul\":7427:7429   */\n      0x60\n        /* \"#utility.yul\":7412:7430   */\n      add\n      swap1\n        /* \"#utility.yul\":7095:7436   */\n      jump\t// out\n        /* \"#utility.yul\":8001:8250   */\n    tag_153:\n        /* \"#utility.yul\":8070:8076   */\n      0x00\n        /* \"#utility.yul\":8123:8125   */\n      0x20\n        /* \"#utility.yul\":8111:8120   */\n      dup3\n        /* \"#utility.yul\":8102:8109   */\n      dup5\n        /* \"#utility.yul\":8098:8121   */\n      sub\n        /* \"#utility.yul\":8094:8126   */\n      slt\n        /* \"#utility.yul\":8091:8143   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":8139:8140   */\n      0x00\n        /* \"#utility.yul\":8136:8137   */\n      dup1\n        /* \"#utility.yul\":8129:8141   */\n      revert\n        /* \"#utility.yul\":8091:8143   */\n    tag_372:\n        /* \"#utility.yul\":8171:8180   */\n      dup2\n        /* \"#utility.yul\":8165:8181   */\n      mload\n        /* \"#utility.yul\":8190:8220   */\n      tag_204\n        /* \"#utility.yul\":8214:8219   */\n      dup2\n        /* \"#utility.yul\":8190:8220   */\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":8255:8595   */\n    tag_156:\n        /* \"#utility.yul\":8457:8459   */\n      0x20\n        /* \"#utility.yul\":8439:8460   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8496:8498   */\n      0x10\n        /* \"#utility.yul\":8476:8494   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8469:8499   */\n      mstore\n      shl(0x82, 0x155394d0519157d49150d25412515395)\n        /* \"#utility.yul\":8530:8532   */\n      0x40\n        /* \"#utility.yul\":8515:8533   */\n      dup3\n      add\n        /* \"#utility.yul\":8508:8554   */\n      mstore\n        /* \"#utility.yul\":8586:8588   */\n      0x60\n        /* \"#utility.yul\":8571:8589   */\n      add\n      swap1\n        /* \"#utility.yul\":8255:8595   */\n      jump\t// out\n        /* \"#utility.yul\":8600:8934   */\n    tag_164:\n        /* \"#utility.yul\":8802:8804   */\n      0x20\n        /* \"#utility.yul\":8784:8805   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8841:8843   */\n      0x0a\n        /* \"#utility.yul\":8821:8839   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8814:8844   */\n      mstore\n      shl(0xb2, 0x1393d517d35253951151)\n        /* \"#utility.yul\":8875:8877   */\n      0x40\n        /* \"#utility.yul\":8860:8878   */\n      dup3\n      add\n        /* \"#utility.yul\":8853:8893   */\n      mstore\n        /* \"#utility.yul\":8925:8927   */\n      0x60\n        /* \"#utility.yul\":8910:8928   */\n      add\n      swap1\n        /* \"#utility.yul\":8600:8934   */\n      jump\t// out\n        /* \"#utility.yul\":9488:9873   */\n    tag_186:\n        /* \"#utility.yul\":9567:9573   */\n      0x00\n        /* \"#utility.yul\":9575:9581   */\n      dup1\n        /* \"#utility.yul\":9628:9630   */\n      0x40\n        /* \"#utility.yul\":9616:9625   */\n      dup4\n        /* \"#utility.yul\":9607:9614   */\n      dup6\n        /* \"#utility.yul\":9603:9626   */\n      sub\n        /* \"#utility.yul\":9599:9631   */\n      slt\n        /* \"#utility.yul\":9596:9648   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":9644:9645   */\n      0x00\n        /* \"#utility.yul\":9641:9642   */\n      dup1\n        /* \"#utility.yul\":9634:9646   */\n      revert\n        /* \"#utility.yul\":9596:9648   */\n    tag_379:\n        /* \"#utility.yul\":9676:9685   */\n      dup3\n        /* \"#utility.yul\":9670:9686   */\n      mload\n        /* \"#utility.yul\":9695:9726   */\n      tag_380\n        /* \"#utility.yul\":9720:9725   */\n      dup2\n        /* \"#utility.yul\":9695:9726   */\n      tag_299\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9795:9797   */\n      0x20\n        /* \"#utility.yul\":9780:9798   */\n      dup5\n      add\n        /* \"#utility.yul\":9774:9799   */\n      mload\n        /* \"#utility.yul\":9745:9750   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":9808:9841   */\n      tag_353\n        /* \"#utility.yul\":9774:9799   */\n      dup2\n        /* \"#utility.yul\":9808:9841   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":9878:10540   */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10157:10172   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10139:10173   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10209:10224   */\n      dup6\n      and\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"#utility.yul\":10189:10207   */\n      dup3\n      add\n        /* \"#utility.yul\":10182:10225   */\n      mstore\n        /* \"#utility.yul\":10256:10258   */\n      0x40\n        /* \"#utility.yul\":10241:10259   */\n      dup2\n      add\n        /* \"#utility.yul\":10234:10268   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10304:10307   */\n      0x80\n        /* \"#utility.yul\":10299:10301   */\n      0x60\n        /* \"#utility.yul\":10284:10302   */\n      dup3\n      add\n        /* \"#utility.yul\":10277:10308   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10324:10343   */\n      dup2\n      add\n        /* \"#utility.yul\":10317:10352   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10082:10086   */\n      0x00\n        /* \"#utility.yul\":10345:10351   */\n      dup3\n        /* \"#utility.yul\":10395:10401   */\n      dup5\n        /* \"#utility.yul\":10119:10122   */\n      0xa0\n        /* \"#utility.yul\":10374:10393   */\n      dup5\n      add\n        /* \"#utility.yul\":10361:10410   */\n      calldatacopy\n        /* \"#utility.yul\":10460:10461   */\n      0x00\n        /* \"#utility.yul\":10454:10457   */\n      0xa0\n        /* \"#utility.yul\":10445:10451   */\n      dup5\n        /* \"#utility.yul\":10434:10443   */\n      dup5\n        /* \"#utility.yul\":10430:10452   */\n      add\n        /* \"#utility.yul\":10426:10458   */\n      add\n        /* \"#utility.yul\":10419:10462   */\n      mstore\n        /* \"#utility.yul\":10530:10533   */\n      0xa0\n        /* \"#utility.yul\":10523:10525   */\n      0x1f\n        /* \"#utility.yul\":10519:10526   */\n      not\n        /* \"#utility.yul\":10514:10516   */\n      0x1f\n        /* \"#utility.yul\":10506:10512   */\n      dup6\n        /* \"#utility.yul\":10502:10517   */\n      add\n        /* \"#utility.yul\":10498:10527   */\n      and\n        /* \"#utility.yul\":10487:10496   */\n      dup4\n        /* \"#utility.yul\":10483:10528   */\n      add\n        /* \"#utility.yul\":10479:10534   */\n      add\n        /* \"#utility.yul\":10471:10534   */\n      swap1\n      pop\n        /* \"#utility.yul\":9878:10540   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10545:11699   */\n    tag_211:\n        /* \"#utility.yul\":11022:11025   */\n      0x00\n        /* \"#utility.yul\":11060:11066   */\n      dup6\n        /* \"#utility.yul\":11054:11067   */\n      mload\n        /* \"#utility.yul\":11076:11129   */\n      tag_384\n        /* \"#utility.yul\":11122:11128   */\n      dup2\n        /* \"#utility.yul\":11117:11120   */\n      dup5\n        /* \"#utility.yul\":11110:11114   */\n      0x20\n        /* \"#utility.yul\":11102:11108   */\n      dup11\n        /* \"#utility.yul\":11098:11115   */\n      add\n        /* \"#utility.yul\":11076:11129   */\n      tag_296\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11192:11205   */\n      dup6\n      mload\n        /* \"#utility.yul\":11151:11167   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":11214:11271   */\n      tag_385\n        /* \"#utility.yul\":11192:11205   */\n      dup2\n        /* \"#utility.yul\":11151:11167   */\n      dup4\n        /* \"#utility.yul\":11248:11252   */\n      0x20\n        /* \"#utility.yul\":11236:11253   */\n      dup11\n      add\n        /* \"#utility.yul\":11214:11271   */\n      tag_296\n      jump\t// in\n    tag_385:\n      shl(0xf8, 0x2f)\n        /* \"#utility.yul\":11293:11313   */\n      swap2\n      add\n        /* \"#utility.yul\":11344:11361   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":11386:11399   */\n      dup6\n      mload\n        /* \"#utility.yul\":11293:11313   */\n      swap1\n      swap2\n        /* \"#utility.yul\":11332:11335   */\n      swap1\n        /* \"#utility.yul\":11408:11473   */\n      tag_386\n        /* \"#utility.yul\":11386:11399   */\n      dup2\n        /* \"#utility.yul\":11460:11461   */\n      0x01\n        /* \"#utility.yul\":11449:11462   */\n      dup6\n      add\n        /* \"#utility.yul\":11442:11446   */\n      0x20\n        /* \"#utility.yul\":11430:11447   */\n      dup11\n      add\n        /* \"#utility.yul\":11408:11473   */\n      tag_296\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11536:11537   */\n      0x01\n        /* \"#utility.yul\":11492:11512   */\n      swap3\n      add\n        /* \"#utility.yul\":11528:11538   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":11521:11543   */\n      mstore\n        /* \"#utility.yul\":11568:11581   */\n      dup4\n      mload\n        /* \"#utility.yul\":11590:11652   */\n      tag_387\n        /* \"#utility.yul\":11568:11581   */\n      dup2\n        /* \"#utility.yul\":11639:11640   */\n      0x02\n        /* \"#utility.yul\":11631:11641   */\n      dup5\n      add\n        /* \"#utility.yul\":11624:11628   */\n      0x20\n        /* \"#utility.yul\":11612:11629   */\n      dup9\n      add\n        /* \"#utility.yul\":11590:11652   */\n      tag_296\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11672:11689   */\n      add\n        /* \"#utility.yul\":11691:11692   */\n      0x02\n        /* \"#utility.yul\":11668:11693   */\n      add\n      swap7\n        /* \"#utility.yul\":10545:11699   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12047:12174   */\n    tag_230:\n        /* \"#utility.yul\":12108:12118   */\n      0x4e487b71\n        /* \"#utility.yul\":12103:12106   */\n      0xe0\n        /* \"#utility.yul\":12099:12119   */\n      shl\n        /* \"#utility.yul\":12096:12097   */\n      0x00\n        /* \"#utility.yul\":12089:12120   */\n      mstore\n        /* \"#utility.yul\":12139:12143   */\n      0x41\n        /* \"#utility.yul\":12136:12137   */\n      0x04\n        /* \"#utility.yul\":12129:12144   */\n      mstore\n        /* \"#utility.yul\":12163:12167   */\n      0x24\n        /* \"#utility.yul\":12160:12161   */\n      0x00\n        /* \"#utility.yul\":12153:12168   */\n      revert\n        /* \"#utility.yul\":12311:12438   */\n    tag_300:\n        /* \"#utility.yul\":12372:12382   */\n      0x4e487b71\n        /* \"#utility.yul\":12367:12370   */\n      0xe0\n        /* \"#utility.yul\":12363:12383   */\n      shl\n        /* \"#utility.yul\":12360:12361   */\n      0x00\n        /* \"#utility.yul\":12353:12384   */\n      mstore\n        /* \"#utility.yul\":12403:12407   */\n      0x11\n        /* \"#utility.yul\":12400:12401   */\n      0x04\n        /* \"#utility.yul\":12393:12408   */\n      mstore\n        /* \"#utility.yul\":12427:12431   */\n      0x24\n        /* \"#utility.yul\":12424:12425   */\n      0x00\n        /* \"#utility.yul\":12417:12432   */\n      revert\n        /* \"#utility.yul\":12443:12611   */\n    tag_240:\n        /* \"#utility.yul\":12483:12490   */\n      0x00\n        /* \"#utility.yul\":12549:12550   */\n      dup2\n        /* \"#utility.yul\":12545:12546   */\n      0x00\n        /* \"#utility.yul\":12541:12547   */\n      not\n        /* \"#utility.yul\":12537:12551   */\n      div\n        /* \"#utility.yul\":12534:12535   */\n      dup4\n        /* \"#utility.yul\":12531:12552   */\n      gt\n        /* \"#utility.yul\":12526:12527   */\n      dup3\n        /* \"#utility.yul\":12519:12528   */\n      iszero\n        /* \"#utility.yul\":12512:12529   */\n      iszero\n        /* \"#utility.yul\":12508:12553   */\n      and\n        /* \"#utility.yul\":12505:12576   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":12556:12574   */\n      tag_394\n      tag_300\n      jump\t// in\n    tag_394:\n      pop\n        /* \"#utility.yul\":12596:12605   */\n      mul\n      swap1\n        /* \"#utility.yul\":12443:12611   */\n      jump\t// out\n        /* \"#utility.yul\":12616:12744   */\n    tag_242:\n        /* \"#utility.yul\":12656:12659   */\n      0x00\n        /* \"#utility.yul\":12687:12688   */\n      dup3\n        /* \"#utility.yul\":12683:12689   */\n      not\n        /* \"#utility.yul\":12680:12681   */\n      dup3\n        /* \"#utility.yul\":12677:12690   */\n      gt\n        /* \"#utility.yul\":12674:12713   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":12693:12711   */\n      tag_397\n      tag_300\n      jump\t// in\n    tag_397:\n      pop\n        /* \"#utility.yul\":12729:12738   */\n      add\n      swap1\n        /* \"#utility.yul\":12616:12744   */\n      jump\t// out\n        /* \"#utility.yul\":12749:12876   */\n    tag_248:\n        /* \"#utility.yul\":12810:12820   */\n      0x4e487b71\n        /* \"#utility.yul\":12805:12808   */\n      0xe0\n        /* \"#utility.yul\":12801:12821   */\n      shl\n        /* \"#utility.yul\":12798:12799   */\n      0x00\n        /* \"#utility.yul\":12791:12822   */\n      mstore\n        /* \"#utility.yul\":12841:12845   */\n      0x32\n        /* \"#utility.yul\":12838:12839   */\n      0x04\n        /* \"#utility.yul\":12831:12846   */\n      mstore\n        /* \"#utility.yul\":12865:12869   */\n      0x24\n        /* \"#utility.yul\":12862:12863   */\n      0x00\n        /* \"#utility.yul\":12855:12870   */\n      revert\n        /* \"#utility.yul\":12881:13017   */\n    tag_261:\n        /* \"#utility.yul\":12920:12923   */\n      0x00\n        /* \"#utility.yul\":12948:12953   */\n      dup2\n        /* \"#utility.yul\":12938:12977   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":12957:12975   */\n      tag_401\n      tag_300\n      jump\t// in\n    tag_401:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":12993:13011   */\n      add\n      swap1\n        /* \"#utility.yul\":12881:13017   */\n      jump\t// out\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220ff1d3caeccbc6ac232289188f06c56d5ad692c1bb52bf2a4f2e4913b60a01a1f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 77,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x178B CODESIZE SUB DUP1 PUSH2 0x178B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x16EC PUSH2 0x9F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x320 ADD MSTORE PUSH2 0x861 ADD MSTORE PUSH2 0x16EC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8AA1B31 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xB7D19FC4 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x83B43589 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9ABE9DFB EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16DC165B GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x16DC165B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EF JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x15A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x1AD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x3B4 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3CF JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0x141B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0x141B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x430 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x57524F4E475F46524F4D PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x147E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 PUSH2 0x5E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x604 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP5 DUP8 AND DUP1 DUP5 MSTORE DUP6 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 ADD SWAP1 SWAP3 SSTORE DUP6 DUP4 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE SWAP3 MLOAD DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1697 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BD DUP3 DUP3 PUSH2 0xBA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6CC DUP4 DUP4 DUP4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 PUSH2 0x775 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP5 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x745 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xC7D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8EB PUSH1 0x4 DUP6 DUP6 PUSH2 0x1040 JUMP JUMPDEST POP PUSH2 0x8F8 PUSH1 0x5 DUP4 DUP4 PUSH2 0x1040 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEEF1C5F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xEEF1C5F5 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x977 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99B SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA1C DUP6 DUP6 DUP6 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO DUP1 PUSH2 0xAB3 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA64 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2A PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x7777772E6D696461737761702E6F72672F PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH2 0xB61 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xB76 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0xB7F DUP7 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB92 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1053149150511657D35253951151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 ADD SWAP1 SWAP3 SSTORE DUP5 DUP4 MSTORE DUP3 SWAP1 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1697 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD DUP5 SWAP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1697 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3CF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD3D DUP4 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD87 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xDC0 JUMPI PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xDDB DUP4 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0xDE6 SWAP1 PUSH1 0x2 PUSH2 0x1651 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDFE JUMPI PUSH2 0xDFE PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE28 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE43 JUMPI PUSH2 0xE43 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xE96 DUP5 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0xEA1 SWAP1 PUSH1 0x1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF19 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0x1669 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEEB JUMPI PUSH2 0xEEB PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xF12 DUP2 PUSH2 0x167F JUMP JUMPDEST SWAP1 POP PUSH2 0xEA4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xFA7 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xFD3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFF1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1009 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x101D JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x102F JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x104C SWAP1 PUSH2 0x141B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x106E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10B4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1087 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x10B4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10B4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10B4 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP PUSH2 0x10C0 SWAP3 SWAP2 POP PUSH2 0x10C4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10C0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA2 DUP2 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1127 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x110F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x115B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BB DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP5 PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP PUSH2 0x11F5 PUSH1 0x20 DUP6 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA2 DUP3 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x124A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128D DUP9 PUSH2 0x1188 JUMP JUMPDEST SWAP7 POP PUSH2 0x129B PUSH1 0x20 DUP10 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP6 POP PUSH2 0x12A9 PUSH1 0x40 DUP10 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D2 DUP12 DUP4 DUP13 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F8 DUP11 DUP3 DUP12 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA2 DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1359 DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139A DUP7 PUSH2 0x1188 JUMP JUMPDEST SWAP5 POP PUSH2 0x13A8 PUSH1 0x20 DUP8 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1404 DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH2 0x1412 PUSH1 0x20 DUP5 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x142F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1450 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x1253959053125117D49150D25412515395 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA2 DUP2 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x155394D0519157D49150D25412515395 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x1393D517D35253951151 PUSH1 0xB2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1532 DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x136E DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x15A9 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x110C JUMP JUMPDEST DUP6 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15BD DUP2 DUP4 PUSH1 0x20 DUP11 ADD PUSH2 0x110C JUMP JUMPDEST PUSH1 0x2F PUSH1 0xF8 SHL SWAP2 ADD DUP2 DUP2 MSTORE DUP6 MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x15DD DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1 SWAP3 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x15F8 DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x110C JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x164C JUMPI PUSH2 0x164C PUSH2 0x161C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1664 PUSH2 0x161C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x168E JUMPI PUSH2 0x168E PUSH2 0x161C JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT SAR EXTCODECOPY 0xAE 0xCC 0xBC PUSH11 0xC232289188F06C56D5AD69 0x2C SHL 0xB5 0x2B CALLCODE LOG4 CALLCODE 0xE4 SWAP2 EXTCODESIZE PUSH1 0xA0 BYTE 0x1F PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "328:2156:3:-:0;;;750:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;790:18:3;;;818:11;:19;;-1:-1:-1;;;;818:19:3;;;328:2156;;14:290:9;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;:::-;328:2156:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_baseURI_399": {
									"entryPoint": null,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_1252": {
									"entryPoint": 3197,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_1205": {
									"entryPoint": 2985,
									"id": 1205,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_949": {
									"entryPoint": 1123,
									"id": 949,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_898": {
									"entryPoint": 2035,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_391": {
									"entryPoint": 1942,
									"id": 391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@factory_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_902": {
									"entryPoint": null,
									"id": 902,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getReserves_420": {
									"entryPoint": 2338,
									"id": 420,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@initialize_301": {
									"entryPoint": 2134,
									"id": 301,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@initialized_236": {
									"entryPoint": null,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_908": {
									"entryPoint": null,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_1663": {
									"entryPoint": 3944,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_374": {
									"entryPoint": 1692,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_218": {
									"entryPoint": 981,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_876": {
									"entryPoint": 1977,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@pair_230": {
									"entryPoint": null,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1092": {
									"entryPoint": 1729,
									"id": 1092,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1134": {
									"entryPoint": 2577,
									"id": 1134,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_973": {
									"entryPoint": 2469,
									"id": 973,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1154": {
									"entryPoint": 899,
									"id": 1154,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_220": {
									"entryPoint": 2325,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toHexString_1515": {
									"entryPoint": 3533,
									"id": 1515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1535": {
									"entryPoint": 3354,
									"id": 1535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_1417": {
									"entryPoint": 3376,
									"id": 1417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_354": {
									"entryPoint": 2774,
									"id": 354,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenX_232": {
									"entryPoint": null,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenY_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1052": {
									"entryPoint": 1325,
									"id": 1052,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_calldata": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_string_calldata_ptrt_string_calldata_ptr": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128t_uint128_fromMemory": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint128": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13380:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:9"
															},
															"nodeType": "YulIf",
															"src": "68:71:9"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:9",
														"type": ""
													}
												],
												"src": "14:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:9"
															},
															"nodeType": "YulIf",
															"src": "229:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:9",
														"type": ""
													}
												],
												"src": "150:245:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:9",
														"type": ""
													}
												],
												"src": "400:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:9",
																"statements": []
															},
															"src": "674:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:9"
															},
															"nodeType": "YulIf",
															"src": "796:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:9",
														"type": ""
													}
												],
												"src": "592:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "976:262:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1016:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1036:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1030:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1020:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1063:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1074:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1079:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1052:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1121:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1129:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1117:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1149:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1134:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1154:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1095:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1095:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1170:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1186:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1205:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1213:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1201:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1201:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1222:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1218:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1218:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1182:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1178:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1170:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "945:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "956:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "967:4:9",
														"type": ""
													}
												],
												"src": "855:383:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1334:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1343:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:32:9"
															},
															"nodeType": "YulIf",
															"src": "1323:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1384:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1407:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1394:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1279:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1290:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1302:6:9",
														"type": ""
													}
												],
												"src": "1243:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1529:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1539:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1551:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1547:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1539:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1581:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1596:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1612:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1617:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1608:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1608:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1621:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1604:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1604:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1574:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1574:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1498:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1509:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1520:4:9",
														"type": ""
													}
												],
												"src": "1428:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1695:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1717:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1704:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1695:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1787:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1796:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1789:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1789:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1746:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1757:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1772:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1777:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1768:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1768:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1781:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1764:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1764:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1753:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1753:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1743:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1743:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:50:9"
															},
															"nodeType": "YulIf",
															"src": "1733:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1675:5:9",
														"type": ""
													}
												],
												"src": "1636:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1947:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1922:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1931:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1914:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:32:9"
															},
															"nodeType": "YulIf",
															"src": "1911:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1972:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2001:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1982:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2020:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2047:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2030:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2030:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1859:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1870:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1882:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1890:6:9",
														"type": ""
													}
												],
												"src": "1814:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2177:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2223:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2232:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2235:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2225:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2225:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2225:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2198:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2207:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2194:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2194:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2219:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2190:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:32:9"
															},
															"nodeType": "YulIf",
															"src": "2187:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2248:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2277:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2258:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2296:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2329:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2340:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2325:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2325:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2306:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2296:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2380:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2391:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2376:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2363:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2127:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2138:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2150:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2158:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2166:6:9",
														"type": ""
													}
												],
												"src": "2073:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2476:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2522:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2531:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2534:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2524:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2524:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2497:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:32:9"
															},
															"nodeType": "YulIf",
															"src": "2486:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2547:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2576:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2557:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2442:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2453:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2465:6:9",
														"type": ""
													}
												],
												"src": "2406:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2698:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2708:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2750:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2761:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2743:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2743:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2667:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2678:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2689:4:9",
														"type": ""
													}
												],
												"src": "2597:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:275:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2901:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2910:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2903:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2903:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2880:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2888:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2876:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2876:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2895:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:35:9"
															},
															"nodeType": "YulIf",
															"src": "2862:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2926:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2949:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2936:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2936:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2999:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3008:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3011:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3001:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3001:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3001:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2971:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2979:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2968:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:30:9"
															},
															"nodeType": "YulIf",
															"src": "2965:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3040:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3048:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3036:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3024:8:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3105:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3114:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3117:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3107:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3107:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3107:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3076:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3084:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3072:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3093:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3068:30:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3100:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3065:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:39:9"
															},
															"nodeType": "YulIf",
															"src": "3062:59:9"
														}
													]
												},
												"name": "abi_decode_string_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2815:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2823:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2831:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2841:6:9",
														"type": ""
													}
												],
												"src": "2779:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3310:767:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3357:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3366:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3369:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3359:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3359:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3359:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3331:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3340:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3323:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:33:9"
															},
															"nodeType": "YulIf",
															"src": "3320:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3382:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3411:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3392:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3430:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3440:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3430:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3487:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3520:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3531:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3516:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3516:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3497:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:38:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3544:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3586:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3571:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3558:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3548:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3599:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3609:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3603:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3654:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3663:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3666:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3656:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3656:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3656:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3642:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3650:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3639:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:14:9"
															},
															"nodeType": "YulIf",
															"src": "3636:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3679:85:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3736:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3747:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3732:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3732:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3756:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3705:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:59:9"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3683:8:9",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "3693:8:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3773:18:9",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3783:8:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3800:18:9",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "3810:8:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3827:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3860:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3871:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3856:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3843:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3843:33:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3831:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3905:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3914:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3917:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3907:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3907:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3907:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3891:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3901:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3888:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:16:9"
															},
															"nodeType": "YulIf",
															"src": "3885:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3930:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3998:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4009:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3956:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:61:9"
															},
															"variables": [
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "3934:8:9",
																	"type": ""
																},
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "3944:8:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4026:18:9",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "4036:8:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4026:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4053:18:9",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "4063:8:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_string_calldata_ptrt_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3228:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3239:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3251:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3259:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3267:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3275:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3283:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3291:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3299:6:9",
														"type": ""
													}
												],
												"src": "3132:945:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4127:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4191:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4200:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4203:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4193:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4193:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4193:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4150:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4161:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4176:3:9",
																										"type": "",
																										"value": "128"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4181:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "4172:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4172:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4185:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4168:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4168:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4157:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4157:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4147:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4140:50:9"
															},
															"nodeType": "YulIf",
															"src": "4137:70:9"
														}
													]
												},
												"name": "validator_revert_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4116:5:9",
														"type": ""
													}
												],
												"src": "4082:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4288:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4334:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4343:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4346:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4336:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4336:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4309:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4318:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4305:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4305:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4301:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:32:9"
															},
															"nodeType": "YulIf",
															"src": "4298:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4359:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4385:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4372:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4363:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4429:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "4404:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4444:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4454:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4444:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4254:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4265:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4277:6:9",
														"type": ""
													}
												],
												"src": "4218:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4599:175:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4609:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4621:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4632:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4617:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4617:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4609:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4644:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4662:3:9",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4667:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4658:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4658:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4671:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4648:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4689:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4704:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4712:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4700:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4736:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4747:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4764:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:43:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4560:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4571:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4590:4:9",
														"type": ""
													}
												],
												"src": "4470:304:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4863:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4909:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4918:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4921:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4911:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4911:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4911:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4884:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4893:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4880:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4880:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4876:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:32:9"
															},
															"nodeType": "YulIf",
															"src": "4873:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4934:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4963:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4944:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4982:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5023:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5008:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4995:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4986:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5089:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5092:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5082:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5082:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5049:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5070:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5063:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5063:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5056:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5056:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5046:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5046:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:40:9"
															},
															"nodeType": "YulIf",
															"src": "5036:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5105:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5115:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4821:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4832:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4844:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4852:6:9",
														"type": ""
													}
												],
												"src": "4779:347:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:487:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5318:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5327:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5330:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5320:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5320:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5320:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:33:9"
															},
															"nodeType": "YulIf",
															"src": "5281:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5343:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5372:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5353:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5391:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5424:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5435:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5420:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5420:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5401:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5391:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5475:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5486:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5471:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5471:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5458:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5458:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5448:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5499:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5530:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5541:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5513:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5503:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5588:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5597:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5590:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5590:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5590:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5560:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5568:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5557:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5557:30:9"
															},
															"nodeType": "YulIf",
															"src": "5554:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5613:85:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5681:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5690:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5639:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:59:9"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "5617:8:9",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "5627:8:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5707:18:9",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "5717:8:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5734:18:9",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "5744:8:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5205:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5216:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5228:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5236:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5244:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5252:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5260:6:9",
														"type": ""
													}
												],
												"src": "5131:627:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5850:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5896:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5905:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5908:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5898:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5898:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5898:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5871:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5880:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5867:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5867:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5892:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5863:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:32:9"
															},
															"nodeType": "YulIf",
															"src": "5860:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5921:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5931:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5969:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6013:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5979:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5969:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5808:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5819:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5831:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5839:6:9",
														"type": ""
													}
												],
												"src": "5763:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6083:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6093:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6107:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6110:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6124:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6154:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6160:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6150:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6128:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6201:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6203:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6217:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6225:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6213:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6213:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6203:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6181:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6174:26:9"
															},
															"nodeType": "YulIf",
															"src": "6171:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6291:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6312:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6319:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6324:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6315:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6315:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6305:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6305:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6305:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6359:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6349:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6349:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6349:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6384:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6387:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6377:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6377:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6377:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6247:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6270:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6278:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6267:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6244:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:38:9"
															},
															"nodeType": "YulIf",
															"src": "6241:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6063:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6072:6:9",
														"type": ""
													}
												],
												"src": "6028:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6587:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6604:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6615:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6649:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6627:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6688:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6673:18:9"
																	},
																	{
																		"hexValue": "4e4f545f415554484f52495a4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6693:16:9",
																		"type": "",
																		"value": "NOT_AUTHORIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6666:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6719:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6731:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6742:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6719:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6564:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6578:4:9",
														"type": ""
													}
												],
												"src": "6413:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6930:160:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6947:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6958:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6940:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6940:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6981:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6992:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6977:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6997:2:9",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7020:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7031:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7016:18:9"
																	},
																	{
																		"hexValue": "57524f4e475f46524f4d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7036:12:9",
																		"type": "",
																		"value": "WRONG_FROM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7009:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7058:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7070:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7081:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7066:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7066:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7058:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6921:4:9",
														"type": ""
													}
												],
												"src": "6756:334:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7269:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7286:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7297:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7320:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7331:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7316:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7336:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7309:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7359:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7370:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7355:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7355:18:9"
																	},
																	{
																		"hexValue": "494e56414c49445f524543495049454e54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7375:19:9",
																		"type": "",
																		"value": "INVALID_RECIPIENT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7348:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7348:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7416:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7427:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7412:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7404:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7246:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7260:4:9",
														"type": ""
													}
												],
												"src": "7095:341:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7698:298:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7708:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7731:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7722:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7722:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7718:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7712:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7753:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7768:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7776:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7764:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7764:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7746:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7800:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7811:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7796:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7820:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7828:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7816:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7789:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7789:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7852:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7863:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7848:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7848:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7868:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7841:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7841:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7895:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7906:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7946:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7952:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7963:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7975:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7986:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7971:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7971:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7963:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7651:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7662:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7670:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7678:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7689:4:9",
														"type": ""
													}
												],
												"src": "7441:555:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8081:169:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8127:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8136:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8139:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8129:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8129:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8129:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8102:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8111:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8098:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8098:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8094:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:32:9"
															},
															"nodeType": "YulIf",
															"src": "8091:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8152:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8171:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8165:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8165:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8156:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8214:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "8190:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8190:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8190:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8229:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8239:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8229:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8047:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8058:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8070:6:9",
														"type": ""
													}
												],
												"src": "8001:249:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8429:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8446:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8457:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8439:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8480:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8476:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8476:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8496:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8469:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8469:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8469:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:9"
																	},
																	{
																		"hexValue": "554e534146455f524543495049454e54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8535:18:9",
																		"type": "",
																		"value": "UNSAFE_RECIPIENT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8563:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8575:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8586:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8571:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8571:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8563:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8406:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8420:4:9",
														"type": ""
													}
												],
												"src": "8255:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8774:160:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8791:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8802:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8784:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8784:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8784:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8825:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8836:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8821:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8841:2:9",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8814:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8814:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8864:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8875:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8860:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8860:18:9"
																	},
																	{
																		"hexValue": "4e4f545f4d494e544544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8880:12:9",
																		"type": "",
																		"value": "NOT_MINTED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8853:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8853:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8853:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8902:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8914:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8925:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8910:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8902:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8751:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8765:4:9",
														"type": ""
													}
												],
												"src": "8600:334:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9113:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9130:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9123:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9180:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:9"
																	},
																	{
																		"hexValue": "5a45524f5f41444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9219:14:9",
																		"type": "",
																		"value": "ZERO_ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9243:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9255:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9266:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9251:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9243:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9090:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9104:4:9",
														"type": ""
													}
												],
												"src": "8939:336:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9381:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9391:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9403:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9414:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9399:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9391:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9433:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9448:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9464:3:9",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9469:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9460:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9460:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9473:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9456:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9456:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9444:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9350:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9361:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9372:4:9",
														"type": ""
													}
												],
												"src": "9280:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9586:287:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9632:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9641:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9644:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9634:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9634:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9634:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9607:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9616:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9628:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9599:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:32:9"
															},
															"nodeType": "YulIf",
															"src": "9596:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9657:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9676:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9670:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9661:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9720:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "9695:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9695:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9735:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9745:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9735:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9759:40:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9784:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9795:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9780:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9780:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9774:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:25:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "9763:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9833:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "9808:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9808:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9808:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9850:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "9860:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9850:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9544:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9555:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9567:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9575:6:9",
														"type": ""
													}
												],
												"src": "9488:385:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10091:449:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10101:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10119:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10124:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10115:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10115:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10128:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10111:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10111:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10105:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10146:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10161:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10169:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10157:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10157:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10139:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10139:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10204:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10189:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10213:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10221:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10209:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10182:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10182:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10245:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10256:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10241:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10241:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10261:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10234:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10234:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10288:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10299:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10284:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10284:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10304:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10277:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10277:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10277:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10328:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10339:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10324:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10324:19:9"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10345:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10317:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10317:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10378:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10389:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10374:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10374:19:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10395:6:9"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10403:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "10361:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10361:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10361:49:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10434:9:9"
																					},
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "10445:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10430:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10430:22:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10454:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10426:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10426:32:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10460:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10419:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10419:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:63:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10487:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value4",
																								"nodeType": "YulIdentifier",
																								"src": "10506:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10514:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10502:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10502:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10523:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10519:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10519:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10498:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10498:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10483:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10483:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10530:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10479:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:55:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10471:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10028:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10039:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10047:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10055:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10063:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10071:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10082:4:9",
														"type": ""
													}
												],
												"src": "9878:662:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11030:669:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11040:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11060:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11054:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11054:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11044:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11102:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11110:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11098:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11098:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11117:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11076:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11076:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11076:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11138:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11155:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11160:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11151:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11151:16:9"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "11142:5:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11176:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11198:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11192:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11192:13:9"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "11180:8:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11240:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11248:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:17:9"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "11255:5:9"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11262:8:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11214:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11214:57:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11280:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "11297:5:9"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11304:8:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11293:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11293:20:9"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "11284:5:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11322:13:9",
															"value": {
																"hexValue": "2f",
																"kind": "string",
																"nodeType": "YulLiteral",
																"src": "11332:3:9",
																"type": "",
																"value": "/"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11326:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "11351:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11358:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11344:17:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11344:17:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11370:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11392:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11386:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11386:13:9"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "11374:8:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11434:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11442:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11430:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11430:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end_2",
																				"nodeType": "YulIdentifier",
																				"src": "11453:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11460:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11449:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11449:13:9"
																	},
																	{
																		"name": "length_2",
																		"nodeType": "YulIdentifier",
																		"src": "11464:8:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11408:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11408:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11408:65:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11482:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "11496:5:9"
																	},
																	{
																		"name": "length_2",
																		"nodeType": "YulIdentifier",
																		"src": "11503:8:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11492:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:20:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11486:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11532:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11536:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11528:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11528:10:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11540:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11521:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11521:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11552:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11574:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11568:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11568:13:9"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nodeType": "YulTypedName",
																	"src": "11556:8:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "11616:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11624:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11612:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11635:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11639:1:9",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11631:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11631:10:9"
																	},
																	{
																		"name": "length_3",
																		"nodeType": "YulIdentifier",
																		"src": "11643:8:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11590:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11590:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11590:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11661:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11676:2:9"
																			},
																			{
																				"name": "length_3",
																				"nodeType": "YulIdentifier",
																				"src": "11680:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11672:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11672:17:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11691:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11668:25:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11661:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10982:3:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10987:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10995:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11003:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11011:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11022:3:9",
														"type": ""
													}
												],
												"src": "10545:1154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11878:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11895:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11906:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11888:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11888:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11940:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11925:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11945:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11918:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11918:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11968:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11979:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11964:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11964:18:9"
																	},
																	{
																		"hexValue": "414c52454144595f4d494e544544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11984:16:9",
																		"type": "",
																		"value": "ALREADY_MINTED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11957:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11957:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12010:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12022:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12033:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12010:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11855:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11869:4:9",
														"type": ""
													}
												],
												"src": "11704:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12079:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12096:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12103:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12108:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12099:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12099:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12089:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12089:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12089:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12136:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12139:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12129:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12129:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12160:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12163:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12153:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12153:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12153:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12047:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12211:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12228:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12235:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12240:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12231:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12221:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12268:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12271:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12261:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12261:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12292:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12295:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12285:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12285:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12285:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12179:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12343:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12360:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12367:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12372:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12363:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12363:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12353:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12353:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12353:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12400:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12403:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12393:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12393:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12424:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12427:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12417:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12417:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12311:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12495:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12554:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12556:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12556:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12556:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12526:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12519:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12519:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12512:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12512:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12534:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12545:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12541:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12541:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12549:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12537:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12537:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12531:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12531:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12508:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12508:45:9"
															},
															"nodeType": "YulIf",
															"src": "12505:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12585:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12600:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12603:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12596:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12596:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12585:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12474:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12477:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12483:7:9",
														"type": ""
													}
												],
												"src": "12443:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12664:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12691:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12693:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12693:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12693:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12680:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12687:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12683:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12683:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12677:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12677:13:9"
															},
															"nodeType": "YulIf",
															"src": "12674:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12722:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12733:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12736:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12722:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12647:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12650:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12656:3:9",
														"type": ""
													}
												],
												"src": "12616:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12781:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12805:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12810:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12801:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12838:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12841:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12831:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12831:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12831:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12862:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12865:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12855:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12749:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12928:89:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12955:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12957:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12957:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12957:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12948:5:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12941:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12941:13:9"
															},
															"nodeType": "YulIf",
															"src": "12938:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12986:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12997:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13008:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13004:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12993:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12993:18:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12986:3:9"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12910:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12920:3:9",
														"type": ""
													}
												],
												"src": "12881:136:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13196:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13213:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13224:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13206:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13206:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13206:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13247:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13258:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13243:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13243:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13263:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13236:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13236:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13286:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13297:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13282:18:9"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13302:34:9",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13275:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13275:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13346:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13358:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13369:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13354:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13354:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13346:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13173:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13187:4:9",
														"type": ""
													}
												],
												"src": "13022:356:9"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function validator_revert_uint128(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(128, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint128(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(128, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NOT_AUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"WRONG_FROM\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_RECIPIENT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"UNSAFE_RECIPIENT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"NOT_MINTED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(128, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint128(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_uint128(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let _1 := \"/\"\n        mstore(end_2, _1)\n        let length_2 := mload(value2)\n        copy_memory_to_memory(add(value2, 0x20), add(end_2, 1), length_2)\n        let _2 := add(end_2, length_2)\n        mstore(add(_2, 1), _1)\n        let length_3 := mload(value3)\n        copy_memory_to_memory(add(value3, 0x20), add(_2, 2), length_3)\n        end := add(add(_2, length_3), 2)\n    }\n    function abi_encode_tuple_t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"ALREADY_MINTED\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"228": [
									{
										"length": 32,
										"start": 800
									},
									{
										"length": 32,
										"start": 2145
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a8aa1b311161007c578063a8aa1b31146102e2578063b7d19fc4146102f5578063b88d4fde14610308578063c45a01551461031b578063c87b56dd14610342578063e985e9c51461035557600080fd5b806370a082311461026057806383b435891461028157806395d89b41146102945780639abe9dfb1461029c578063a22cb465146102cf57600080fd5b806316dc165b1161010a57806316dc165b146101ee57806323b872dd1461020157806340c10f191461021457806342842e0e1461022757806342966c681461023a5780636352211e1461024d57600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101c5578063158ef93e146101da575b600080fd5b61015a6101553660046110ef565b610383565b60405190151581526020015b60405180910390f35b6101776103d5565b604051610166919061113c565b6101ad61019236600461116f565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610166565b6101d86101d336600461119f565b610463565b005b60085461015a90600160a01b900460ff1681565b6007546101ad906001600160a01b031681565b6101d861020f3660046111c9565b61052d565b6101d861022236600461119f565b61069c565b6101d86102353660046111c9565b6106c1565b6101d861024836600461116f565b610796565b6101ad61025b36600461116f565b6107b9565b61027361026e366004611205565b6107f3565b604051908152602001610166565b6101d861028f366004611269565b610856565b610177610915565b6102af6102aa366004611320565b610922565b604080516001600160801b03938416815292909116602083015201610166565b6101d86102dd36600461133d565b6109a5565b6006546101ad906001600160a01b031681565b6008546101ad906001600160a01b031681565b6101d8610316366004611379565b610a11565b6101ad7f000000000000000000000000000000000000000000000000000000000000000081565b61017761035036600461116f565b610ad6565b61015a6103633660046113e8565b600360209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806103b457506380ac58cd60e01b6001600160e01b03198316145b806103cf5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600480546103e29061141b565b80601f016020809104026020016040519081016040528092919081815260200182805461040e9061141b565b801561045b5780601f106104305761010080835404028352916020019161045b565b820191906000526020600020905b81548152906001019060200180831161043e57829003601f168201915b505050505081565b6000818152602081905260409020546001600160a01b0316338114806104ac57506001600160a01b038116600090815260036020908152604080832033845290915290205460ff165b6104d15760405162461bcd60e51b81526004016104c890611456565b60405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152602081905260409020546001600160a01b038481169116146105835760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016104c8565b6001600160a01b0382166105a95760405162461bcd60e51b81526004016104c89061147e565b336001600160a01b03841614806105e357506001600160a01b038316600090815260036020908152604080832033845290915290205460ff165b8061060457506000818152600260205260409020546001600160a01b031633145b6106205760405162461bcd60e51b81526004016104c890611456565b6001600160a01b0380841660008181526001602081815260408084208054600019019055948716808452858420805490930190925585835282815284832080546001600160a01b0319908116841790915560029091528483208054909116905592518493929160008051602061169783398151915291a4505050565b6006546001600160a01b031633146106b357600080fd5b6106bd8282610ba9565b5050565b6106cc83838361052d565b6001600160a01b0382163b15806107755750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076991906114a9565b6001600160e01b031916145b6107915760405162461bcd60e51b81526004016104c8906114c6565b505050565b6006546001600160a01b031633146107ad57600080fd5b6107b681610c7d565b50565b6000818152602081905260409020546001600160a01b0316806107ee5760405162461bcd60e51b81526004016104c8906114f0565b919050565b60006001600160a01b03821661083a5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016104c8565b506001600160a01b031660009081526001602052604090205490565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461088b57600080fd5b600854600160a01b900460ff16156108a257600080fd5b600680546001600160a01b03808a166001600160a01b0319928316179092556007805489841690831617905560088054928816929091169190911790556108eb60048585611040565b506108f860058383611040565b50506008805460ff60a01b1916600160a01b179055505050505050565b600580546103e29061141b565b60065460405163eef1c5f560e01b81526001600160801b038316600482015260009182916001600160a01b039091169063eef1c5f5906024016040805180830381865afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190611514565b9094909350915050565b3360008181526003602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a1c85858561052d565b6001600160a01b0384163b1580610ab35750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610a649033908a90899089908990600401611543565b6020604051808303816000875af1158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa791906114a9565b6001600160e01b031916145b610acf5760405162461bcd60e51b81526004016104c8906114c6565b5050505050565b6000818152602081905260409020546060906001600160a01b0316610afa57600080fd5b6000610b2a6040805180820190915260118152707777772e6d696461737761702e6f72672f60781b602082015290565b90506000815111610b4a5760405180602001604052806000815250610ba2565b6007548190610b61906001600160a01b0316610d1a565b600854610b76906001600160a01b0316610d1a565b610b7f86610d30565b604051602001610b929493929190611597565b6040516020818303038152906040525b9392505050565b6001600160a01b038216610bcf5760405162461bcd60e51b81526004016104c89061147e565b6000818152602081905260409020546001600160a01b031615610c255760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016104c8565b6001600160a01b0382166000818152600160208181526040808420805490930190925584835282905280822080546001600160a01b031916841790555183929190600080516020611697833981519152908290a45050565b6000818152602081905260409020546001600160a01b031680610cb25760405162461bcd60e51b81526004016104c8906114f0565b6001600160a01b0381166000818152600160209081526040808320805460001901905585835282825280832080546001600160a01b03199081169091556002909252808320805490921690915551849290600080516020611697833981519152908390a45050565b60606103cf6001600160a01b0383166014610dcd565b60606000610d3d83610f68565b600101905060608167ffffffffffffffff811115610d5d57610d5d611606565b6040519080825280601f01601f191660200182016040528015610d87576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610dc057610dc5565b610d91565b509392505050565b606080610ddb836002611632565b610de6906002611651565b67ffffffffffffffff811115610dfe57610dfe611606565b6040519080825280601f01601f191660200182016040528015610e28576020820181803683370190505b509050600360fc1b81600081518110610e4357610e43611669565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e7257610e72611669565b60200101906001600160f81b031916908160001a9053506000610e96846002611632565b610ea1906001611651565b90505b6001811115610f19576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610ed557610ed5611669565b1a60f81b828281518110610eeb57610eeb611669565b60200101906001600160f81b031916908160001a90535060049490941c93610f128161167f565b9050610ea4565b508315610ba25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104c8565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610fa75772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fd3576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ff157662386f26fc10000830492506010015b6305f5e1008310611009576305f5e100830492506008015b612710831061101d57612710830492506004015b6064831061102f576064830492506002015b600a83106103cf5760010192915050565b82805461104c9061141b565b90600052602060002090601f01602090048101928261106e57600085556110b4565b82601f106110875782800160ff198235161785556110b4565b828001600101855582156110b4579182015b828111156110b4578235825591602001919060010190611099565b506110c09291506110c4565b5090565b5b808211156110c057600081556001016110c5565b6001600160e01b0319811681146107b657600080fd5b60006020828403121561110157600080fd5b8135610ba2816110d9565b60005b8381101561112757818101518382015260200161110f565b83811115611136576000848401525b50505050565b602081526000825180602084015261115b81604085016020870161110c565b601f01601f19169190910160400192915050565b60006020828403121561118157600080fd5b5035919050565b80356001600160a01b03811681146107ee57600080fd5b600080604083850312156111b257600080fd5b6111bb83611188565b946020939093013593505050565b6000806000606084860312156111de57600080fd5b6111e784611188565b92506111f560208501611188565b9150604084013590509250925092565b60006020828403121561121757600080fd5b610ba282611188565b60008083601f84011261123257600080fd5b50813567ffffffffffffffff81111561124a57600080fd5b60208301915083602082850101111561126257600080fd5b9250929050565b600080600080600080600060a0888a03121561128457600080fd5b61128d88611188565b965061129b60208901611188565b95506112a960408901611188565b9450606088013567ffffffffffffffff808211156112c657600080fd5b6112d28b838c01611220565b909650945060808a01359150808211156112eb57600080fd5b506112f88a828b01611220565b989b979a50959850939692959293505050565b6001600160801b03811681146107b657600080fd5b60006020828403121561133257600080fd5b8135610ba28161130b565b6000806040838503121561135057600080fd5b61135983611188565b91506020830135801515811461136e57600080fd5b809150509250929050565b60008060008060006080868803121561139157600080fd5b61139a86611188565b94506113a860208701611188565b935060408601359250606086013567ffffffffffffffff8111156113cb57600080fd5b6113d788828901611220565b969995985093965092949392505050565b600080604083850312156113fb57600080fd5b61140483611188565b915061141260208401611188565b90509250929050565b600181811c9082168061142f57607f821691505b6020821081141561145057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b6020808252601190820152701253959053125117d49150d25412515395607a1b604082015260600190565b6000602082840312156114bb57600080fd5b8151610ba2816110d9565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6020808252600a90820152691393d517d3525395115160b21b604082015260600190565b6000806040838503121561152757600080fd5b82516115328161130b565b602084015190925061136e8161130b565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600085516115a9818460208a0161110c565b8551908301906115bd818360208a0161110c565b602f60f81b910181815285519091906115dd816001850160208a0161110c565b600192019182015283516115f881600284016020880161110c565b016002019695505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561164c5761164c61161c565b500290565b600082198211156116645761166461161c565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161168e5761168e61161c565b50600019019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ff1d3caeccbc6ac232289188f06c56d5ad692c1bb52bf2a4f2e4913b60a01a1f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8AA1B31 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xB7D19FC4 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x83B43589 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9ABE9DFB EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16DC165B GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x16DC165B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EF JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x15A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x1AD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x3B4 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3CF JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0x141B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0x141B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x430 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x57524F4E475F46524F4D PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x147E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 PUSH2 0x5E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x604 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP5 DUP8 AND DUP1 DUP5 MSTORE DUP6 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 ADD SWAP1 SWAP3 SSTORE DUP6 DUP4 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE SWAP3 MLOAD DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1697 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BD DUP3 DUP3 PUSH2 0xBA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6CC DUP4 DUP4 DUP4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 PUSH2 0x775 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP5 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x745 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xC7D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8EB PUSH1 0x4 DUP6 DUP6 PUSH2 0x1040 JUMP JUMPDEST POP PUSH2 0x8F8 PUSH1 0x5 DUP4 DUP4 PUSH2 0x1040 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEEF1C5F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xEEF1C5F5 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x977 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99B SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA1C DUP6 DUP6 DUP6 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO DUP1 PUSH2 0xAB3 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA64 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2A PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x7777772E6D696461737761702E6F72672F PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 SWAP1 PUSH2 0xB61 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xB76 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0xB7F DUP7 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB92 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1053149150511657D35253951151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 ADD SWAP1 SWAP3 SSTORE DUP5 DUP4 MSTORE DUP3 SWAP1 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1697 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP6 DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD DUP5 SWAP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1697 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3CF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD3D DUP4 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD87 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xDC0 JUMPI PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xDDB DUP4 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0xDE6 SWAP1 PUSH1 0x2 PUSH2 0x1651 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDFE JUMPI PUSH2 0xDFE PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE28 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE43 JUMPI PUSH2 0xE43 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xE96 DUP5 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0xEA1 SWAP1 PUSH1 0x1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF19 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0x1669 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEEB JUMPI PUSH2 0xEEB PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xF12 DUP2 PUSH2 0x167F JUMP JUMPDEST SWAP1 POP PUSH2 0xEA4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xFA7 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xFD3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFF1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1009 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x101D JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x102F JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x104C SWAP1 PUSH2 0x141B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x106E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10B4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1087 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x10B4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10B4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10B4 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP PUSH2 0x10C0 SWAP3 SWAP2 POP PUSH2 0x10C4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10C0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA2 DUP2 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1127 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x110F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x115B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BB DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP5 PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP PUSH2 0x11F5 PUSH1 0x20 DUP6 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA2 DUP3 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x124A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128D DUP9 PUSH2 0x1188 JUMP JUMPDEST SWAP7 POP PUSH2 0x129B PUSH1 0x20 DUP10 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP6 POP PUSH2 0x12A9 PUSH1 0x40 DUP10 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D2 DUP12 DUP4 DUP13 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F8 DUP11 DUP3 DUP12 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA2 DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1359 DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139A DUP7 PUSH2 0x1188 JUMP JUMPDEST SWAP5 POP PUSH2 0x13A8 PUSH1 0x20 DUP8 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1404 DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH2 0x1412 PUSH1 0x20 DUP5 ADD PUSH2 0x1188 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x142F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1450 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x1253959053125117D49150D25412515395 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA2 DUP2 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x155394D0519157D49150D25412515395 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x1393D517D35253951151 PUSH1 0xB2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1532 DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x136E DUP2 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x15A9 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x110C JUMP JUMPDEST DUP6 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15BD DUP2 DUP4 PUSH1 0x20 DUP11 ADD PUSH2 0x110C JUMP JUMPDEST PUSH1 0x2F PUSH1 0xF8 SHL SWAP2 ADD DUP2 DUP2 MSTORE DUP6 MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x15DD DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1 SWAP3 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x15F8 DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x110C JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x164C JUMPI PUSH2 0x164C PUSH2 0x161C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1664 PUSH2 0x161C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x168E JUMPI PUSH2 0x168E PUSH2 0x161C JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT SAR EXTCODECOPY 0xAE 0xCC 0xBC PUSH11 0xC232289188F06C56D5AD69 0x2C SHL 0xB5 0x2B CALLCODE LOG4 CALLCODE 0xE4 SWAP2 EXTCODESIZE PUSH1 0xA0 BYTE 0x1F PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "328:2156:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4869:349:7;;;;;;:::i;:::-;;:::i;:::-;;;565:14:9;;558:22;540:41;;528:2;513:18;4869:349:7;;;;;;;;362:18:3;;;:::i;:::-;;;;;;;:::i;1882:46:7:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1882:46:7;;;;;;-1:-1:-1;;;;;1592:32:9;;;1574:51;;1562:2;1547:18;1882:46:7;1428:203:9;2376:316:7;;;;;;:::i;:::-;;:::i;:::-;;720:23:3;;;;;-1:-1:-1;;;720:23:3;;;;;;605:21;;;;;-1:-1:-1;;;;;605:21:3;;;2907:743:7;;;;;;:::i;:::-;;:::i;1917:132:3:-;;;;;;:::i;:::-;;:::i;3656:494:7:-;;;;;;:::i;:::-;;:::i;2055:116:3:-;;;;;;:::i;:::-;;:::i;1365:149:7:-;;;;;;:::i;:::-;;:::i;1520:168::-;;;;;;:::i;:::-;;:::i;:::-;;;2743:25:9;;;2731:2;2716:18;1520:168:7;2597:177:9;851:416:3;;;;;;:::i;:::-;;:::i;386:20::-;;;:::i;2292:190::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4700:15:9;;;4682:34;;4752:15;;;;4747:2;4732:18;;4725:43;4617:18;2292:190:3;4470:304:9;2698:203:7;;;;;;:::i;:::-;;:::i;557:19:3:-;;;;;-1:-1:-1;;;;;557:19:3;;;655:21;;;;;-1:-1:-1;;;;;655:21:3;;;4156:525:7;;;;;;:::i;:::-;;:::i;499:32:3:-;;;;;1273:638;;;;;;:::i;:::-;;:::i;1935:68:7:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4869:349;4959:4;-1:-1:-1;;;;;;;;;4994:25:7;;;;:100;;-1:-1:-1;;;;;;;;;;5069:25:7;;;4994:100;:175;;;-1:-1:-1;;;;;;;;;;5144:25:7;;;4994:175;4975:194;4869:349;-1:-1:-1;;4869:349:7:o;362:18:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2376:316:7:-;2447:13;2463:12;;;;;;;;;;;-1:-1:-1;;;;;2463:12:7;2507:10;:19;;;:58;;-1:-1:-1;;;;;;2530:23:7;;;;;;:16;:23;;;;;;;;2554:10;2530:35;;;;;;;;;;2507:58;2486:119;;;;-1:-1:-1;;;2486:119:7;;;;;;;:::i;:::-;;;;;;;;;2616:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2616:25:7;-1:-1:-1;;;;;2616:25:7;;;;;;;;;2657:28;;2616:15;;2657:28;;;;;;;2437:255;2376:316;;:::o;2907:743::-;3008:8;:12;;;;;;;;;;;-1:-1:-1;;;;;3000:20:7;;;3008:12;;3000:20;2992:43;;;;-1:-1:-1;;;2992:43:7;;6958:2:9;2992:43:7;;;6940:21:9;6997:2;6977:18;;;6970:30;-1:-1:-1;;;7016:18:9;;;7009:40;7066:18;;2992:43:7;6756:334:9;2992:43:7;-1:-1:-1;;;;;3054:16:7;;3046:46;;;;-1:-1:-1;;;3046:46:7;;;;;;;:::i;:::-;3124:10;-1:-1:-1;;;;;3124:18:7;;;;:72;;-1:-1:-1;;;;;;3162:22:7;;;;;;:16;:22;;;;;;;;3185:10;3162:34;;;;;;;;;;3124:72;:121;;;-1:-1:-1;3230:15:7;;;;:11;:15;;;;;;-1:-1:-1;;;;;3230:15:7;3216:10;:29;3124:121;3103:182;;;;-1:-1:-1;;;3103:182:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;3485:16:7;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3485:18:7;;;3518:14;;;;;;;;;:16;;;;;;;;3555:12;;;;;;;;;:17;;-1:-1:-1;;;;;;3555:17:7;;;;;;;;3590:11;:15;;;;;;3583:22;;;;;;;3621;;3564:2;;3518:14;3485:16;-1:-1:-1;;;;;;;;;;;3621:22:7;;2907:743;;;:::o;1917:132:3:-;2009:4;;-1:-1:-1;;;;;2009:4:3;1995:10;:18;1987:27;;;;;;2024:18;2030:2;2034:7;2024:5;:18::i;:::-;1917:132;;:::o;3656:494:7:-;3775:26;3788:4;3794:2;3798;3775:12;:26::i;:::-;-1:-1:-1;;;;;3833:14:7;;;:19;;:268;;-1:-1:-1;3872:164:7;;-1:-1:-1;;;3872:164:7;;;3934:10;3872:164;;;7746:34:9;-1:-1:-1;;;;;7816:15:9;;;7796:18;;;7789:43;7848:18;;;7841:34;;;7911:3;7891:18;;;7884:31;-1:-1:-1;7931:19:9;;;7924:30;4056:45:7;;3872:40;;;;4056:45;;7971:19:9;;3872:164:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3872:229:7;;3833:268;3812:331;;;;-1:-1:-1;;;3812:331:7;;;;;;;:::i;:::-;3656:494;;;:::o;2055:116:3:-;2135:4;;-1:-1:-1;;;;;2135:4:3;2121:10;:18;2113:27;;;;;;2150:14;2156:7;2150:5;:14::i;:::-;2055:116;:::o;1365:149:7:-;1423:13;1465:12;;;;;;;;;;;-1:-1:-1;;;;;1465:12:7;1456:36;1448:59;;;;-1:-1:-1;;;1448:59:7;;;;;;;:::i;:::-;1365:149;;;:::o;1520:168::-;1583:7;-1:-1:-1;;;;;1610:19:7;;1602:44;;;;-1:-1:-1;;;1602:44:7;;9141:2:9;1602:44:7;;;9123:21:9;9180:2;9160:18;;;9153:30;-1:-1:-1;;;9199:18:9;;;9192:42;9251:18;;1602:44:7;8939:336:9;1602:44:7;-1:-1:-1;;;;;;1664:17:7;;;;;:10;:17;;;;;;;1520:168::o;851:416:3:-;1049:10;-1:-1:-1;;;;;1063:7:3;1049:21;;1041:30;;;;;;1089:11;;-1:-1:-1;;;1089:11:3;;;;:20;1081:29;;;;;;1120:4;:12;;-1:-1:-1;;;;;1120:12:3;;;-1:-1:-1;;;;;;1120:12:3;;;;;;;1142:6;:16;;;;;;;;;;;1168:6;:16;;;;;;;;;;;;;;;1194:12;:4;1201:5;;1194:12;:::i;:::-;-1:-1:-1;1216:16:3;:6;1225:7;;1216:16;:::i;:::-;-1:-1:-1;;1242:11:3;:18;;-1:-1:-1;;;;1242:18:3;-1:-1:-1;;;1242:18:3;;;-1:-1:-1;;;;;;851:416:3:o;386:20::-;;;;;;;:::i;2292:190::-;2448:4;;2434:41;;-1:-1:-1;;;2434:41:3;;-1:-1:-1;;;;;9444:32:9;;2434:41:3;;;9426:51:9;2361:17:3;;;;-1:-1:-1;;;;;2448:4:3;;;;2434:32;;9399:18:9;;2434:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2409:66;;;;-1:-1:-1;2292:190:3;-1:-1:-1;;2292:190:3:o;2698:203:7:-;2800:10;2783:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2783:38:7;;;;;;;;;;;;:49;;-1:-1:-1;;2783:49:7;;;;;;;;;;2848:46;;540:41:9;;;2783:38:7;;2800:10;2848:46;;513:18:9;2848:46:7;;;;;;;2698:203;;:::o;4156:525::-;4304:26;4317:4;4323:2;4327;4304:12;:26::i;:::-;-1:-1:-1;;;;;4362:14:7;;;:19;;:270;;-1:-1:-1;4401:166:7;;-1:-1:-1;;;4401:166:7;;;4587:45;-1:-1:-1;;;;;4401:40:7;;;4587:45;;4401:166;;4463:10;;4495:4;;4521:2;;4545:4;;;;4401:166;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4401:231:7;;4362:270;4341:333;;;;-1:-1:-1;;;4341:333:7;;;;;;;:::i;:::-;4156:525;;;;;:::o;1273:638:3:-;1452:1;1423:17;;;;;;;;;;;1386:13;;-1:-1:-1;;;;;1423:17:3;1415:40;;;;;;1465:21;1489:10;2253:26;;;;;;;;;;;;-1:-1:-1;;;2253:26:3;;;;;2177:109;1489:10;1465:34;;1552:1;1534:7;1528:21;:25;:376;;;;;;;;;;;;;;;;;1675:6;;1642:7;;1675:20;;-1:-1:-1;;;;;1675:6:3;:18;:20::i;:::-;1750:6;;:20;;-1:-1:-1;;;;;1750:6:3;:18;:20::i;:::-;1825:18;:7;:16;:18::i;:::-;1600:265;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1528:376;1509:395;1273:638;-1:-1:-1;;;1273:638:3:o;5412:371:7:-;-1:-1:-1;;;;;5486:16:7;;5478:46;;;;-1:-1:-1;;;5478:46:7;;;;;;;:::i;:::-;5567:1;5543:12;;;;;;;;;;;-1:-1:-1;;;;;5543:12:7;:26;5535:53;;;;-1:-1:-1;;;5535:53:7;;11906:2:9;5535:53:7;;;11888:21:9;11945:2;11925:18;;;11918:30;-1:-1:-1;;;11964:18:9;;;11957:44;12018:18;;5535:53:7;11704:338:9;5535:53:7;-1:-1:-1;;;;;5678:14:7;;;;;;:10;:14;;;;;;;;:16;;;;;;;;5715:12;;;;;;;;;:17;;-1:-1:-1;;;;;;5715:17:7;;;;;5748:28;5724:2;;5678:14;;-1:-1:-1;;;;;;;;;;;5748:28:7;5678:14;;5748:28;5412:371;;:::o;5789:::-;5843:13;5859:12;;;;;;;;;;;-1:-1:-1;;;;;5859:12:7;5890:19;5882:42;;;;-1:-1:-1;;;5882:42:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;6014:17:7;;;;;;:10;:17;;;;;;;;:19;;-1:-1:-1;;6014:19:7;;;6061:12;;;;;;;;;6054:19;;-1:-1:-1;;;;;;6054:19:7;;;;;;6091:11;:15;;;;;;6084:22;;;;;;;;6122:31;6070:2;;6014:17;-1:-1:-1;;;;;;;;;;;6122:31:7;6014:17;;6122:31;5833:327;5789:371;:::o;2144:149:8:-;2202:13;2234:52;-1:-1:-1;;;;;2246:22:8;;285:2;2234:11;:52::i;389:731::-;445:13;494:14;531:12;537:5;531;:12::i;:::-;546:1;531:16;522:25;;561:20;615:6;604:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;604:18:8;-1:-1:-1;595:27:8;-1:-1:-1;742:28:8;;;758:2;742:28;797:280;-1:-1:-1;;828:5:8;-1:-1:-1;;;962:2:8;951:14;;946:30;828:5;933:44;1021:2;1012:11;;;-1:-1:-1;1045:10:8;1041:21;;1057:5;;1041:21;797:280;;;-1:-1:-1;1097:6:8;389:731;-1:-1:-1;;;389:731:8:o;1517:475::-;1614:13;;1687:10;1691:6;1687:1;:10;:::i;:::-;:14;;1700:1;1687:14;:::i;:::-;1677:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1677:25:8;;1668:34;;-1:-1:-1;;;1712:6:8;1719:1;1712:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1712:15:8;;;;;;;;;-1:-1:-1;;;1737:6:8;1744:1;1737:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1737:15:8;;;;;;;;-1:-1:-1;1767:9:8;1779:10;1783:6;1779:1;:10;:::i;:::-;:14;;1792:1;1779:14;:::i;:::-;1767:26;;1762:128;1799:1;1795;:5;1762:128;;;-1:-1:-1;;;1842:5:8;1850:3;1842:11;1833:21;;;;;;;:::i;:::-;;;;1821:6;1828:1;1821:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1821:33:8;;;;;;;;-1:-1:-1;1878:1:8;1868:11;;;;;1802:3;;;:::i;:::-;;;1762:128;;;-1:-1:-1;1907:10:8;;1899:55;;;;-1:-1:-1;;;1899:55:8;;13224:2:9;1899:55:8;;;13206:21:9;;;13243:18;;;13236:30;13302:34;13282:18;;;13275:62;13354:18;;1899:55:8;13022:356:9;2418:912:8;2471:7;2490:14;-1:-1:-1;;;2542:5:8;:17;2538:103;;-1:-1:-1;;;2579:17:8;;;-1:-1:-1;2624:2:8;2614:12;2538:103;2667:8;2658:5;:17;2654:103;;2704:8;2695:17;;;-1:-1:-1;2740:2:8;2730:12;2654:103;2783:8;2774:5;:17;2770:103;;2820:8;2811:17;;;-1:-1:-1;2856:2:8;2846:12;2770:103;2899:7;2890:5;:16;2886:100;;2935:7;2926:16;;;-1:-1:-1;2970:1:8;2960:11;2886:100;3012:7;3003:5;:16;2999:100;;3048:7;3039:16;;;-1:-1:-1;3083:1:8;3073:11;2999:100;3125:7;3116:5;:16;3112:100;;3161:7;3152:16;;;-1:-1:-1;3196:1:8;3186:11;3112:100;3238:7;3229:5;:16;3225:66;;3275:1;3265:11;3317:6;2418:912;-1:-1:-1;;2418:912:8:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:9;-1:-1:-1;;;;;;88:32:9;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;840:1;831:6;826:3;822:16;815:27;796:48;;592:258;;;:::o;855:383::-;1004:2;993:9;986:21;967:4;1036:6;1030:13;1079:6;1074:2;1063:9;1059:18;1052:34;1095:66;1154:6;1149:2;1138:9;1134:18;1129:2;1121:6;1117:15;1095:66;:::i;:::-;1222:2;1201:15;-1:-1:-1;;1197:29:9;1182:45;;;;1229:2;1178:54;;855:383;-1:-1:-1;;855:383:9:o;1243:180::-;1302:6;1355:2;1343:9;1334:7;1330:23;1326:32;1323:52;;;1371:1;1368;1361:12;1323:52;-1:-1:-1;1394:23:9;;1243:180;-1:-1:-1;1243:180:9:o;1636:173::-;1704:20;;-1:-1:-1;;;;;1753:31:9;;1743:42;;1733:70;;1799:1;1796;1789:12;1814:254;1882:6;1890;1943:2;1931:9;1922:7;1918:23;1914:32;1911:52;;;1959:1;1956;1949:12;1911:52;1982:29;2001:9;1982:29;:::i;:::-;1972:39;2058:2;2043:18;;;;2030:32;;-1:-1:-1;;;1814:254:9:o;2073:328::-;2150:6;2158;2166;2219:2;2207:9;2198:7;2194:23;2190:32;2187:52;;;2235:1;2232;2225:12;2187:52;2258:29;2277:9;2258:29;:::i;:::-;2248:39;;2306:38;2340:2;2329:9;2325:18;2306:38;:::i;:::-;2296:48;;2391:2;2380:9;2376:18;2363:32;2353:42;;2073:328;;;;;:::o;2406:186::-;2465:6;2518:2;2506:9;2497:7;2493:23;2489:32;2486:52;;;2534:1;2531;2524:12;2486:52;2557:29;2576:9;2557:29;:::i;2779:348::-;2831:8;2841:6;2895:3;2888:4;2880:6;2876:17;2872:27;2862:55;;2913:1;2910;2903:12;2862:55;-1:-1:-1;2936:20:9;;2979:18;2968:30;;2965:50;;;3011:1;3008;3001:12;2965:50;3048:4;3040:6;3036:17;3024:29;;3100:3;3093:4;3084:6;3076;3072:19;3068:30;3065:39;3062:59;;;3117:1;3114;3107:12;3062:59;2779:348;;;;;:::o;3132:945::-;3251:6;3259;3267;3275;3283;3291;3299;3352:3;3340:9;3331:7;3327:23;3323:33;3320:53;;;3369:1;3366;3359:12;3320:53;3392:29;3411:9;3392:29;:::i;:::-;3382:39;;3440:38;3474:2;3463:9;3459:18;3440:38;:::i;:::-;3430:48;;3497:38;3531:2;3520:9;3516:18;3497:38;:::i;:::-;3487:48;;3586:2;3575:9;3571:18;3558:32;3609:18;3650:2;3642:6;3639:14;3636:34;;;3666:1;3663;3656:12;3636:34;3705:59;3756:7;3747:6;3736:9;3732:22;3705:59;:::i;:::-;3783:8;;-1:-1:-1;3679:85:9;-1:-1:-1;3871:3:9;3856:19;;3843:33;;-1:-1:-1;3888:16:9;;;3885:36;;;3917:1;3914;3907:12;3885:36;;3956:61;4009:7;3998:8;3987:9;3983:24;3956:61;:::i;:::-;3132:945;;;;-1:-1:-1;3132:945:9;;-1:-1:-1;3132:945:9;;;;3930:87;;-1:-1:-1;;;3132:945:9:o;4082:131::-;-1:-1:-1;;;;;4157:31:9;;4147:42;;4137:70;;4203:1;4200;4193:12;4218:247;4277:6;4330:2;4318:9;4309:7;4305:23;4301:32;4298:52;;;4346:1;4343;4336:12;4298:52;4385:9;4372:23;4404:31;4429:5;4404:31;:::i;4779:347::-;4844:6;4852;4905:2;4893:9;4884:7;4880:23;4876:32;4873:52;;;4921:1;4918;4911:12;4873:52;4944:29;4963:9;4944:29;:::i;:::-;4934:39;;5023:2;5012:9;5008:18;4995:32;5070:5;5063:13;5056:21;5049:5;5046:32;5036:60;;5092:1;5089;5082:12;5036:60;5115:5;5105:15;;;4779:347;;;;;:::o;5131:627::-;5228:6;5236;5244;5252;5260;5313:3;5301:9;5292:7;5288:23;5284:33;5281:53;;;5330:1;5327;5320:12;5281:53;5353:29;5372:9;5353:29;:::i;:::-;5343:39;;5401:38;5435:2;5424:9;5420:18;5401:38;:::i;:::-;5391:48;;5486:2;5475:9;5471:18;5458:32;5448:42;;5541:2;5530:9;5526:18;5513:32;5568:18;5560:6;5557:30;5554:50;;;5600:1;5597;5590:12;5554:50;5639:59;5690:7;5681:6;5670:9;5666:22;5639:59;:::i;:::-;5131:627;;;;-1:-1:-1;5131:627:9;;-1:-1:-1;5717:8:9;;5613:85;5131:627;-1:-1:-1;;;5131:627:9:o;5763:260::-;5831:6;5839;5892:2;5880:9;5871:7;5867:23;5863:32;5860:52;;;5908:1;5905;5898:12;5860:52;5931:29;5950:9;5931:29;:::i;:::-;5921:39;;5979:38;6013:2;6002:9;5998:18;5979:38;:::i;:::-;5969:48;;5763:260;;;;;:::o;6028:380::-;6107:1;6103:12;;;;6150;;;6171:61;;6225:4;6217:6;6213:17;6203:27;;6171:61;6278:2;6270:6;6267:14;6247:18;6244:38;6241:161;;;6324:10;6319:3;6315:20;6312:1;6305:31;6359:4;6356:1;6349:15;6387:4;6384:1;6377:15;6241:161;;6028:380;;;:::o;6413:338::-;6615:2;6597:21;;;6654:2;6634:18;;;6627:30;-1:-1:-1;;;6688:2:9;6673:18;;6666:44;6742:2;6727:18;;6413:338::o;7095:341::-;7297:2;7279:21;;;7336:2;7316:18;;;7309:30;-1:-1:-1;;;7370:2:9;7355:18;;7348:47;7427:2;7412:18;;7095:341::o;8001:249::-;8070:6;8123:2;8111:9;8102:7;8098:23;8094:32;8091:52;;;8139:1;8136;8129:12;8091:52;8171:9;8165:16;8190:30;8214:5;8190:30;:::i;8255:340::-;8457:2;8439:21;;;8496:2;8476:18;;;8469:30;-1:-1:-1;;;8530:2:9;8515:18;;8508:46;8586:2;8571:18;;8255:340::o;8600:334::-;8802:2;8784:21;;;8841:2;8821:18;;;8814:30;-1:-1:-1;;;8875:2:9;8860:18;;8853:40;8925:2;8910:18;;8600:334::o;9488:385::-;9567:6;9575;9628:2;9616:9;9607:7;9603:23;9599:32;9596:52;;;9644:1;9641;9634:12;9596:52;9676:9;9670:16;9695:31;9720:5;9695:31;:::i;:::-;9795:2;9780:18;;9774:25;9745:5;;-1:-1:-1;9808:33:9;9774:25;9808:33;:::i;9878:662::-;-1:-1:-1;;;;;10157:15:9;;;10139:34;;10209:15;;10204:2;10189:18;;10182:43;10256:2;10241:18;;10234:34;;;10304:3;10299:2;10284:18;;10277:31;;;10324:19;;10317:35;;;10082:4;10345:6;10395;10119:3;10374:19;;10361:49;10460:1;10454:3;10445:6;10434:9;10430:22;10426:32;10419:43;10530:3;10523:2;10519:7;10514:2;10506:6;10502:15;10498:29;10487:9;10483:45;10479:55;10471:63;;9878:662;;;;;;;;:::o;10545:1154::-;11022:3;11060:6;11054:13;11076:53;11122:6;11117:3;11110:4;11102:6;11098:17;11076:53;:::i;:::-;11192:13;;11151:16;;;;11214:57;11192:13;11151:16;11248:4;11236:17;;11214:57;:::i;:::-;-1:-1:-1;;;11293:20:9;;11344:17;;;11386:13;;11293:20;;11332:3;11408:65;11386:13;11460:1;11449:13;;11442:4;11430:17;;11408:65;:::i;:::-;11536:1;11492:20;;11528:10;;;11521:22;11568:13;;11590:62;11568:13;11639:1;11631:10;;11624:4;11612:17;;11590:62;:::i;:::-;11672:17;11691:1;11668:25;;10545:1154;-1:-1:-1;;;;;;10545:1154:9:o;12047:127::-;12108:10;12103:3;12099:20;12096:1;12089:31;12139:4;12136:1;12129:15;12163:4;12160:1;12153:15;12311:127;12372:10;12367:3;12363:20;12360:1;12353:31;12403:4;12400:1;12393:15;12427:4;12424:1;12417:15;12443:168;12483:7;12549:1;12545;12541:6;12537:14;12534:1;12531:21;12526:1;12519:9;12512:17;12508:45;12505:71;;;12556:18;;:::i;:::-;-1:-1:-1;12596:9:9;;12443:168::o;12616:128::-;12656:3;12687:1;12683:6;12680:1;12677:13;12674:39;;;12693:18;;:::i;:::-;-1:-1:-1;12729:9:9;;12616:128::o;12749:127::-;12810:10;12805:3;12801:20;12798:1;12791:31;12841:4;12838:1;12831:15;12865:4;12862:1;12855:15;12881:136;12920:3;12948:5;12938:39;;12957:18;;:::i;:::-;-1:-1:-1;;;12993:18:9;;12881:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1173600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31157",
								"balanceOf(address)": "2612",
								"burn(uint256)": "79538",
								"factory()": "infinite",
								"getApproved(uint256)": "2545",
								"getReserves(uint128)": "infinite",
								"initialize(address,address,address,string,string)": "infinite",
								"initialized()": "2428",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256)": "55361",
								"name()": "infinite",
								"ownerOf(uint256)": "2695",
								"pair()": "2359",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26696",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"tokenX()": "2360",
								"tokenY()": "2381",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 750,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 750,
									"end": 844,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 790,
									"end": 808,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 790,
									"end": 808,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 790,
									"end": 808,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 818,
									"end": 829,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 818,
									"end": 837,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 818,
									"end": 837,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 818,
									"end": 837,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 818,
									"end": 837,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 818,
									"end": 837,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "228"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 2484,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff1d3caeccbc6ac232289188f06c56d5ad692c1bb52bf2a4f2e4913b60a01a1f64736f6c634300080a0033",
									".code": [
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "A8AA1B31"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "A8AA1B31"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "B7D19FC4"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "C45A0155"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "83B43589"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "9ABE9DFB"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "16DC165B"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "16DC165B"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "42966C68"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "158EF93E"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 328,
											"end": 2484,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1428,
											"end": 1631,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 720,
											"end": 743,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 720,
											"end": 743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 720,
											"end": 743,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 720,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 743,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 720,
											"end": 743,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 720,
											"end": 743,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 720,
											"end": 743,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 743,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 605,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 605,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 605,
											"end": 626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 605,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 605,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 626,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 605,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 605,
											"end": 626,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2597,
											"end": 2774,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4749,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4470,
											"end": 4774,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 576,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 557,
											"end": 576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 576,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 557,
											"end": 576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 557,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 557,
											"end": 576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 557,
											"end": 576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 557,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 557,
											"end": 576,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 655,
											"end": 676,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 655,
											"end": 676,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 531,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 499,
											"end": 531,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 499,
											"end": 531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 531,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2003,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5019,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5019,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5019,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5019,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4994,
											"end": 5094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5069,
											"end": 5094,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5094,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5094,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4994,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5144,
											"end": 5169,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5169,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5169,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 5218,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 380,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2517,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2507,
											"end": 2565,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2546,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2564,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2565,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2507,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2486,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2627,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2641,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2685,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2692,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 6960,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 6999,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 7000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "57524F4E475F46524F4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7084,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7066,
											"end": 7084,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6756,
											"end": 7090,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2992,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3070,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3134,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3124,
											"end": 3196,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3178,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3196,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3124,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3124,
											"end": 3245,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3241,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3245,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3245,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3124,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3103,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3601,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3532,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3650,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 2049,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3788,
											"end": 3792,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3796,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3833,
											"end": 4101,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3944,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7816,
											"end": 7831,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7816,
											"end": 7831,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7816,
											"end": 7831,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7789,
											"end": 7832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7875,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7875,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7911,
											"end": 7914,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7954,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7971,
											"end": 7990,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 7971,
											"end": 7990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3872,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 4101,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 4101,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4101,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3833,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3812,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 4150,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2139,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2135,
											"end": 2139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2135,
											"end": 2139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2139,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2156,
											"end": 2163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2164,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2164,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2171,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1514,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9153,
											"end": 9183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A45524F5F41444452455353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9234,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 8939,
											"end": 9275,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1674,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1688,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1059,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1063,
											"end": 1070,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1049,
											"end": 1070,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1070,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1081,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1184,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1216,
											"end": 1222,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1216,
											"end": 1232,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1216,
											"end": 1232,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1216,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1253,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 851,
											"end": 1267,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 406,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 406,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 386,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 386,
											"end": 406,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EEF1C5F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9444,
											"end": 9476,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9476,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9426,
											"end": 9477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2378,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "PUSH",
											"source": 3,
											"value": "EEF1C5F5"
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2434,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2475,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2475,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2292,
											"end": 2482,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2810,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2811,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2832,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2894,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2901,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4317,
											"end": 4321,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4304,
											"end": 4330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4304,
											"end": 4330,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4304,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4362,
											"end": 4376,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4376,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4362,
											"end": 4632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4441,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4441,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4473,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4549,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4549,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4401,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4632,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4632,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4362,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4341,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4681,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1386,
											"end": 1399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1415,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7777772E6D696461737761702E6F72672F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2286,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1541,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1553,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1675,
											"end": 1695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1675,
											"end": 1695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1675,
											"end": 1695,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1675,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1750,
											"end": 1770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1750,
											"end": 1770,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1750,
											"end": 1770,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1750,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1865,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1528,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1904,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1911,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5412,
											"end": 5783,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5412,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5486,
											"end": 5502,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5478,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11906,
											"end": 11908,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11888,
											"end": 11909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 11947,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 11948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1053149150511657D35253951151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11957,
											"end": 12001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 11704,
											"end": 12042,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5688,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5776,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5748,
											"end": 5776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5776,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5783,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5789,
											"end": 6160,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5789,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5843,
											"end": 5856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 5909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6033,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6033,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6014,
											"end": 6033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6033,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6073,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6102,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 6160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 6160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 6160,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2144,
											"end": 2293,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2144,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 1120,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 389,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 445,
											"end": 458,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 494,
											"end": 508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 537,
											"end": 542,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 531,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 531,
											"end": 543,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 531,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 531,
											"end": 547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 522,
											"end": 547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 522,
											"end": 547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 581,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 615,
											"end": 621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 622,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 742,
											"end": 770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 742,
											"end": 770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 742,
											"end": 770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1077,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 797,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 828,
											"end": 833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 962,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 951,
											"end": 965,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 951,
											"end": 965,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 946,
											"end": 976,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 933,
											"end": 977,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1012,
											"end": 1023,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1023,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1023,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1057,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1057,
											"end": 1062,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 797,
											"end": 1077,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1077,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 797,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 1120,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 389,
											"end": 1120,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1517,
											"end": 1992,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1517,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1627,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1614,
											"end": 1627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1701,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1752,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1853,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1854,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1868,
											"end": 1879,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1879,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1879,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1879,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 1762,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1917,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1917,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13226,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13206,
											"end": 13227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13206,
											"end": 13227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13336,
											"name": "PUSH",
											"source": 9,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 13282,
											"end": 13300,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13282,
											"end": 13300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13282,
											"end": 13300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13372,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13354,
											"end": 13372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 13022,
											"end": 13378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 3330,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2418,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2559,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2538,
											"end": 2641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2596,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2579,
											"end": 2596,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2579,
											"end": 2596,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2624,
											"end": 2626,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2641,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2538,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 2658,
											"end": 2663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2675,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2654,
											"end": 2757,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2712,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 2695,
											"end": 2712,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2712,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2712,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2757,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2654,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2770,
											"end": 2873,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2828,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2811,
											"end": 2828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2828,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2846,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2873,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2770,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 2906,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2886,
											"end": 2986,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2960,
											"end": 2971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2986,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2886,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3019,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 3003,
											"end": 3008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2999,
											"end": 3099,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 3039,
											"end": 3055,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3055,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3055,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3073,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3099,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2999,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3112,
											"end": 3212,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3168,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3212,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3112,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3245,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3229,
											"end": 3234,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3245,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3225,
											"end": 3291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3265,
											"end": 3276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 3330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 3330,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "173"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "288"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "288"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "291"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "291"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "293"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "291"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "293"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 837,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 826,
											"end": 829,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 796,
											"end": 844,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 796,
											"end": 844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 855,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 967,
											"end": 971,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1086,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1154,
											"end": 1160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1095,
											"end": 1161,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1095,
											"end": 1161,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1095,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1224,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1226,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1227,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1227,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1232,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 855,
											"end": 1238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1238,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1243,
											"end": 1423,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1358,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1394,
											"end": 1417,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1394,
											"end": 1417,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1423,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1809,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1636,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1784,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1753,
											"end": 1784,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1785,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1733,
											"end": 1803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1801,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2068,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1814,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1940,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1946,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1911,
											"end": 1963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1963,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1911,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2001,
											"end": 2010,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1982,
											"end": 2011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1982,
											"end": 2011,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1982,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 2011,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2062,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2062,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 2068,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2207,
											"end": 2216,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2198,
											"end": 2205,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2233,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2237,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2306,
											"end": 2344,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2344,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2306,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2391,
											"end": 2393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2395,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2401,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2406,
											"end": 2592,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2406,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2576,
											"end": 2585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2557,
											"end": 2586,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2898,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2862,
											"end": 2917,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2917,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2862,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2936,
											"end": 2956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2956,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2997,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3013,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3052,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3097,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3104,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3121,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3062,
											"end": 3121,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3121,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3062,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3127,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3355,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3340,
											"end": 3349,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3331,
											"end": 3338,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3373,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3320,
											"end": 3373,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3373,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3320,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3392,
											"end": 3421,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3392,
											"end": 3421,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3392,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3421,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3474,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3440,
											"end": 3478,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3440,
											"end": 3478,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3440,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3478,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3531,
											"end": 3533,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3529,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3497,
											"end": 3535,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3535,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3497,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3535,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3588,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3590,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3627,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3652,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3653,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3664,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3668,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3756,
											"end": 3763,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3705,
											"end": 3764,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3764,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3705,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3791,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3679,
											"end": 3764,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3871,
											"end": 3874,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3856,
											"end": 3875,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3856,
											"end": 3875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 3876,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 3876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3921,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3885,
											"end": 3921,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3921,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3885,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3956,
											"end": 4017,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3956,
											"end": 4017,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3956,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4017,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4017,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 4077,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4157,
											"end": 4188,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4189,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4189,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4137,
											"end": 4207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4201,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4465,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4218,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4316,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4328,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4350,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4298,
											"end": 4350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4344,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4350,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4298,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4395,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4884,
											"end": 4891,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4880,
											"end": 4903,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4908,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4923,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4963,
											"end": 4972,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4944,
											"end": 4973,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4944,
											"end": 4973,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4944,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4973,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5027,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5063,
											"end": 5076,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5054,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5046,
											"end": 5078,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5036,
											"end": 5096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5094,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5096,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5036,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5115,
											"end": 5120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 5126,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5284,
											"end": 5317,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5382,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5435,
											"end": 5437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5420,
											"end": 5438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5401,
											"end": 5439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5401,
											"end": 5439,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5401,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5439,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5484,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5490,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5490,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5545,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5587,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5604,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5554,
											"end": 5604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5590,
											"end": 5602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5604,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5554,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5639,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5681,
											"end": 5687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5639,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5639,
											"end": 5698,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5639,
											"end": 5698,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5639,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5725,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5717,
											"end": 5725,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5613,
											"end": 5698,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5131,
											"end": 5758,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5889,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 5890,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5863,
											"end": 5895,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5860,
											"end": 5912,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5860,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5860,
											"end": 5912,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 5910,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5860,
											"end": 5912,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5860,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5950,
											"end": 5959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6011,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5998,
											"end": 6016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5969,
											"end": 6017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5969,
											"end": 6017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 6023,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6028,
											"end": 6408,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6028,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6108,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 6171,
											"end": 6232,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6203,
											"end": 6230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6232,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 6171,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6270,
											"end": 6276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6281,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6402,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6241,
											"end": 6402,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6334,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 6319,
											"end": 6322,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6349,
											"end": 6364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6387,
											"end": 6391,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6384,
											"end": 6385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6392,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6402,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6241,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6408,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6413,
											"end": 6751,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6413,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6597,
											"end": 6618,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1393D517D055551213D492569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6666,
											"end": 6710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6751,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7095,
											"end": 7436,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7095,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7338,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1253959053125117D49150D25412515395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7370,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7355,
											"end": 7373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7355,
											"end": 7373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7429,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8001,
											"end": 8250,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 8001,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8070,
											"end": 8076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8125,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8111,
											"end": 8120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8102,
											"end": 8109,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8121,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8094,
											"end": 8126,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8143,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8091,
											"end": 8143,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8129,
											"end": 8141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8143,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8091,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8190,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 8214,
											"end": 8219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8190,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8190,
											"end": 8220,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8255,
											"end": 8595,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 8255,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8439,
											"end": 8460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8496,
											"end": 8498,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155394D0519157D49150D25412515395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8586,
											"end": 8588,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8255,
											"end": 8595,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8600,
											"end": 8934,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 8600,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8802,
											"end": 8804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8841,
											"end": 8843,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1393D517D35253951151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8860,
											"end": 8878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8927,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8934,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9488,
											"end": 9873,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9488,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9616,
											"end": 9625,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9614,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9626,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9631,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9648,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9596,
											"end": 9648,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9646,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9648,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9596,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9676,
											"end": 9685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9670,
											"end": 9686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9720,
											"end": 9725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 9695,
											"end": 9726,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9695,
											"end": 9726,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9695,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9795,
											"end": 9797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9808,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9808,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 9808,
											"end": 9841,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10157,
											"end": 10172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10258,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10307,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10299,
											"end": 10301,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10395,
											"end": 10401,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10410,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10457,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10445,
											"end": 10451,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10434,
											"end": 10443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10430,
											"end": 10452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10426,
											"end": 10458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10462,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10533,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10523,
											"end": 10525,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10519,
											"end": 10526,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10514,
											"end": 10516,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10506,
											"end": 10512,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10527,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10487,
											"end": 10496,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10540,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10545,
											"end": 11699,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10545,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11022,
											"end": 11025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11117,
											"end": 11120,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11102,
											"end": 11108,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11167,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11167,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11248,
											"end": 11252,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11214,
											"end": 11271,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11214,
											"end": 11271,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11214,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11293,
											"end": 11313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11344,
											"end": 11361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11344,
											"end": 11361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11344,
											"end": 11361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11399,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11399,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11293,
											"end": 11313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11293,
											"end": 11313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11386,
											"end": 11399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11449,
											"end": 11462,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11449,
											"end": 11462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11442,
											"end": 11446,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11447,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 11430,
											"end": 11447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11408,
											"end": 11473,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11408,
											"end": 11473,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11408,
											"end": 11473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11492,
											"end": 11512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11492,
											"end": 11512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11528,
											"end": 11538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11528,
											"end": 11538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11528,
											"end": 11538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11568,
											"end": 11581,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11568,
											"end": 11581,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11568,
											"end": 11581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11639,
											"end": 11640,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11631,
											"end": 11641,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11631,
											"end": 11641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 11628,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11612,
											"end": 11629,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11590,
											"end": 11652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11590,
											"end": 11652,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11590,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11691,
											"end": 11692,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11668,
											"end": 11693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11668,
											"end": 11693,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 11699,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 11699,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12047,
											"end": 12174,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12047,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 12103,
											"end": 12106,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12099,
											"end": 12119,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12096,
											"end": 12097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12139,
											"end": 12143,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12129,
											"end": 12144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12167,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12168,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12438,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12311,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12382,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 12367,
											"end": 12370,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12363,
											"end": 12383,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12403,
											"end": 12407,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12400,
											"end": 12401,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12393,
											"end": 12408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12427,
											"end": 12431,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12424,
											"end": 12425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12417,
											"end": 12432,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12611,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 12443,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12483,
											"end": 12490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12549,
											"end": 12550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12541,
											"end": 12547,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12552,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12526,
											"end": 12527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12519,
											"end": 12528,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12553,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12556,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12556,
											"end": 12574,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12556,
											"end": 12574,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12556,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12596,
											"end": 12605,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12611,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12616,
											"end": 12744,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 12616,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12656,
											"end": 12659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12687,
											"end": 12688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12680,
											"end": 12681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12690,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12674,
											"end": 12713,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12674,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12674,
											"end": 12713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12729,
											"end": 12738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12729,
											"end": 12738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12616,
											"end": 12744,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12749,
											"end": 12876,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12749,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12810,
											"end": 12820,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 12805,
											"end": 12808,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12801,
											"end": 12821,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12791,
											"end": 12822,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12841,
											"end": 12845,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 12838,
											"end": 12839,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12831,
											"end": 12846,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12865,
											"end": 12869,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12862,
											"end": 12863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12870,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12881,
											"end": 13017,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 12881,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12920,
											"end": 12923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12948,
											"end": 12953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12938,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12938,
											"end": 12977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12957,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12957,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12957,
											"end": 12975,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12957,
											"end": 12975,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12957,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12993,
											"end": 13011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12993,
											"end": 13011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12881,
											"end": 13017,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"getReserves(uint128)": "9abe9dfb",
							"initialize(address,address,address,string,string)": "83b43589",
							"initialized()": "158ef93e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"pair()": "a8aa1b31",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokenX()": "16dc165b",
							"tokenY()": "b7d19fc4",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"tokenId\",\"type\":\"uint128\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"xReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"yReserves\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenX\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenY\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenX\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"midaswap\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Midas LP Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Non-fungible token which wraps the positions of LPs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Midas_V1.2/LPToken.sol\":{\"keccak256\":\"0xa29fd9d9743d9ee9690f38906c604e8a170c2d1a1e4334b0a9ea5d93ed4c65a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df351d5e8b6fd9c5620fb6478666e717e103144075a7e9837a883639e566dda3\",\"dweb:/ipfs/QmYxs7A4vrc8Bn9TY1FJHKkzKdCJPj8hYeHN5ZRD1nPkwn\"]},\"Midas_V1.2/interfaces/IMidasFactory721.sol\":{\"keccak256\":\"0x4350b46c44e63bad342bed14043abb182ac9b4e3b1e7f55c042e36c7e06b3198\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a628778630d6b682e9853c9aee76ec0dedb5860d88b7f0060ae3b07d216ce1f4\",\"dweb:/ipfs/QmUW8aAECn1GMTscgV5WH4tDdoNKSYgn3xdsWKTBLKGYCr\"]},\"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol\":{\"keccak256\":\"0xec9e8802c9a8f80169876ec7364c1c52882bd8db52e4e9dd11495abeaa1f8bd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a077fcede76037f654d2d53173368412cd9313e7a42b07d22de5f609e43edc2d\",\"dweb:/ipfs/Qmd1nzJXz4ai4CRRkx9wg3ZyZaMkJ6gYaCgxbE84VWZQjS\"]},\"Midas_V1.2/interfaces/IMidasPair721.sol\":{\"keccak256\":\"0xccd30d70a48142633f73dcbfccc531b4f887e60978e9a03bd938082e0692d46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://258e8bd5ec33ec333d8891262be44b6338466f5e73e1e27f613929a5fce78fe8\",\"dweb:/ipfs/QmPDxNULsKTgBiCksFAKUHDMEYmcG5UKN9TmpWEV7Y5P4n\"]},\"Midas_V1.2/libraries/ERC721.sol\":{\"keccak256\":\"0x8186411797b8320b057df4846527e72cebad5472344a01f1fbf2bf39617ac239\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://41eacb8c458dc05f75a4e81291564ff20cf595d97f5ca5c1bcec4ea7f9ab17fb\",\"dweb:/ipfs/QmWDK5NBoZ89eMDCSUWDSLLRRJGsbfJNNsLZwTBafVUZsE\"]},\"Midas_V1.2/libraries/Strings.sol\":{\"keccak256\":\"0xf03efcdfc3a48692b15cc7f227769594b8d29c78c52b2135639f3882a52d4015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b02d61d1f8cc1d7413207bb0c112402ae5e5e9ce476ba70a30ee60fa0ee63743\",\"dweb:/ipfs/QmRMqK13LKV4GY9H7vR8GWnQNNMFt1vFzPiFMQMN3e1sZ7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 849,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "_ownerOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 853,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "_balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 902,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "getApproved",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 908,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 218,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 220,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 230,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "pair",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 232,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "tokenX",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 234,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "tokenY",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 236,
								"contract": "Midas_V1.2/LPToken.sol:LPToken",
								"label": "initialized",
								"offset": 20,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Non-fungible token which wraps the positions of LPs",
						"version": 1
					}
				}
			},
			"Midas_V1.2/interfaces/IMidasFactory721.sol": {
				"IMidasFactory721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "oldFee",
									"type": "uint128"
								},
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "newFee",
									"type": "uint128"
								}
							],
							"name": "FeeRateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldLPT",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newLPT",
									"type": "address"
								}
							],
							"name": "LptImplementationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenX",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenY",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "feeRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldPair",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "PairImplementationSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "createERC721Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getLPTokenERC721",
							"outputs": [
								{
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPairERC721",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								}
							],
							"name": "setRoyaltyInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createERC721Pair(address,address)": "c0d768b1",
							"feeRecipient()": "46904840",
							"getLPTokenERC721(address,address)": "65329a4f",
							"getPairERC721(address,address)": "83d16e13",
							"setRoyaltyInfo(address,address)": "dbde34d5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"oldFee\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"newFee\",\"type\":\"uint128\"}],\"name\":\"FeeRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLPT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLPT\",\"type\":\"address\"}],\"name\":\"LptImplementationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenX\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenY\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"PairImplementationSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"createERC721Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getLPTokenERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPairERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/interfaces/IMidasFactory721.sol\":\"IMidasFactory721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"Midas_V1.2/interfaces/IMidasFactory721.sol\":{\"keccak256\":\"0x4350b46c44e63bad342bed14043abb182ac9b4e3b1e7f55c042e36c7e06b3198\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a628778630d6b682e9853c9aee76ec0dedb5860d88b7f0060ae3b07d216ce1f4\",\"dweb:/ipfs/QmUW8aAECn1GMTscgV5WH4tDdoNKSYgn3xdsWKTBLKGYCr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol": {
				"IMidasFlashLoanCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "contract IERC721",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "NFTlist",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "MidasFlashLoanCallback",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Midas",
						"kind": "dev",
						"methods": {},
						"title": "Midas Flashloan Callback Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MidasFlashLoanCallback(address,address,uint256[],bytes)": "f7fc5496"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"NFTlist\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MidasFlashLoanCallback\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Midas\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Midas Flashloan Callback Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface to interact with Midas flash loans\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol\":\"IMidasFlashLoanCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol\":{\"keccak256\":\"0xec9e8802c9a8f80169876ec7364c1c52882bd8db52e4e9dd11495abeaa1f8bd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a077fcede76037f654d2d53173368412cd9313e7a42b07d22de5f609e43edc2d\",\"dweb:/ipfs/Qmd1nzJXz4ai4CRRkx9wg3ZyZaMkJ6gYaCgxbE84VWZQjS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface to interact with Midas flash loans",
						"version": 1
					}
				}
			},
			"Midas_V1.2/interfaces/IMidasPair721.sol": {
				"IMidasPair721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "tradeBin",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "lpTokenID",
									"type": "uint128"
								}
							],
							"name": "BuyNFT",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "lpTokenId",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeCollected",
									"type": "uint256"
								}
							],
							"name": "ClaimFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "lpTokenId",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "binLower",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "binStep",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "binAmount",
									"type": "uint256"
								}
							],
							"name": "ERC20PositionMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "lpTokenId",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "binLower",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "binStep",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_NFTIDs",
									"type": "uint256[]"
								}
							],
							"name": "ERC721PositionMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IMidasFlashLoanCallback",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "NFTIDs",
									"type": "uint256[]"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "lpTokenId",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "feeCollected",
									"type": "uint128"
								}
							],
							"name": "PositionBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "tradeBin",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "lpTokenID",
									"type": "uint128"
								}
							],
							"name": "SellNFT",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "LPtokenID",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "_nftReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountY",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "NFTID",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "LPtokenID",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "collectLPFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountFee",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountY",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectRoyaltyFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountY",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IMidasFactory721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeParameters",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMidasFlashLoanCallback",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "NFTlist",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "id",
									"type": "uint24"
								}
							],
							"name": "getBin",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "reserveX",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "reserveY",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "_lpTokenID",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getBinParamFromLP",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_totalPrice",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGlobalFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "feesYTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "feesYProtocol",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIDs",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "floorPriceID",
									"type": "uint24"
								},
								{
									"internalType": "uint24",
									"name": "bestOfferID",
									"type": "uint24"
								},
								{
									"internalType": "uint128",
									"name": "currentPositionID",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_NFTID",
									"type": "uint256"
								}
							],
							"name": "getLPFromNFT",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_LPtoken",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLPToken",
							"outputs": [
								{
									"internalType": "contract LPToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "_LPtokenID",
									"type": "uint128"
								}
							],
							"name": "getLpInfos",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "originBin",
									"type": "uint24"
								},
								{
									"internalType": "uint24",
									"name": "binStep",
									"type": "uint24"
								},
								{
									"internalType": "uint128",
									"name": "_fee",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "_lpTokenID",
									"type": "uint128"
								}
							],
							"name": "getLpReserve",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountX",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amountY",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "_id",
									"type": "uint24"
								}
							],
							"name": "getPriceFromBin",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_Price",
									"type": "uint128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "reserveX",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "reserveY",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenX",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenY",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24[]",
									"name": "ids",
									"type": "uint24[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintFT",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountIn",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "LPtokenID",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24[]",
									"name": "ids",
									"type": "uint24[]"
								},
								{
									"internalType": "uint256[]",
									"name": "NFTIDs",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isLimited",
									"type": "bool"
								}
							],
							"name": "mintNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "LPtokenID",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "NFTID",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "sellNFT",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_amountOut",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "_newRate",
									"type": "uint128"
								},
								{
									"internalType": "address payable[]",
									"name": "newrecipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "newshares",
									"type": "uint256[]"
								}
							],
							"name": "updateRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "midaswap",
						"kind": "dev",
						"methods": {},
						"title": "Midas Pair Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint128,address,address)": "03f124b1",
							"buyNFT(uint256,address)": "d8db47a7",
							"collectLPFees(uint128,address)": "f069977e",
							"collectProtocolFees()": "a1af5b9a",
							"collectRoyaltyFees()": "0ae645bc",
							"factory()": "c45a0155",
							"feeParameters()": "98c7adf3",
							"flashLoan(address,uint256[],bytes)": "5edb331c",
							"getBin(uint24)": "0abe9688",
							"getBinParamFromLP(uint128,uint256)": "0c8cc759",
							"getGlobalFees()": "a582cdaa",
							"getIDs()": "d55d113d",
							"getLPFromNFT(uint256)": "c88dd271",
							"getLPToken()": "3c1aa925",
							"getLpInfos(uint128)": "0c503e9e",
							"getLpReserve(uint128)": "eef1c5f5",
							"getPriceFromBin(uint24)": "fd31c4ab",
							"getReserves()": "0902f1ac",
							"getTokenX()": "05e8746d",
							"getTokenY()": "da10610c",
							"initialize()": "8129fc1c",
							"mintFT(uint24[],address)": "a3d055a7",
							"mintNFT(uint24[],uint256[],address,bool)": "d1ad1fae",
							"sellNFT(uint256,address)": "5728ad49",
							"updateRoyalty(uint128,address[],uint256[])": "ae3c0a92"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"tradeBin\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpTokenID\",\"type\":\"uint128\"}],\"name\":\"BuyNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpTokenId\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeCollected\",\"type\":\"uint256\"}],\"name\":\"ClaimFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpTokenId\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"binLower\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"binStep\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"binAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20PositionMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpTokenId\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"binLower\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"binStep\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_NFTIDs\",\"type\":\"uint256[]\"}],\"name\":\"ERC721PositionMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IMidasFlashLoanCallback\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"NFTIDs\",\"type\":\"uint256[]\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpTokenId\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"feeCollected\",\"type\":\"uint128\"}],\"name\":\"PositionBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"tradeBin\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpTokenID\",\"type\":\"uint128\"}],\"name\":\"SellNFT\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"LPtokenID\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_nftReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountY\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"NFTID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"LPtokenID\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"collectLPFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountFee\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountY\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectRoyaltyFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountY\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IMidasFactory721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeParameters\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMidasFlashLoanCallback\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"NFTlist\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"id\",\"type\":\"uint24\"}],\"name\":\"getBin\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserveX\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserveY\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_lpTokenID\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getBinParamFromLP\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_totalPrice\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"feesYTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"feesYProtocol\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIDs\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"floorPriceID\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"bestOfferID\",\"type\":\"uint24\"},{\"internalType\":\"uint128\",\"name\":\"currentPositionID\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_NFTID\",\"type\":\"uint256\"}],\"name\":\"getLPFromNFT\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_LPtoken\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPToken\",\"outputs\":[{\"internalType\":\"contract LPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_LPtokenID\",\"type\":\"uint128\"}],\"name\":\"getLpInfos\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"originBin\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"binStep\",\"type\":\"uint24\"},{\"internalType\":\"uint128\",\"name\":\"_fee\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_lpTokenID\",\"type\":\"uint128\"}],\"name\":\"getLpReserve\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountX\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountY\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_id\",\"type\":\"uint24\"}],\"name\":\"getPriceFromBin\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_Price\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserveX\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserveY\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenX\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenY\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24[]\",\"name\":\"ids\",\"type\":\"uint24[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintFT\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountIn\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"LPtokenID\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24[]\",\"name\":\"ids\",\"type\":\"uint24[]\"},{\"internalType\":\"uint256[]\",\"name\":\"NFTIDs\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLimited\",\"type\":\"bool\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"LPtokenID\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"NFTID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"sellNFT\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_amountOut\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_newRate\",\"type\":\"uint128\"},{\"internalType\":\"address payable[]\",\"name\":\"newrecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"newshares\",\"type\":\"uint256[]\"}],\"name\":\"updateRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"midaswap\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Midas Pair Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of Midas Pair contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/interfaces/IMidasPair721.sol\":\"IMidasPair721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Midas_V1.2/LPToken.sol\":{\"keccak256\":\"0xa29fd9d9743d9ee9690f38906c604e8a170c2d1a1e4334b0a9ea5d93ed4c65a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df351d5e8b6fd9c5620fb6478666e717e103144075a7e9837a883639e566dda3\",\"dweb:/ipfs/QmYxs7A4vrc8Bn9TY1FJHKkzKdCJPj8hYeHN5ZRD1nPkwn\"]},\"Midas_V1.2/interfaces/IMidasFactory721.sol\":{\"keccak256\":\"0x4350b46c44e63bad342bed14043abb182ac9b4e3b1e7f55c042e36c7e06b3198\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a628778630d6b682e9853c9aee76ec0dedb5860d88b7f0060ae3b07d216ce1f4\",\"dweb:/ipfs/QmUW8aAECn1GMTscgV5WH4tDdoNKSYgn3xdsWKTBLKGYCr\"]},\"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol\":{\"keccak256\":\"0xec9e8802c9a8f80169876ec7364c1c52882bd8db52e4e9dd11495abeaa1f8bd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a077fcede76037f654d2d53173368412cd9313e7a42b07d22de5f609e43edc2d\",\"dweb:/ipfs/Qmd1nzJXz4ai4CRRkx9wg3ZyZaMkJ6gYaCgxbE84VWZQjS\"]},\"Midas_V1.2/interfaces/IMidasPair721.sol\":{\"keccak256\":\"0xccd30d70a48142633f73dcbfccc531b4f887e60978e9a03bd938082e0692d46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://258e8bd5ec33ec333d8891262be44b6338466f5e73e1e27f613929a5fce78fe8\",\"dweb:/ipfs/QmPDxNULsKTgBiCksFAKUHDMEYmcG5UKN9TmpWEV7Y5P4n\"]},\"Midas_V1.2/libraries/ERC721.sol\":{\"keccak256\":\"0x8186411797b8320b057df4846527e72cebad5472344a01f1fbf2bf39617ac239\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://41eacb8c458dc05f75a4e81291564ff20cf595d97f5ca5c1bcec4ea7f9ab17fb\",\"dweb:/ipfs/QmWDK5NBoZ89eMDCSUWDSLLRRJGsbfJNNsLZwTBafVUZsE\"]},\"Midas_V1.2/libraries/Strings.sol\":{\"keccak256\":\"0xf03efcdfc3a48692b15cc7f227769594b8d29c78c52b2135639f3882a52d4015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b02d61d1f8cc1d7413207bb0c112402ae5e5e9ce476ba70a30ee60fa0ee63743\",\"dweb:/ipfs/QmRMqK13LKV4GY9H7vR8GWnQNNMFt1vFzPiFMQMN3e1sZ7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of Midas Pair contract",
						"version": 1
					}
				}
			},
			"Midas_V1.2/libraries/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern, minimalist, and gas efficient ERC-721 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/libraries/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"Midas_V1.2/libraries/ERC721.sol\":{\"keccak256\":\"0x8186411797b8320b057df4846527e72cebad5472344a01f1fbf2bf39617ac239\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://41eacb8c458dc05f75a4e81291564ff20cf595d97f5ca5c1bcec4ea7f9ab17fb\",\"dweb:/ipfs/QmWDK5NBoZ89eMDCSUWDSLLRRJGsbfJNNsLZwTBafVUZsE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 849,
								"contract": "Midas_V1.2/libraries/ERC721.sol:ERC721",
								"label": "_ownerOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 853,
								"contract": "Midas_V1.2/libraries/ERC721.sol:ERC721",
								"label": "_balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 902,
								"contract": "Midas_V1.2/libraries/ERC721.sol:ERC721",
								"label": "getApproved",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 908,
								"contract": "Midas_V1.2/libraries/ERC721.sol:ERC721",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Modern, minimalist, and gas efficient ERC-721 implementation.",
						"version": 1
					}
				},
				"ERC721TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A generic interface for a contract which properly accepts ERC721 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/libraries/ERC721.sol\":\"ERC721TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"Midas_V1.2/libraries/ERC721.sol\":{\"keccak256\":\"0x8186411797b8320b057df4846527e72cebad5472344a01f1fbf2bf39617ac239\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://41eacb8c458dc05f75a4e81291564ff20cf595d97f5ca5c1bcec4ea7f9ab17fb\",\"dweb:/ipfs/QmWDK5NBoZ89eMDCSUWDSLLRRJGsbfJNNsLZwTBafVUZsE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A generic interface for a contract which properly accepts ERC721 tokens.",
						"version": 1
					}
				}
			},
			"Midas_V1.2/libraries/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas_V1.2/libraries/Strings.sol\":162:4242  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas_V1.2/libraries/Strings.sol\":162:4242  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ba458f2dec1048e7926456f6a003d9be9b26ed851f54fdec6eb659eb271aee8e64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba458f2dec1048e7926456f6a003d9be9b26ed851f54fdec6eb659eb271aee8e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA GASLIMIT DUP16 0x2D 0xEC LT BASEFEE 0xE7 SWAP3 PUSH5 0x56F6A003D9 0xBE SWAP12 0x26 0xED DUP6 0x1F SLOAD REVERT 0xEC PUSH15 0xB659EB271AEE8E64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "162:4080:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;162:4080:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba458f2dec1048e7926456f6a003d9be9b26ed851f54fdec6eb659eb271aee8e64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA GASLIMIT DUP16 0x2D 0xEC LT BASEFEE 0xE7 SWAP3 PUSH5 0x56F6A003D9 0xBE SWAP12 0x26 0xED DUP6 0x1F SLOAD REVERT 0xEC PUSH15 0xB659EB271AEE8E64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "162:4080:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"log10(uint256)": "infinite",
								"log256(uint256)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 162,
									"end": 4242,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba458f2dec1048e7926456f6a003d9be9b26ed851f54fdec6eb659eb271aee8e64736f6c634300080a0033",
									".code": [
										{
											"begin": 162,
											"end": 4242,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 162,
											"end": 4242,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_V1.2/libraries/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"Midas_V1.2/libraries/Strings.sol\":{\"keccak256\":\"0xf03efcdfc3a48692b15cc7f227769594b8d29c78c52b2135639f3882a52d4015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b02d61d1f8cc1d7413207bb0c112402ae5e5e9ce476ba70a30ee60fa0ee63743\",\"dweb:/ipfs/QmRMqK13LKV4GY9H7vR8GWnQNNMFt1vFzPiFMQMN3e1sZ7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							205
						],
						"IERC721": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 206,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 205,
										"src": "271:7:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								205
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 92,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 101,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 110,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 193,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 193,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:1"
									},
									"scope": 193,
									"src": "1809:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2679:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2701:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:1"
									},
									"scope": 193,
									"src": "2644:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:1"
									},
									"scope": 193,
									"src": "3495:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4079:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 193,
									"src": "4062:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:1"
									},
									"scope": 193,
									"src": "4437:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4678:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4718:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:1"
									},
									"scope": 193,
									"src": "4657:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4926:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:1"
									},
									"scope": 193,
									"src": "4885:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 194,
							"src": "250:4725:1",
							"usedErrors": []
						}
					],
					"src": "108:4868:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							205
						]
					},
					"id": 206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 198,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 205,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 206,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"Midas_V1.2/LPToken.sol": {
				"ast": {
					"absolutePath": "Midas_V1.2/LPToken.sol",
					"exportedSymbols": {
						"ERC721": [
							1335
						],
						"IMidasPair721": [
							811
						],
						"LPToken": [
							421
						],
						"Strings": [
							1750
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 207,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "Midas_V1.2/libraries/ERC721.sol",
							"file": "./libraries/ERC721.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 422,
							"sourceUnit": 1356,
							"src": "57:46:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 208,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "65:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas_V1.2/libraries/Strings.sol",
							"file": "./libraries/Strings.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 422,
							"sourceUnit": 1751,
							"src": "104:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 210,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "112:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas_V1.2/interfaces/IMidasPair721.sol",
							"file": "./interfaces/IMidasPair721.sol",
							"id": 213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 422,
							"sourceUnit": 812,
							"src": "153:61:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 212,
										"name": "IMidasPair721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "161:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 215,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "348:6:3"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "348:6:3"
								}
							],
							"canonicalName": "LPToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 214,
								"nodeType": "StructuredDocumentation",
								"src": "216:111:3",
								"text": "@title Midas LP Token\n @author midaswap\n @notice Non-fungible token which wraps the positions of LPs"
							},
							"fullyImplemented": true,
							"id": 421,
							"linearizedBaseContracts": [
								421,
								1335
							],
							"name": "LPToken",
							"nameLocation": "337:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 218,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "376:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "362:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 217,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "362:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 220,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "400:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "386:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 219,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "386:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"id": 223,
									"libraryName": {
										"id": 221,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1750,
										"src": "419:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "413:26:3",
									"typeName": {
										"id": 222,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "431:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 226,
									"libraryName": {
										"id": 224,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1750,
										"src": "450:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "444:26:3",
									"typeName": {
										"id": 225,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 228,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "524:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "499:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 227,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "499:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8aa1b31",
									"id": 230,
									"mutability": "mutable",
									"name": "pair",
									"nameLocation": "572:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "557:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16dc165b",
									"id": 232,
									"mutability": "mutable",
									"name": "tokenX",
									"nameLocation": "620:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "605:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 231,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b7d19fc4",
									"id": 234,
									"mutability": "mutable",
									"name": "tokenY",
									"nameLocation": "670:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "655:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 233,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "655:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 236,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "732:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "720:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 235,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "720:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "780:64:3",
										"statements": [
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 241,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "790:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 242,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "800:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "790:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "790:18:3"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "818:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "832:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "818:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "818:19:3"
											}
										]
									},
									"id": 250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "770:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "762:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:18:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:3"
									},
									"scope": 421,
									"src": "750:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1031:236:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 264,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1049:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1049:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 266,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "1063:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1049:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1041:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1041:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1041:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "1089:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1104:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1089:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1081:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1081:29:3"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 276,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1120:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 277,
														"name": "_pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "1127:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1120:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1120:12:3"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "tokenX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1142:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 281,
														"name": "_tokenX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1151:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1142:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "1142:16:3"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "tokenY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1168:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 285,
														"name": "_tokenY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1177:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1168:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1168:16:3"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1194:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 289,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "1201:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "1194:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1194:12:3"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1216:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 293,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "1225:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "1216:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "1216:16:3"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1242:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1256:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1242:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1242:18:3"
											}
										]
									},
									"functionSelector": "83b43589",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "860:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_pair",
												"nameLocation": "888:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "880:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "_tokenX",
												"nameLocation": "911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "_tokenY",
												"nameLocation": "936:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "928:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "969:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "953:21:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "953:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1000:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "984:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:143:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:0:3"
									},
									"scope": 421,
									"src": "851:416:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1405:506:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 310,
																	"name": "_ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "1423:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 312,
																"indexExpression": {
																	"id": 311,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "1432:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1423:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1452:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1444:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1444:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1444:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1423:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1415:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1415:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1415:40:3"
											},
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "1479:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 353,
														"src": "1465:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 320,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1465:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1489:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1489:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1465:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "1534:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1528:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 325,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1528:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1528:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1528:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1552:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1528:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1902:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1528:376:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 336,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "1642:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 337,
																				"name": "tokenX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "1675:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toHexString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1535,
																			"src": "1675:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$bound_to$_t_address_$",
																				"typeString": "function (address) pure returns (string memory)"
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1675:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "2f",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1721:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																			"typeString": "literal_string \"/\""
																		},
																		"value": "/"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 341,
																				"name": "tokenY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 234,
																				"src": "1750:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toHexString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1535,
																			"src": "1750:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$bound_to$_t_address_$",
																				"typeString": "function (address) pure returns (string memory)"
																			}
																		},
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1750:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "2f",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1796:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																			"typeString": "literal_string \"/\""
																		},
																		"value": "/"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 345,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 303,
																				"src": "1825:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1417,
																			"src": "1825:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1825:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																			"typeString": "literal_string \"/\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																			"typeString": "literal_string \"/\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 334,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1600:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1600:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1600:265:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1572:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 332,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1572:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1572:311:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 308,
												"id": 352,
												"nodeType": "Return",
												"src": "1509:395:3"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1282:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 305,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1360:8:3"
									},
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:17:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1386:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1386:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:3"
									},
									"scope": 421,
									"src": "1273:638:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "1977:72:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 362,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1995:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1995:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 364,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "2009:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1995:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1987:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "1987:27:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2030:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "2024:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2024:18:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1926:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1939:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1931:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1951:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1943:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:29:3"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:0:3"
									},
									"scope": 421,
									"src": "1917:132:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2103:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 380,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2121:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2121:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 382,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "2135:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2121:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2113:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2113:27:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "2156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "2150:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2150:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "2150:14:3"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2064:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2077:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2069:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:17:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2103:0:3"
									},
									"scope": 421,
									"src": "2055:116:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2243:43:3",
										"statements": [
											{
												"expression": {
													"hexValue": "7777772e6d696461737761702e6f72672f",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2260:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_df28fd336d1859bda7acfa8d009dc82b3a8a7eabe1609e7f45ee3bfc37fff727",
														"typeString": "literal_string \"www.midaswap.org/\""
													},
													"value": "www.midaswap.org/"
												},
												"functionReturnParameters": 395,
												"id": 397,
												"nodeType": "Return",
												"src": "2253:26:3"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "2186:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:3"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2228:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2228:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:15:3"
									},
									"scope": 421,
									"src": "2177:109:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2399:83:3",
										"statements": [
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 408,
																"name": "xReserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2410:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 409,
																"name": "yReserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2421:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"id": 410,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2409:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
															"typeString": "tuple(uint128,uint128)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 415,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2467:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 412,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "2448:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 411,
																	"name": "IMidasPair721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "2434:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IMidasPair721_$811_$",
																		"typeString": "type(contract IMidasPair721)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2434:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IMidasPair721_$811",
																	"typeString": "contract IMidasPair721"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getLpReserve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 713,
															"src": "2434:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
																"typeString": "function (uint128) view external returns (uint128,uint128)"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2434:41:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
															"typeString": "tuple(uint128,uint128)"
														}
													},
													"src": "2409:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2409:66:3"
											}
										]
									},
									"functionSelector": "9abe9dfb",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "2301:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2321:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2313:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 400,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2312:17:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "xReserves",
												"nameLocation": "2369:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2361:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 403,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "yReserves",
												"nameLocation": "2388:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2380:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 405,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:38:3"
									},
									"scope": 421,
									"src": "2292:190:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "328:2156:3",
							"usedErrors": []
						}
					],
					"src": "32:2452:3"
				},
				"id": 3
			},
			"Midas_V1.2/interfaces/IMidasFactory721.sol": {
				"ast": {
					"absolutePath": "Midas_V1.2/interfaces/IMidasFactory721.sol",
					"exportedSymbols": {
						"IMidasFactory721": [
							501
						]
					},
					"id": 502,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMidasFactory721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 501,
							"linearizedBaseContracts": [
								501
							],
							"name": "IMidasFactory721",
							"nameLocation": "75:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 429,
									"name": "OwnerChanged",
									"nameLocation": "105:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "134:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "118:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "160:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "144:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:52:4"
									},
									"src": "99:71:4"
								},
								{
									"anonymous": false,
									"id": 435,
									"name": "FeeRateChanged",
									"nameLocation": "182:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "197:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 430,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "237:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "221:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 432,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "196:48:4"
									},
									"src": "176:69:4"
								},
								{
									"anonymous": false,
									"id": 441,
									"name": "PairImplementationSet",
									"nameLocation": "257:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldPair",
												"nameLocation": "295:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "279:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "320:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "304:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:50:4"
									},
									"src": "251:78:4"
								},
								{
									"anonymous": false,
									"id": 447,
									"name": "LptImplementationSet",
									"nameLocation": "341:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldLPT",
												"nameLocation": "378:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "362:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "newLPT",
												"nameLocation": "402:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "386:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:48:4"
									},
									"src": "335:75:4"
								},
								{
									"anonymous": false,
									"id": 459,
									"name": "PairCreated",
									"nameLocation": "422:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "459:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "443:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "491:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "475:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "feeRate",
												"nameLocation": "523:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "507:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "548:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "570:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "562:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:150:4"
									},
									"src": "416:168:4"
								},
								{
									"functionSelector": "c0d768b1",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createERC721Pair",
									"nameLocation": "599:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "633:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "625:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "658:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "650:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:56:4"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "698:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "690:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "715:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "707:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:31:4"
									},
									"scope": 501,
									"src": "590:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46904840",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeRecipient",
									"nameLocation": "736:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "748:2:4"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "782:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "774:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:23:4"
									},
									"scope": 501,
									"src": "727:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "83d16e13",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPairERC721",
									"nameLocation": "812:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "843:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "835:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "867:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "859:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:54:4"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "911:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "903:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:14:4"
									},
									"scope": 501,
									"src": "803:114:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65329a4f",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLPTokenERC721",
									"nameLocation": "932:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "966:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "958:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "990:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "982:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:54:4"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "1034:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1026:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:17:4"
									},
									"scope": 501,
									"src": "923:120:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dbde34d5",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRoyaltyInfo",
									"nameLocation": "1059:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "1091:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1083:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_pair",
												"nameLocation": "1120:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1112:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:58:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:0:4"
									},
									"scope": 501,
									"src": "1050:91:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 502,
							"src": "65:1079:4",
							"usedErrors": []
						}
					],
					"src": "39:1106:4"
				},
				"id": 4
			},
			"Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol": {
				"ast": {
					"absolutePath": "Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol",
					"exportedSymbols": {
						"IERC721": [
							193
						],
						"IMidasFlashLoanCallback": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 503,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 505,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 194,
							"src": "58:73:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 504,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "66:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMidasFlashLoanCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "133:130:5",
								"text": "@title Midas Flashloan Callback Interface\n @author Midas\n @notice Required interface to interact with Midas flash loans"
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IMidasFlashLoanCallback",
							"nameLocation": "273:23:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f7fc5496",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MidasFlashLoanCallback",
									"nameLocation": "312:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "352:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "344:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "376:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "368:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$193",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 193,
														"src": "368:7:5"
													},
													"referencedDeclaration": 193,
													"src": "368:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$193",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "NFTlist",
												"nameLocation": "411:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "392:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 512,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "392:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ArrayTypeName",
													"src": "392:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "443:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "428:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "428:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:119:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "472:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 518,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:9:5"
									},
									"scope": 522,
									"src": "303:178:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "263:220:5",
							"usedErrors": []
						}
					],
					"src": "33:450:5"
				},
				"id": 5
			},
			"Midas_V1.2/interfaces/IMidasPair721.sol": {
				"ast": {
					"absolutePath": "Midas_V1.2/interfaces/IMidasPair721.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC721": [
							193
						],
						"IMidasFactory721": [
							501
						],
						"IMidasFlashLoanCallback": [
							522
						],
						"IMidasPair721": [
							811
						],
						"LPToken": [
							421
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 78,
							"src": "58:70:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 525,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "66:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 194,
							"src": "129:73:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 527,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "137:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas_V1.2/interfaces/IMidasFactory721.sol",
							"file": "./IMidasFactory721.sol",
							"id": 530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 502,
							"src": "203:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 529,
										"name": "IMidasFactory721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "211:16:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas_V1.2/interfaces/IMidasFlashLoanCallback.sol",
							"file": "./IMidasFlashLoanCallback.sol",
							"id": 532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 523,
							"src": "260:70:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 531,
										"name": "IMidasFlashLoanCallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "268:23:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas_V1.2/LPToken.sol",
							"file": "../LPToken.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 422,
							"src": "331:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 533,
										"name": "LPToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "339:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMidasPair721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 535,
								"nodeType": "StructuredDocumentation",
								"src": "372:107:6",
								"text": "@title Midas Pair Interface\n @author midaswap\n @notice Required interface of Midas Pair contract"
							},
							"fullyImplemented": false,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "IMidasPair721",
							"nameLocation": "490:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 545,
									"name": "SellNFT",
									"nameLocation": "517:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftTokenId",
												"nameLocation": "533:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "525:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "553:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "545:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeBin",
												"nameLocation": "566:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "559:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 540,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpTokenID",
												"nameLocation": "584:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "576:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 542,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:70:6"
									},
									"src": "511:84:6"
								},
								{
									"anonymous": false,
									"id": 555,
									"name": "BuyNFT",
									"nameLocation": "607:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftTokenId",
												"nameLocation": "622:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "614:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "642:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "634:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeBin",
												"nameLocation": "655:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "648:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 550,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "648:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpTokenID",
												"nameLocation": "673:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "665:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 552,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:70:6"
									},
									"src": "601:83:6"
								},
								{
									"anonymous": false,
									"id": 566,
									"name": "ERC721PositionMinted",
									"nameLocation": "696:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpTokenId",
												"nameLocation": "725:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "717:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 556,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": false,
												"mutability": "mutable",
												"name": "binLower",
												"nameLocation": "743:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "736:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 558,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "736:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": false,
												"mutability": "mutable",
												"name": "binStep",
												"nameLocation": "760:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "753:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 560,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "753:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "_NFTIDs",
												"nameLocation": "779:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "769:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 562,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 563,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:71:6"
									},
									"src": "690:98:6"
								},
								{
									"anonymous": false,
									"id": 576,
									"name": "ERC20PositionMinted",
									"nameLocation": "800:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpTokenId",
												"nameLocation": "828:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "820:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 567,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": false,
												"mutability": "mutable",
												"name": "binLower",
												"nameLocation": "846:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 569,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "839:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": false,
												"mutability": "mutable",
												"name": "binStep",
												"nameLocation": "863:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "856:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 571,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": false,
												"mutability": "mutable",
												"name": "binAmount",
												"nameLocation": "880:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "872:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:71:6"
									},
									"src": "794:97:6"
								},
								{
									"anonymous": false,
									"id": 584,
									"name": "PositionBurned",
									"nameLocation": "907:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpTokenId",
												"nameLocation": "930:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "922:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 577,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "949:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "941:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeCollected",
												"nameLocation": "964:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "956:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 581,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:56:6"
									},
									"src": "901:77:6"
								},
								{
									"anonymous": false,
									"id": 592,
									"name": "ClaimFee",
									"nameLocation": "990:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpTokenId",
												"nameLocation": "1007:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "999:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 585,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1027:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1019:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeCollected",
												"nameLocation": "1043:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1035:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:58:6"
									},
									"src": "984:73:6"
								},
								{
									"anonymous": false,
									"id": 602,
									"name": "FlashLoan",
									"nameLocation": "1069:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1087:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1079:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1119:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1095:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMidasFlashLoanCallback_$522",
													"typeString": "contract IMidasFlashLoanCallback"
												},
												"typeName": {
													"id": 596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 595,
														"name": "IMidasFlashLoanCallback",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 522,
														"src": "1095:23:6"
													},
													"referencedDeclaration": 522,
													"src": "1095:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMidasFlashLoanCallback_$522",
														"typeString": "contract IMidasFlashLoanCallback"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"indexed": false,
												"mutability": "mutable",
												"name": "NFTIDs",
												"nameLocation": "1139:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1129:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1129:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 599,
													"nodeType": "ArrayTypeName",
													"src": "1129:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:68:6"
									},
									"src": "1063:84:6"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1162:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:2:6"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:6"
									},
									"scope": 811,
									"src": "1153:31:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "05e8746d",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenX",
									"nameLocation": "1203:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1212:2:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1238:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$193",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 607,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 193,
														"src": "1238:7:6"
													},
													"referencedDeclaration": 193,
													"src": "1238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$193",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:9:6"
									},
									"scope": 811,
									"src": "1194:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "da10610c",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenY",
									"nameLocation": "1262:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:2:6"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1297:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 613,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1297:6:6"
													},
													"referencedDeclaration": 77,
													"src": "1297:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:8:6"
									},
									"scope": 811,
									"src": "1253:52:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3c1aa925",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLPToken",
									"nameLocation": "1320:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:6"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1356:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_LPToken_$421",
													"typeString": "contract LPToken"
												},
												"typeName": {
													"id": 620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 619,
														"name": "LPToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 421,
														"src": "1356:7:6"
													},
													"referencedDeclaration": 421,
													"src": "1356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LPToken_$421",
														"typeString": "contract LPToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:9:6"
									},
									"scope": 811,
									"src": "1311:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1381:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1388:2:6"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1414:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMidasFactory721_$501",
													"typeString": "contract IMidasFactory721"
												},
												"typeName": {
													"id": 626,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 625,
														"name": "IMidasFactory721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 501,
														"src": "1414:16:6"
													},
													"referencedDeclaration": 501,
													"src": "1414:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMidasFactory721_$501",
														"typeString": "contract IMidasFactory721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:18:6"
									},
									"scope": 811,
									"src": "1372:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1447:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1458:2:6"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "reserveX",
												"nameLocation": "1529:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1521:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 631,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "reserveY",
												"nameLocation": "1559:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1551:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 633,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:70:6"
									},
									"scope": 811,
									"src": "1438:140:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d55d113d",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIDs",
									"nameLocation": "1592:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1598:2:6"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "floorPriceID",
												"nameLocation": "1668:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1661:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 638,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1661:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "bestOfferID",
												"nameLocation": "1701:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1694:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 640,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1694:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "currentPositionID",
												"nameLocation": "1734:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1726:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 642,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:114:6"
									},
									"scope": 811,
									"src": "1583:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a582cdaa",
									"id": 652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGlobalFees",
									"nameLocation": "1777:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1790:2:6"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "feesYTotal",
												"nameLocation": "1861:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "1853:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 647,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "feesYProtocol",
												"nameLocation": "1893:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "1885:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 649,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:77:6"
									},
									"scope": 811,
									"src": "1768:149:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "98c7adf3",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeParameters",
									"nameLocation": "1933:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:6"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "1972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 654,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "1982:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 656,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "1992:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 658,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:29:6"
									},
									"scope": 811,
									"src": "1924:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0abe9688",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBin",
									"nameLocation": "2016:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2030:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2023:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 662,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2023:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:11:6"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "reserveX",
												"nameLocation": "2065:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2057:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 665,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "reserveY",
												"nameLocation": "2083:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2075:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 667,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:36:6"
									},
									"scope": 811,
									"src": "2007:86:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0c503e9e",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLpInfos",
									"nameLocation": "2108:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_LPtokenID",
												"nameLocation": "2127:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2119:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 671,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:20:6"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "originBin",
												"nameLocation": "2196:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2189:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 674,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2189:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "binStep",
												"nameLocation": "2215:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2208:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 676,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2233:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2225:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 678,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:50:6"
									},
									"scope": 811,
									"src": "2099:140:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fd31c4ab",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFromBin",
									"nameLocation": "2254:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2277:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "2270:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 682,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2270:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:12:6"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_Price",
												"nameLocation": "2338:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "2330:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 685,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:16:6"
									},
									"scope": 811,
									"src": "2245:101:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c88dd271",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLPFromNFT",
									"nameLocation": "2361:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_NFTID",
												"nameLocation": "2382:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2374:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:16:6"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "_LPtoken",
												"nameLocation": "2446:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2438:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 692,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:19:6"
									},
									"scope": 811,
									"src": "2352:105:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0c8cc759",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBinParamFromLP",
									"nameLocation": "2472:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "_lpTokenID",
												"nameLocation": "2498:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2490:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 696,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2519:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2511:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:38:6"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "_totalPrice",
												"nameLocation": "2583:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2575:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 701,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:21:6"
									},
									"scope": 811,
									"src": "2463:133:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eef1c5f5",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLpReserve",
									"nameLocation": "2611:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "_lpTokenID",
												"nameLocation": "2632:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2624:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 705,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:20:6"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "2675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2667:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 708,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "2692:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2684:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 710,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:34:6"
									},
									"scope": 811,
									"src": "2602:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5728ad49",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sellNFT",
									"nameLocation": "2716:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "NFTID",
												"nameLocation": "2732:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2724:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2748:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2740:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2723:29:6"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "_amountOut",
												"nameLocation": "2779:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2771:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 719,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:20:6"
									},
									"scope": 811,
									"src": "2707:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d8db47a7",
									"id": 729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyNFT",
									"nameLocation": "2810:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "NFTID",
												"nameLocation": "2825:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2817:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2840:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2832:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:28:6"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:0:6"
									},
									"scope": 811,
									"src": "2801:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1ad1fae",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "2869:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2904:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2886:21:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint24_$dyn_calldata_ptr",
													"typeString": "uint24[]"
												},
												"typeName": {
													"baseType": {
														"id": 730,
														"name": "uint24",
														"nodeType": "ElementaryTypeName",
														"src": "2886:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"id": 731,
													"nodeType": "ArrayTypeName",
													"src": "2886:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
														"typeString": "uint24[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "NFTIDs",
												"nameLocation": "2936:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2917:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 733,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 734,
													"nodeType": "ArrayTypeName",
													"src": "2917:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2960:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2952:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "isLimited",
												"nameLocation": "2977:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2972:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2972:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:116:6"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "3048:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3040:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "LPtokenID",
												"nameLocation": "3077:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3069:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 743,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3026:70:6"
									},
									"scope": 811,
									"src": "2860:237:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a3d055a7",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintFT",
									"nameLocation": "3116:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3150:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "3132:21:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint24_$dyn_calldata_ptr",
													"typeString": "uint24[]"
												},
												"typeName": {
													"baseType": {
														"id": 747,
														"name": "uint24",
														"nodeType": "ElementaryTypeName",
														"src": "3132:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"id": 748,
													"nodeType": "ArrayTypeName",
													"src": "3132:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
														"typeString": "uint24[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3171:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "3163:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3122:57:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3235:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "3227:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 753,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "LPtokenID",
												"nameLocation": "3265:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "3257:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 755,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:71:6"
									},
									"scope": 811,
									"src": "3107:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03f124b1",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3300:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "LPtokenID",
												"nameLocation": "3322:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 759,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "_nftReceiver",
												"nameLocation": "3349:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3341:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3379:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3371:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:83:6"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "3414:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3406:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 766,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:17:6"
									},
									"scope": 811,
									"src": "3291:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1af5b9a",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocolFees",
									"nameLocation": "3438:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3457:2:6"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "3486:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3478:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 771,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:17:6"
									},
									"scope": 811,
									"src": "3429:66:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f069977e",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectLPFees",
									"nameLocation": "3510:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "LPtokenID",
												"nameLocation": "3532:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3524:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 775,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3552:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3544:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:33:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "amountFee",
												"nameLocation": "3583:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3575:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:19:6"
									},
									"scope": 811,
									"src": "3501:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0ae645bc",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectRoyaltyFees",
									"nameLocation": "3609:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3627:2:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "3656:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3648:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 785,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3647:17:6"
									},
									"scope": 811,
									"src": "3600:65:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae3c0a92",
									"id": 799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyalty",
									"nameLocation": "3684:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "_newRate",
												"nameLocation": "3706:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3698:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 789,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3698:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "newrecipients",
												"nameLocation": "3744:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3717:40:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 791,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3717:15:6",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 792,
													"nodeType": "ArrayTypeName",
													"src": "3717:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "newshares",
												"nameLocation": "3778:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3759:28:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 794,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3759:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 795,
													"nodeType": "ArrayTypeName",
													"src": "3759:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3697:91:6"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:0:6"
									},
									"scope": 811,
									"src": "3675:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5edb331c",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "3813:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3847:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3823:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMidasFlashLoanCallback_$522",
													"typeString": "contract IMidasFlashLoanCallback"
												},
												"typeName": {
													"id": 801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 800,
														"name": "IMidasFlashLoanCallback",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 522,
														"src": "3823:23:6"
													},
													"referencedDeclaration": 522,
													"src": "3823:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMidasFlashLoanCallback_$522",
														"typeString": "contract IMidasFlashLoanCallback"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "NFTlist",
												"nameLocation": "3876:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3857:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 803,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3857:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 804,
													"nodeType": "ArrayTypeName",
													"src": "3857:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3900:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3885:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3885:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:83:6"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3914:0:6"
									},
									"scope": 811,
									"src": "3804:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 812,
							"src": "480:3437:6",
							"usedErrors": []
						}
					],
					"src": "33:3885:6"
				},
				"id": 6
			},
			"Midas_V1.2/libraries/ERC721.sol": {
				"ast": {
					"absolutePath": "Midas_V1.2/libraries/ERC721.sol",
					"exportedSymbols": {
						"ERC721": [
							1335
						],
						"ERC721TokenReceiver": [
							1355
						]
					},
					"id": 1356,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "68:171:7",
								"text": "@notice Modern, minimalist, and gas efficient ERC-721 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)"
							},
							"fullyImplemented": false,
							"id": 1335,
							"linearizedBaseContracts": [
								1335
							],
							"name": "ERC721",
							"nameLocation": "257:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 822,
									"name": "Transfer",
									"nameLocation": "455:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "489:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "473:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "519:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "503:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "547:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "531:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:92:7"
									},
									"src": "449:107:7"
								},
								{
									"anonymous": false,
									"id": 830,
									"name": "Approval",
									"nameLocation": "568:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "602:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "586:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "633:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "617:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "666:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "650:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:98:7"
									},
									"src": "562:113:7"
								},
								{
									"anonymous": false,
									"id": 838,
									"name": "ApprovalForAll",
									"nameLocation": "687:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "727:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "711:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "758:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "742:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "781:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "776:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "776:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:94:7"
									},
									"src": "681:115:7"
								},
								{
									"functionSelector": "c87b56dd",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "998:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1015:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1007:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:12:7"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1048:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1048:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:15:7"
									},
									"scope": 1335,
									"src": "989:74:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 849,
									"mutability": "mutable",
									"name": "_ownerOf",
									"nameLocation": "1296:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1259:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 848,
										"keyType": {
											"id": 846,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1267:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1259:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 847,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1278:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 853,
									"mutability": "mutable",
									"name": "_balanceOf",
									"nameLocation": "1348:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1311:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 852,
										"keyType": {
											"id": 850,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1319:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1311:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 851,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1330:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "1438:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 861,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 858,
																			"src": "1457:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"id": 862,
																				"name": "_ownerOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 849,
																				"src": "1465:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 864,
																			"indexExpression": {
																				"id": 863,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "1474:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1465:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1457:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"id": 866,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1456:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1490:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1482:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 867,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1482:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1482:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1456:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f545f4d494e544544",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1494:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
																"typeString": "literal_string \"NOT_MINTED\""
															},
															"value": "NOT_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
																"typeString": "literal_string \"NOT_MINTED\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1448:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "1448:59:7"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1374:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1390:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1382:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:12:7"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1431:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1423:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:15:7"
									},
									"scope": 1335,
									"src": "1365:149:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1592:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "1610:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1619:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1619:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1610:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a45524f5f41444452455353",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1631:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
																"typeString": "literal_string \"ZERO_ADDRESS\""
															},
															"value": "ZERO_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
																"typeString": "literal_string \"ZERO_ADDRESS\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1602:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "1602:44:7"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 893,
														"name": "_balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "1664:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 895,
													"indexExpression": {
														"id": 894,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1675:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1664:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 882,
												"id": 896,
												"nodeType": "Return",
												"src": "1657:24:7"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1529:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1547:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1539:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:15:7"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1583:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:9:7"
									},
									"scope": 1335,
									"src": "1520:168:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "081812fc",
									"id": 902,
									"mutability": "mutable",
									"name": "getApproved",
									"nameLocation": "1917:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1882:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 901,
										"keyType": {
											"id": 899,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1890:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1882:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 900,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1901:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e985e9c5",
									"id": 908,
									"mutability": "mutable",
									"name": "isApprovedForAll",
									"nameLocation": "1987:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1935:68:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 907,
										"keyType": {
											"id": 903,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1943:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1935:44:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 906,
											"keyType": {
												"id": 904,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1962:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1954:24:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 905,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1973:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "2437:255:7",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2455:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "2447:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 915,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2447:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"baseExpression": {
														"id": 917,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "2463:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 919,
													"indexExpression": {
														"id": 918,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "2472:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2463:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2447:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 922,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2507:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2507:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 924,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "2521:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2507:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 926,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "2530:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 928,
																	"indexExpression": {
																		"id": 927,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "2547:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2530:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 931,
																"indexExpression": {
																	"expression": {
																		"id": 929,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2554:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2554:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2530:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2507:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f545f415554484f52495a4544",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2579:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															},
															"value": "NOT_AUTHORIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2486:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2486:119:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "2486:119:7"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 936,
															"name": "getApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "2616:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 938,
														"indexExpression": {
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "2628:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2616:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 939,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2634:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2616:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2616:25:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 943,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2666:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2673:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "2682:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2657:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2657:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "EmitStatement",
												"src": "2652:33:7"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2385:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2401:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2393:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2418:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2410:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2410:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:29:7"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:7"
									},
									"scope": 1335,
									"src": "2376:316:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "2773:128:7",
										"statements": [
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 956,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "2783:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 960,
															"indexExpression": {
																"expression": {
																	"id": 957,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2800:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2783:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 961,
														"indexExpression": {
															"id": 959,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2812:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2783:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 962,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "2824:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2783:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2783:49:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 966,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2863:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2863:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2875:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2885:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 965,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "2848:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "EmitStatement",
												"src": "2843:51:7"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2707:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2733:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2725:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2748:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2743:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:33:7"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2773:0:7"
									},
									"scope": 1335,
									"src": "2698:203:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "2982:668:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "3000:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 984,
																	"name": "_ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "3008:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 986,
																"indexExpression": {
																	"id": 985,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "3017:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3008:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3000:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57524f4e475f46524f4d",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3022:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93",
																"typeString": "literal_string \"WRONG_FROM\""
															},
															"value": "WRONG_FROM"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93",
																"typeString": "literal_string \"WRONG_FROM\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2992:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "2992:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 992,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "3054:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3068:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3060:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3060:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3060:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3054:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f524543495049454e54",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3072:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
																"typeString": "literal_string \"INVALID_RECIPIENT\""
															},
															"value": "INVALID_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
																"typeString": "literal_string \"INVALID_RECIPIENT\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3046:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3046:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "3046:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1002,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3124:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3124:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1004,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "3138:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3124:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1006,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 908,
																			"src": "3162:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 1008,
																		"indexExpression": {
																			"id": 1007,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "3179:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3162:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1011,
																	"indexExpression": {
																		"expression": {
																			"id": 1009,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3185:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3185:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3162:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3124:72:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1013,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3216:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3216:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1015,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "3230:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1017,
																	"indexExpression": {
																		"id": 1016,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "3242:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3230:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3216:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3124:121:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f545f415554484f52495a4544",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3259:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															},
															"value": "NOT_AUTHORIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
																"typeString": "literal_string \"NOT_AUTHORIZED\""
															}
														],
														"id": 1001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3103:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:182:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "3103:182:7"
											},
											{
												"id": 1033,
												"nodeType": "UncheckedBlock",
												"src": "3461:84:7",
												"statements": [
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": false,
															"src": "3485:18:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1023,
																	"name": "_balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "3485:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1025,
																"indexExpression": {
																	"id": 1024,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "3496:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3485:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "3485:18:7"
													},
													{
														"expression": {
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "3518:16:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1028,
																	"name": "_balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "3518:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1030,
																"indexExpression": {
																	"id": 1029,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "3529:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3518:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1032,
														"nodeType": "ExpressionStatement",
														"src": "3518:16:7"
													}
												]
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1034,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3555:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1036,
														"indexExpression": {
															"id": 1035,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3564:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3555:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "3570:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3555:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "3555:17:7"
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3583:22:7",
													"subExpression": {
														"baseExpression": {
															"id": 1040,
															"name": "getApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "3590:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1041,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3602:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3590:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1046,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "3630:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3636:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3640:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3621:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3621:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "EmitStatement",
												"src": "3616:27:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2916:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2937:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2929:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2951:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2943:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2963:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2955:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2955:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:38:7"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2982:0:7"
									},
									"scope": 1335,
									"src": "2907:743:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "3765:385:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "3788:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3794:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3798:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "3775:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3775:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "3775:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1068,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "3833:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "3833:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3833:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3851:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3833:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1077,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3934:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3934:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1079,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "3966:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1080,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "3992:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "",
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4016:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "3892:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1073,
																				"name": "ERC721TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "3872:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																					"typeString": "type(contract ERC721TokenReceiver)"
																				}
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3872:23:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721TokenReceiver_$1355",
																				"typeString": "contract ERC721TokenReceiver"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "3872:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3872:164:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1083,
																			"name": "ERC721TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "4056:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																				"typeString": "type(contract ERC721TokenReceiver)"
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "4056:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "4056:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "3872:229:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3833:268:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4115:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3812:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3812:331:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "3812:331:7"
											}
										]
									},
									"functionSelector": "42842e0e",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3665:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3699:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "3691:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3721:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "3713:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3741:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "3733:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:68:7"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:0:7"
									},
									"scope": 1335,
									"src": "3656:494:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "4294:387:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1104,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "4317:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "4323:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "4327:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4304:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4304:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "4304:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1110,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "4362:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "4362:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4362:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4380:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4362:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1119,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4463:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4463:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1121,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1094,
																			"src": "4495:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1122,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "4521:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1123,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "4545:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1116,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "4421:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1115,
																				"name": "ERC721TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "4401:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																					"typeString": "type(contract ERC721TokenReceiver)"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4401:23:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721TokenReceiver_$1355",
																				"typeString": "contract ERC721TokenReceiver"
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "4401:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4401:166:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1125,
																			"name": "ERC721TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "4587:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																				"typeString": "type(contract ERC721TokenReceiver)"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "4587:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "4587:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "4401:231:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4362:270:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4646:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4341:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4341:333:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "4341:333:7"
											}
										]
									},
									"functionSelector": "b88d4fde",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4165:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4199:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "4191:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4221:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "4213:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4241:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "4233:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4268:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "4253:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1099,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4253:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4181:97:7"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4294:0:7"
									},
									"scope": 1335,
									"src": "4156:525:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "4965:253:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1141,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "4994:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5009:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "4994:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "5069:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5084:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "5069:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4994:100:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1148,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "5144:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5159:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "5144:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4994:175:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1152,
												"nodeType": "Return",
												"src": "4975:194:7"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4878:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4912:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4905:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4905:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4895:34:7"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4959:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4959:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4958:6:7"
									},
									"scope": 1335,
									"src": "4869:349:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "5468:315:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "5486:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5500:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5492:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5492:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5492:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5486:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f524543495049454e54",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5504:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
																"typeString": "literal_string \"INVALID_RECIPIENT\""
															},
															"value": "INVALID_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
																"typeString": "literal_string \"INVALID_RECIPIENT\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5478:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5478:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "5478:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1172,
																	"name": "_ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "5543:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1174,
																"indexExpression": {
																	"id": 1173,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "5552:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5543:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5567:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5559:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1175,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5559:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5559:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5543:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414c52454144595f4d494e544544",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5571:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b",
																"typeString": "literal_string \"ALREADY_MINTED\""
															},
															"value": "ALREADY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b",
																"typeString": "literal_string \"ALREADY_MINTED\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5535:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "5535:53:7"
											},
											{
												"id": 1188,
												"nodeType": "UncheckedBlock",
												"src": "5654:51:7",
												"statements": [
													{
														"expression": {
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "5678:16:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1183,
																	"name": "_balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "5678:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1185,
																"indexExpression": {
																	"id": 1184,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "5689:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5678:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "5678:16:7"
													}
												]
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1189,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "5715:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1191,
														"indexExpression": {
															"id": 1190,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "5724:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5715:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "5730:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5715:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "5715:17:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5765:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5757:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1196,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5757:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5757:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "5769:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "5773:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1195,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5748:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "5743:33:7"
											}
										]
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5421:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5435:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "5427:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "5439:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5426:24:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5468:0:7"
									},
									"scope": 1335,
									"src": "5412:371:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5833:327:7",
										"statements": [
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5851:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5843:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1210,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5843:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"baseExpression": {
														"id": 1212,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "5859:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1214,
													"indexExpression": {
														"id": 1213,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "5868:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5859:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5843:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "5890:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5907:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5899:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1218,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5899:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5899:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5890:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f545f4d494e544544",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5911:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
																"typeString": "literal_string \"NOT_MINTED\""
															},
															"value": "NOT_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
																"typeString": "literal_string \"NOT_MINTED\""
															}
														],
														"id": 1216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5882:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5882:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "5882:42:7"
											},
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "5990:54:7",
												"statements": [
													{
														"expression": {
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": false,
															"src": "6014:19:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1226,
																	"name": "_balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6014:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1228,
																"indexExpression": {
																	"id": 1227,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "6025:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6014:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1230,
														"nodeType": "ExpressionStatement",
														"src": "6014:19:7"
													}
												]
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6054:19:7",
													"subExpression": {
														"baseExpression": {
															"id": 1232,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "6061:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1234,
														"indexExpression": {
															"id": 1233,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6070:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6061:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "6054:19:7"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6084:22:7",
													"subExpression": {
														"baseExpression": {
															"id": 1237,
															"name": "getApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6091:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1239,
														"indexExpression": {
															"id": 1238,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6103:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6091:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "6084:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1243,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "6131:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6146:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6138:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6138:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6138:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6150:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "6122:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6122:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "EmitStatement",
												"src": "6117:36:7"
											}
										]
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "5798:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5812:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5804:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5804:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5803:12:7"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5833:0:7"
									},
									"scope": 1335,
									"src": "5789:371:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "6414:378:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "6430:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "6434:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6424:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6424:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "6424:13:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1265,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1254,
																			"src": "6469:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "6469:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6469:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6487:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6469:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1274,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6570:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6570:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1278,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6610:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6602:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1276,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6602:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6602:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1280,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "6634:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6658:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1271,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "6528:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1270,
																				"name": "ERC721TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "6508:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																					"typeString": "type(contract ERC721TokenReceiver)"
																				}
																			},
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6508:23:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721TokenReceiver_$1355",
																				"typeString": "contract ERC721TokenReceiver"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "6508:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6508:170:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1283,
																			"name": "ERC721TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "6698:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																				"typeString": "type(contract ERC721TokenReceiver)"
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "6698:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6698:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "6508:235:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6469:274:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6757:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6448:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6448:337:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "6448:337:7"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "6363:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6381:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "6373:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6373:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6393:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "6385:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6372:24:7"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6414:0:7"
									},
									"scope": 1335,
									"src": "6354:438:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "6907:380:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "6923:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "6927:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6917:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6917:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "6917:13:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1307,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6962:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "6962:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6962:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6980:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6962:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1316,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7063:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7063:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7103:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7095:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1318,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7095:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7095:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1322,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "7127:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1323,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "7151:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1313,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1294,
																					"src": "7021:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1312,
																				"name": "ERC721TokenReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "7001:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																					"typeString": "type(contract ERC721TokenReceiver)"
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7001:23:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721TokenReceiver_$1355",
																				"typeString": "contract ERC721TokenReceiver"
																			}
																		},
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "7001:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7001:172:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1325,
																			"name": "ERC721TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "7193:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																				"typeString": "type(contract ERC721TokenReceiver)"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1354,
																		"src": "7193:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function ERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7193:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "7001:237:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6962:276:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e534146455f524543495049454e54",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7252:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															},
															"value": "UNSAFE_RECIPIENT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
																"typeString": "literal_string \"UNSAFE_RECIPIENT\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6941:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6941:339:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "6941:339:7"
											}
										]
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "6807:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6834:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6826:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6826:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6854:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6846:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6846:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6879:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6866:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6866:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6816:73:7"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6907:0:7"
									},
									"scope": 1335,
									"src": "6798:489:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1356,
							"src": "239:7050:7",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC721TokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1336,
								"nodeType": "StructuredDocumentation",
								"src": "7291:182:7",
								"text": "@notice A generic interface for a contract which properly accepts ERC721 tokens.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)"
							},
							"fullyImplemented": true,
							"id": 1355,
							"linearizedBaseContracts": [
								1355
							],
							"name": "ERC721TokenReceiver",
							"nameLocation": "7491:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "7658:69:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1349,
															"name": "ERC721TokenReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "7675:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$1355_$",
																"typeString": "type(contract ERC721TokenReceiver)"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1354,
														"src": "7675:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function ERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "7675:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1352,
												"nodeType": "Return",
												"src": "7668:52:7"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "7526:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "7552:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7552:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "7569:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "7586:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7586:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "7603:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7542:81:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "7650:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7650:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7649:8:7"
									},
									"scope": 1355,
									"src": "7517:210:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1356,
							"src": "7473:256:7",
							"usedErrors": []
						}
					],
					"src": "42:7687:7"
				},
				"id": 7
			},
			"Midas_V1.2/libraries/Strings.sol": {
				"ast": {
					"absolutePath": "Midas_V1.2/libraries/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1750
						]
					},
					"id": 1751,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1358,
								"nodeType": "StructuredDocumentation",
								"src": "127:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1750,
							"linearizedBaseContracts": [
								1750
							],
							"name": "Strings",
							"nameLocation": "170:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1361,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "209:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1750,
									"src": "184:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1359,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "220:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1364,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "267:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1750,
									"src": "244:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1362,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "244:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "285:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "460:660:8",
										"statements": [
											{
												"id": 1415,
												"nodeType": "UncheckedBlock",
												"src": "470:644:8",
												"statements": [
													{
														"assignments": [
															1373
														],
														"declarations": [
															{
																"constant": false,
																"id": 1373,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "502:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1415,
																"src": "494:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1372,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "494:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1374,
														"nodeType": "VariableDeclarationStatement",
														"src": "494:14:8"
													},
													{
														"expression": {
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1375,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "522:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1377,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "537:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1376,
																		"name": "log10",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "531:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "531:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "546:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "531:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "522:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1382,
														"nodeType": "ExpressionStatement",
														"src": "522:25:8"
													},
													{
														"assignments": [
															1384
														],
														"declarations": [
															{
																"constant": false,
																"id": 1384,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "575:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1415,
																"src": "561:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1383,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "561:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1385,
														"nodeType": "VariableDeclarationStatement",
														"src": "561:20:8"
													},
													{
														"expression": {
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1386,
																"name": "buffer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "595:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1389,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "615:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "604:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	},
																	"typeName": {
																		"id": 1387,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "608:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "604:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"src": "595:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"id": 1392,
														"nodeType": "ExpressionStatement",
														"src": "595:27:8"
													},
													{
														"assignments": [
															1394
														],
														"declarations": [
															{
																"constant": false,
																"id": 1394,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "644:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1415,
																"src": "636:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1393,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "636:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1395,
														"nodeType": "VariableDeclarationStatement",
														"src": "636:11:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "717:67:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "735:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "746:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "758:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "762:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "735:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1384,
																"isOffset": false,
																"isSlot": false,
																"src": "746:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1373,
																"isOffset": false,
																"isSlot": false,
																"src": "762:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1394,
																"isOffset": false,
																"isSlot": false,
																"src": "735:3:8",
																"valueSize": 1
															}
														],
														"id": 1396,
														"nodeType": "InlineAssembly",
														"src": "708:76:8"
													},
													{
														"body": {
															"id": 1411,
															"nodeType": "Block",
															"src": "810:267:8",
															"statements": [
																{
																	"expression": {
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "828:5:8",
																		"subExpression": {
																			"id": 1398,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "828:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1400,
																	"nodeType": "ExpressionStatement",
																	"src": "828:5:8"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "911:84:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "941:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "955:5:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "962:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "951:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "951:14:8"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "967:8:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "946:4:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "946:30:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "933:7:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "933:44:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "933:44:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1361,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "967:8:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1394,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "941:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1367,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "955:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1401,
																	"nodeType": "InlineAssembly",
																	"src": "902:93:8"
																},
																{
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "1012:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1021:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1405,
																	"nodeType": "ExpressionStatement",
																	"src": "1012:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1406,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "1045:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1054:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1045:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1410,
																	"nodeType": "IfStatement",
																	"src": "1041:21:8",
																	"trueBody": {
																		"id": 1409,
																		"nodeType": "Break",
																		"src": "1057:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "804:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1412,
														"nodeType": "WhileStatement",
														"src": "797:280:8"
													},
													{
														"expression": {
															"id": 1413,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1097:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1371,
														"id": 1414,
														"nodeType": "Return",
														"src": "1090:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "294:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "398:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "415:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "407:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:15:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "445:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "445:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:15:8"
									},
									"scope": 1750,
									"src": "389:731:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "1299:95:8",
										"statements": [
											{
												"id": 1434,
												"nodeType": "UncheckedBlock",
												"src": "1309:79:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1426,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "1352:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1428,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1420,
																				"src": "1366:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1427,
																			"name": "log256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1749,
																			"src": "1359:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1359:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1375:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1359:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1425,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1436,
																	1515,
																	1535
																],
																"referencedDeclaration": 1515,
																"src": "1340:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1340:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1424,
														"id": 1433,
														"nodeType": "Return",
														"src": "1333:44:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "1126:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1234:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "1246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:15:8"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "1284:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1284:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:15:8"
									},
									"scope": 1750,
									"src": "1225:169:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "1629:363:8",
										"statements": [
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1652:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "1639:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1446,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"nodeType": "VariableDeclarationStatement",
												"src": "1639:19:8"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "buffer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "1668:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1687:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1453,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "1691:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1687:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1700:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1687:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1677:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes memory)"
															},
															"typeName": {
																"id": 1450,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "1681:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1677:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1668:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "1668:34:8"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1460,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "1712:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1462,
														"indexExpression": {
															"hexValue": "30",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1719:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1712:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1712:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "1712:15:8"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1466,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "1737:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1468,
														"indexExpression": {
															"hexValue": "31",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1744:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1737:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1749:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1737:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "1737:15:8"
											},
											{
												"body": {
													"id": 1500,
													"nodeType": "Block",
													"src": "1807:83:8",
													"statements": [
														{
															"expression": {
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1486,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "1821:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1488,
																	"indexExpression": {
																		"id": 1487,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "1828:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1821:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1489,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "1833:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1493,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1490,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "1842:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1850:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1842:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1833:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1821:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1495,
															"nodeType": "ExpressionStatement",
															"src": "1821:33:8"
														},
														{
															"expression": {
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "1868:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1878:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1868:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "1868:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1480,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "1795:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1799:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1795:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1501,
												"initializationExpression": {
													"assignments": [
														1473
													],
													"declarations": [
														{
															"constant": false,
															"id": 1473,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1775:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1501,
															"src": "1767:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1472,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1767:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1479,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1475,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "1783:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1779:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1792:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1779:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1767:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1802:3:8",
														"subExpression": {
															"id": 1483,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "1804:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1485,
													"nodeType": "ExpressionStatement",
													"src": "1802:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1762:128:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1503,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "1907:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1916:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1907:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1919:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1899:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "1899:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "1978:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1971:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1509,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1971:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1445,
												"id": 1513,
												"nodeType": "Return",
												"src": "1964:21:8"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "1400:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1526:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1555:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1547:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1578:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1570:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:53:8"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1614:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1614:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:15:8"
									},
									"scope": 1750,
									"src": "1517:475:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2217:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1528,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "2262:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2254:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1526,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2254:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2254:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2246:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2246:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2246:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1531,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "2270:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1523,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1436,
															1515,
															1535
														],
														"referencedDeclaration": 1515,
														"src": "2234:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1533,
												"nodeType": "Return",
												"src": "2227:59:8"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "1998:141:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2153:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2173:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2165:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:14:8"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2202:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2202:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:15:8"
									},
									"scope": 1750,
									"src": "2144:149:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "2480:850:8",
										"statements": [
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2498:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "2490:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2490:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"nodeType": "VariableDeclarationStatement",
												"src": "2490:14:8"
											},
											{
												"id": 1659,
												"nodeType": "UncheckedBlock",
												"src": "2514:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1546,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2542:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2551:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2557:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2551:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "2542:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1562,
														"nodeType": "IfStatement",
														"src": "2538:103:8",
														"trueBody": {
															"id": 1561,
															"nodeType": "Block",
															"src": "2561:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1551,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2579:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2588:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2594:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "2588:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "2579:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1556,
																	"nodeType": "ExpressionStatement",
																	"src": "2579:17:8"
																},
																{
																	"expression": {
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1557,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "2614:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2624:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "2614:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1560,
																	"nodeType": "ExpressionStatement",
																	"src": "2614:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2658:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2667:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2673:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2667:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "2658:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1579,
														"nodeType": "IfStatement",
														"src": "2654:103:8",
														"trueBody": {
															"id": 1578,
															"nodeType": "Block",
															"src": "2677:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1568,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2695:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2704:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2710:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "2704:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "2695:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1573,
																	"nodeType": "ExpressionStatement",
																	"src": "2695:17:8"
																},
																{
																	"expression": {
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1574,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "2730:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2740:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "2730:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1577,
																	"nodeType": "ExpressionStatement",
																	"src": "2730:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1580,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2774:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2783:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2789:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2783:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "2774:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1596,
														"nodeType": "IfStatement",
														"src": "2770:103:8",
														"trueBody": {
															"id": 1595,
															"nodeType": "Block",
															"src": "2793:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2811:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2820:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2826:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "2820:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "2811:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"nodeType": "ExpressionStatement",
																	"src": "2811:17:8"
																},
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "2846:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2856:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "2846:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "2846:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1597,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2890:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2899:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2905:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2899:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "2890:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1613,
														"nodeType": "IfStatement",
														"src": "2886:100:8",
														"trueBody": {
															"id": 1612,
															"nodeType": "Block",
															"src": "2908:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2926:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2935:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2941:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "2935:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "2926:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "2926:16:8"
																},
																{
																	"expression": {
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1608,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "2960:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2970:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "2960:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1611,
																	"nodeType": "ExpressionStatement",
																	"src": "2960:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1614,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "3003:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3012:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3018:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3012:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "3003:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1630,
														"nodeType": "IfStatement",
														"src": "2999:100:8",
														"trueBody": {
															"id": 1629,
															"nodeType": "Block",
															"src": "3021:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "3039:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3048:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3054:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3048:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "3039:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "3039:16:8"
																},
																{
																	"expression": {
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1625,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "3073:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3083:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "3073:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1628,
																	"nodeType": "ExpressionStatement",
																	"src": "3073:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1631,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "3116:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3125:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3131:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "3125:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "3116:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1647,
														"nodeType": "IfStatement",
														"src": "3112:100:8",
														"trueBody": {
															"id": 1646,
															"nodeType": "Block",
															"src": "3134:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1636,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "3152:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3161:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3167:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3161:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "3152:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1641,
																	"nodeType": "ExpressionStatement",
																	"src": "3152:16:8"
																},
																{
																	"expression": {
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1642,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "3186:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3196:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3186:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1645,
																	"nodeType": "ExpressionStatement",
																	"src": "3186:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1648,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "3229:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3238:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3244:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3238:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "3229:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1658,
														"nodeType": "IfStatement",
														"src": "3225:66:8",
														"trueBody": {
															"id": 1657,
															"nodeType": "Block",
															"src": "3247:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "3265:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3275:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3265:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1656,
																	"nodeType": "ExpressionStatement",
																	"src": "3265:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1660,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1544,
													"src": "3317:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1661,
												"nodeType": "Return",
												"src": "3310:13:8"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2299:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "2427:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2441:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "2433:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:15:8"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "2471:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:9:8"
									},
									"scope": 1750,
									"src": "2418:912:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "3644:596:8",
										"statements": [
											{
												"assignments": [
													1672
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3662:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "3654:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3654:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"nodeType": "VariableDeclarationStatement",
												"src": "3654:14:8"
											},
											{
												"id": 1745,
												"nodeType": "UncheckedBlock",
												"src": "3678:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "3706:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3715:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "3706:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3721:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3706:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1688,
														"nodeType": "IfStatement",
														"src": "3702:98:8",
														"trueBody": {
															"id": 1687,
															"nodeType": "Block",
															"src": "3724:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "3742:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3752:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "3742:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"nodeType": "ExpressionStatement",
																	"src": "3742:13:8"
																},
																{
																	"expression": {
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "3773:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3783:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "3773:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1686,
																	"nodeType": "ExpressionStatement",
																	"src": "3773:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "3817:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3826:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "3817:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3831:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3817:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1703,
														"nodeType": "IfStatement",
														"src": "3813:95:8",
														"trueBody": {
															"id": 1702,
															"nodeType": "Block",
															"src": "3834:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "3852:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3862:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "3852:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1697,
																	"nodeType": "ExpressionStatement",
																	"src": "3852:12:8"
																},
																{
																	"expression": {
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "3882:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3892:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "3882:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1701,
																	"nodeType": "ExpressionStatement",
																	"src": "3882:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "3925:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3934:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3925:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3939:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3925:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1718,
														"nodeType": "IfStatement",
														"src": "3921:95:8",
														"trueBody": {
															"id": 1717,
															"nodeType": "Block",
															"src": "3942:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1709,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "3960:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3970:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "3960:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1712,
																	"nodeType": "ExpressionStatement",
																	"src": "3960:12:8"
																},
																{
																	"expression": {
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "3990:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4000:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "3990:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1716,
																	"nodeType": "ExpressionStatement",
																	"src": "3990:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "4033:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4042:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "4033:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4047:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4033:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1733,
														"nodeType": "IfStatement",
														"src": "4029:95:8",
														"trueBody": {
															"id": 1732,
															"nodeType": "Block",
															"src": "4050:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "4068:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4078:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "4068:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1727,
																	"nodeType": "ExpressionStatement",
																	"src": "4068:12:8"
																},
																{
																	"expression": {
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1728,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "4098:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4108:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "4098:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1731,
																	"nodeType": "ExpressionStatement",
																	"src": "4098:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "4141:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4150:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "4141:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4141:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1744,
														"nodeType": "IfStatement",
														"src": "4137:64:8",
														"trueBody": {
															"id": 1743,
															"nodeType": "Block",
															"src": "4157:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "4175:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4185:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4175:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1742,
																	"nodeType": "ExpressionStatement",
																	"src": "4175:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "4227:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1747,
												"nodeType": "Return",
												"src": "4220:13:8"
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "3336:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "3590:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3605:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "3597:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3597:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3596:15:8"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "3635:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3634:9:8"
									},
									"scope": 1750,
									"src": "3581:659:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1751,
							"src": "162:4080:8",
							"usedErrors": []
						}
					],
					"src": "101:4142:8"
				},
				"id": 8
			}
		}
	}
}