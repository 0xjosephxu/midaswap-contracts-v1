{
	"id": "4b37748eda33e91c2bffa50409e96c4d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Midas \n/// @author midaswap\n/// @notice Contract module that helps prevent reentrant calls to a function\nabstract contract ReentrancyGuardUpgradeable {\n    error ReentrancyGuardUpgradeable__ReentrantCall();\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /// @notice Prevents a contract from calling itself, directly or indirectly.\n    /// Calling a `nonReentrant` function from another `nonReentrant`\n    /// function is not supported. It is possible to prevent this from happening\n    /// by making the `nonReentrant` function external, and making it call a\n    /// `private` function that does the actual work\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        if (_status != _NOT_ENTERED) revert ReentrancyGuardUpgradeable__ReentrantCall();\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardUpgradeable__ReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "midaswap",
						"kind": "dev",
						"methods": {},
						"title": "Midas ",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardUpgradeable__ReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"midaswap\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Midas \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract module that helps prevent reentrant calls to a function\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x664b2508cf1bcebecbdd510714deb54989c53283961e3cee41f67d526feb20d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03ae0c2695a708b920a2925e35fde1b99e6909e71326172e3891fc7e9eff81fa\",\"dweb:/ipfs/QmTrhuZNBBsGEJFtZ9UejtfgKgU4EQ4Tx5bMJAVtzHcEWy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract module that helps prevent reentrant calls to a function",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "Midas_testV1.2/src/libraries/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"ReentrancyGuardUpgradeable": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:116:0",
								"text": "@title Midas \n @author midaswap\n @notice Contract module that helps prevent reentrant calls to a function"
							},
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "192:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 4,
									"name": "ReentrancyGuardUpgradeable__ReentrantCall",
									"nameLocation": "231:41:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "225:50:0"
								},
								{
									"constant": true,
									"id": 7,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1053:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "1028:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1028:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1068:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 10,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1100:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "1075:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1075:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1111:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1135:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "1119:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1119:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "1192:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 15,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1202:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "1202:34:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1158:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:0:0"
									},
									"scope": 48,
									"src": "1149:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "1302:39:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1312:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 23,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1322:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1312:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "1312:22:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1258:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1302:0:0"
									},
									"scope": 48,
									"src": "1249:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "1733:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 31,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1829:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1818:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "1814:79:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 33,
															"name": "ReentrancyGuardUpgradeable__ReentrantCall",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1850:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1850:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 35,
													"nodeType": "RevertStatement",
													"src": "1843:50:0"
												}
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 37,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 38,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1978:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1968:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1968:18:0"
											},
											{
												"id": 41,
												"nodeType": "PlaceholderStatement",
												"src": "1997:1:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "2141:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2151:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2141:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "2141:22:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1347:357:0",
										"text": "@notice Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work"
									},
									"id": 47,
									"name": "nonReentrant",
									"nameLocation": "1718:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:2:0"
									},
									"src": "1709:461:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 49,
							"src": "174:1998:0",
							"usedErrors": [
								4
							]
						}
					],
					"src": "33:2140:0"
				},
				"id": 0
			}
		}
	}
}